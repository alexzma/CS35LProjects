diff --git a/.gitignore b/.gitignore
index b5c2b2c..e1210ea 100644
--- a/.gitignore
+++ b/.gitignore
@@ -5,8 +5,10 @@
 .deps
 .dirstamp
 .gdb-history
+/ABOUT-NLS
 /GNUmakefile
 /INSTALL
+/README-release
 /aclocal.m4
 /config.cache
 /config.log
@@ -15,7 +17,7 @@
 /diffutils-*.tar.gz
 /diffutils-*.tar.xz
 /doc/.gitignore
-/doc/diff.info
+/doc/diffutils.info
 /doc/stamp-vti
 /doc/version.texi
 /gnulib-tests
@@ -29,7 +31,9 @@
 /lib/config.hin
 /lib/configmake.h
 /lib/stamp-h1
+/lib/unistr
 /lib/uniwidth
+/lib/unused-parameter.h
 /lib/warn-on-use.h
 /m4/.gitignore
 /maint.mk
@@ -63,4 +67,5 @@ src/diff
 src/diff3
 src/paths.h
 src/sdiff
+src/version.[ch]
 tests/*.log
diff --git a/.prev-version b/.prev-version
index 8c26915..a3ec5a4 100644
--- a/.prev-version
+++ b/.prev-version
@@ -1 +1 @@
-2.9
+3.2
diff --git a/.x-sc_space_tab b/.x-sc_space_tab
deleted file mode 100644
index 0c887f2..0000000
--- a/.x-sc_space_tab
+++ /dev/null
@@ -1 +0,0 @@
-^gl/lib/.*\.c\.diff$
diff --git a/AUTHORS b/AUTHORS
index 611aa7f..cc41f1d 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -33,7 +33,7 @@ Patrick D'Cruze
 Eli Zaretskii
 
 
-Copyright (C) 2001, 2006, 2009-2010 Free Software Foundation, Inc.
+Copyright (C) 2001, 2006, 2009-2012 Free Software Foundation, Inc.
 
 This file is part of GNU diffutils.
 
diff --git a/ChangeLog-2008 b/ChangeLog-2008
index f42ae0a..cc9d0f7 100644
--- a/ChangeLog-2008
+++ b/ChangeLog-2008
@@ -4265,7 +4265,7 @@ Thu Nov  3 16:30:24 1988  Randall Smith  (randy at gluteus.ai.mit.edu)
 
 	-----
 
-	Copyright (C) 1988-1994, 1997-2002, 2004, 2006, 2009-2010 Free Software
+	Copyright (C) 1988-1994, 1997-2002, 2004, 2006, 2009-2012 Free Software
 	Foundation, Inc.
 
 	Copying and distribution of this file, with or without
diff --git a/HACKING b/HACKING
new file mode 100644
index 0000000..522e0b5
--- /dev/null
+++ b/HACKING
@@ -0,0 +1,591 @@
+Diffutils Contribution Guidelines
+
+
+Prerequisites
+=============
+You will need the "git" version control tools.
+On Fedora-based systems, do "yum install git".
+On Debian-based ones install the "git-core" package.
+Then run "git --version".  If that says it's older than
+version 1.4.4, then you'd do well to get a newer version.
+At worst, just download the latest stable release from
+http://git.or.cz/ and build from source.
+
+For details on building the programs in this package, see
+the file, README-hacking.
+
+
+Use the latest upstream sources
+===============================
+Base any changes you make on the latest upstream sources.
+You can get a copy of the latest with this command:
+
+    git clone git://git.sv.gnu.org/diffutils
+
+That downloads the entire repository, including revision control history
+dating back to 1991.  The repository (the part you download, and which
+resides in diffutils/.git) currently weighs in at about 9MB.  So you don't
+want to download it more often than necessary.  Once downloaded, you
+can get incremental updates by running one of these commands from
+inside your new diffutils/ directory:
+
+If you have made *no* changes:
+    git pull
+
+If you *have* made changes and mistakenly committed them to "master",
+do the following to put your changes on a private branch, "br", and
+to restore master to its unmodified (relative-to-upstream) state:
+    git checkout -b br
+    git checkout master
+    git reset --hard origin
+
+Then "git pull" should work.
+
+
+*Before* you commit changes
+===========================
+
+In this project, we much prefer patches that automatically record
+authorship.  That is important not just to give credit where due, but
+also from a legal standpoint (see below).  To create author-annotated
+patches with git, you must first tell git who you are.  That information
+is best recorded in your ~/.gitconfig file.  Edit that file, creating
+it if needed, and put your name and email address in place of these
+example values:
+
+[user]
+  name = Joe X. User
+  email = joe.user@example.com
+
+
+Your first commit: the quick and dirty way
+==========================================
+First of all, realize that to "commit" a change in git is a purely
+local operation.  It affects only the local repository (the .git/ dir)
+in your current diffutils/ hierarchy.
+
+To try this out, modify a file or two.  If you create a new file, you'll
+need to tell git about it with "git add new-file.c".  Commit all changes
+with "git commit -a".  That prompts you for a log message, which should
+include a one-line summary, a blank line, and ChangeLog-style entries
+for all affected files.  More on that below.
+
+Once your change is committed, you can create a proper patch that includes
+a log message and authorship information as well as any permissions
+changes.  Use this command to save that single, most-recent change set:
+
+  git format-patch --stdout -1 > DIFF
+
+The trouble with this approach is that you've just checked in a change
+(remember, it's only local) on the "master" branch, and that's where new
+changes would normally appear when you pull the latest from "upstream".
+When you "pull" from a remote repository to get the latest, your local
+changes on "master" may well induce conflicts.   For this reason, you
+may want to keep "master" free of any local changes, so that you can
+use it to track unadulterated upstream sources.
+
+However, if your cloned directory is for a one-shot patch submission and
+you're going to remove it right afterwards, then this approach is fine.
+Otherwise, for a more sustainable (and more generally useful, IMHO)
+process, read on about "topic" branches.
+
+
+Make your changes on a private "topic" branch
+=============================================
+So you checked out diffutils like this:
+
+  git clone git://git.sv.gnu.org/diffutils
+
+Now, cd into the diffutils/ directory and run:
+
+  git checkout -b my-topic
+
+That creates the my-topic branch and puts you on it.
+To see which branch you're on, type "git branch".
+Right after the clone, you were on "master" (aka the trunk).
+To get back to the trunk, do this:
+
+  git checkout master
+
+Note 1:
+    Be careful to run "git pull" only when on the "master" branch,
+    not when on a branch.  With newer versions of git, you can't cause
+    trouble if you forget, so this is a good reason to ensure you're
+    using 1.5.3.1 or newer.
+
+Note 2:
+    It's best not to try to switch from one branch to another if
+    you have pending (uncommitted) changes.  Sometimes it works,
+    sometimes the checkout will fail, telling you that your local
+    modifications conflict with changes required to switch branches.
+    However, in any case, you will *not* lose your uncommitted changes.
+
+Anyhow, get back onto your just-created branch:
+
+  git checkout my-topic
+
+Now, modify some file and commit it:
+
+  git commit some-file.c
+
+Personally, no matter what package I'm working on, I find it useful to
+put the ChangeLog entries *only* in the commit log, initially, unless
+I plan to commit/push right away.  Otherwise, I tend to get unnecessary
+merge conflicts with each rebase (see below).  In diffutils, I've gone
+a step further, and no longer maintain an explicit ChangeLog file in
+version control.  Instead, in a git working directory, you can view
+ChangeLog information via "git log".  However, each distribution tarball
+does include a ChangeLog file that is automatically generated from the
+git logs.
+
+So, you've committed a change.  But it's only in your local repository,
+and only on your "my-topic" branch.  Let's say you wait a day, and
+then see that someone else changed something and pushed it to the
+public repository.  Now, you want to update your trunk and "rebase"
+your changes on the branch so that they are once again relative to the
+tip of the trunk.  Currently, your branch is attached to the trunk at
+the next-to-last change set.
+
+First: update the trunk from the public repo:
+[you've first made sure that "git diff" produces no output]
+
+  git checkout master
+  git pull
+
+Now, return to your branch, and "rebase" relative to trunk (master):
+
+  git checkout my-topic
+  git rebase master
+
+If there are no conflicts, this requires no more work from you.
+However, let's say there was one in ChangeLog, since you didn't
+follow my advice and modified it anyway.
+git rebase will tell you there was a conflict and in which
+file, and instruct you to resolve it and then resume with
+"git rebase --continue" once that's done.
+
+So you resolve as usual, by editing ChangeLog (which has the
+usual conflict markers), then type "git rebase --continue".
+That will fail, with a diagnostic telling you to mark
+the file as "conflict resolved" by doing this:
+
+  git add ChangeLog
+
+Then, finally, you can proceed (possibly onto more conflict resolution,
+if there are conflicts in other files):
+
+  git rebase --continue
+
+Once it finishes, your changes on the branch are now relative to
+the tip of the trunk.
+
+Now use git format-patch, as above.
+
+
+Amending the most recent change on your private branch
+======================================================
+Let's say you've just committed a change on your private
+branch, and then realize that something about it is not right.
+It's easy to adjust:
+
+  edit your files # this can include running "git add NEW" or "git rm BAD"
+  git commit --amend -a
+  git format-patch --stdout -1 > your-branch.diff
+
+That replaces the most recent change-set with the revised one.
+
+
+
+diffutils-specific:
+
+No more ChangeLog files
+=======================
+Do not modify any of the ChangeLog files in diffutils.  Starting in
+2010, the policy changed.  Before, we would insert the exact same text
+(or worse, sometimes slightly differing) into both the ChangeLog file
+and the commit log.  Now we put that information only in the commit log,
+and generate the top-level ChangeLog file from logs at "make dist" time.
+As such, there are strict requirements on the form of the commit log
+messages.
+
+
+Commit log requirements
+=======================
+Your commit log should always start with a one-line summary, the second
+line should be blank, and the remaining lines are usually ChangeLog-style
+entries for all affected files.  However, it's fine -- even recommended --
+to write a few lines of prose describing the change, when the summary
+and ChangeLog entries don't give enough of the big picture.  Omit the
+leading TABs that you're used to seeing in a "real" ChangeLog file, but
+keep the maximum line length at 72 or smaller, so that the generated
+ChangeLog lines, each with its leading TAB, will not exceed 80 columns.
+As for the ChangeLog-style content, please follow these guidelines:
+
+  http://www.gnu.org/software/guile/changelogs/guile-changelogs_3.html
+
+Try to make the summary line fit one of the following forms:
+
+  program_name: change-description
+  prog1, prog2: change-description
+  doc: change-description
+  tests: change-description
+  build: change-description
+  maint: change-description
+
+
+Curly braces: use judiciously
+=============================
+Omit the curly braces around an "if", "while", "for" etc. body only when
+that body occupies a single line.  In every other case we require the braces.
+This ensures that it is trivially easy to identify a single-*statement* loop:
+each has only one *line* in its body.
+
+Omitting braces with a single-line body is fine:
+
+     while (expr)
+       single_line_stmt ();
+
+However, the moment your loop/if/else body extends onto a second line,
+for whatever reason (even if it's just an added comment), then you should
+add braces.  Otherwise, it would be too easy to insert a statement just
+before that comment (without adding braces), thinking it is already a
+multi-statement loop:
+
+     while (true)
+       /* comment... */      // BAD: multi-line body without braces
+       single_line_stmt ();
+
+Do this instead:
+
+     while (true)
+       {  /* Always put braces around a multi-line body.  */
+         /* explanation... */
+         single_line_stmt ();
+       }
+
+There is one exception: when the second body line is not at the same
+indentation level as the first body line.
+
+     if (expr)
+       error (0, 0, _("a diagnostic that would make this line"
+                      " extend past the 80-column limit"));
+
+It is safe to omit the braces in the code above, since the
+further-indented second body line makes it obvious that this is still
+a single-statement body.
+
+To reiterate, don't do this:
+
+     if (expr)
+       while (expr_2)        // BAD: multi-line body without braces
+         {
+           ...
+         }
+
+Do this, instead:
+
+     if (expr)
+       {
+         while (expr_2)
+           {
+             ...
+           }
+       }
+
+However, there is one exception in the other direction, when even a
+one-line block should have braces.  That occurs when that one-line,
+brace-less block is an "else" block, and the corresponding "then" block
+*does* use braces.  In that case, either put braces around the "else"
+block, or negate the "if"-condition and swap the bodies, putting the
+one-line block first and making the longer, multi-line block be the
+"else" block.
+
+    if (expr)
+      {
+        ...
+        ...
+      }
+    else
+      x = y;    // BAD: braceless "else" with braced "then"
+
+This is preferred, especially when the multi-line body is more than a
+few lines long, because it is easier to read and grasp the semantics of
+an if-then-else block when the simpler block occurs first, rather than
+after the more involved block:
+
+    if (!expr)
+      x = y;                  /* more readable */
+    else
+      {
+        ...
+        ...
+      }
+
+If you'd rather not negate the condition, then add braces:
+
+    if (expr)
+      {
+        ...
+        ...
+      }
+    else
+      {
+        x = y;
+      }
+
+
+Use SPACE-only indentation in all[*] files
+==========================================
+We use space-only indentation in nearly all files.
+If you use Emacs and your diffutils working directory name matches,
+this code enables the right mode:
+
+  ;; In diffutils, indent with spaces everywhere (not TABs).
+  ;; Exceptions: Makefile and ChangeLog modes.
+  (add-hook 'find-file-hook '(lambda ()
+    (if (and buffer-file-name
+             (string-match "/diffutils\\>" (buffer-file-name))
+             (not (string-equal mode-name "Change Log"))
+             (not (string-equal mode-name "Makefile")))
+        (setq indent-tabs-mode nil))))
+
+[*] Makefile and ChangeLog files are exempt, of course.
+
+[FIXME: suggest vim syntax to do same thing, if it can be done safely.
+ Most distros now "set nomodeline" by default for a good reason. ]
+
+
+Send patches to the address listed in --help output
+===================================================
+Please follow the guidelines in the "Sending your patches." section of
+git's own SubmittingPatches:
+
+  http://git.kernel.org/?p=git/git.git;a=blob;f=Documentation/SubmittingPatches
+
+
+Add documentation
+=================
+If you add a feature or change some user-visible aspect of a program,
+document it.  If you add an option, document it both in --help output
+(i.e., in the usage function that generates the --help output) and in
+doc/*.texi.  The man pages are generated from --help output, so
+you shouldn't need to change anything under man/.  User-visible changes
+are usually documented in NEWS, too.
+
+When writing prose (documentation, comments, log entries), use an
+active voice, not a passive one.  I.e., say "print the frobnozzle",
+not "the frobnozzle will be printed".
+
+Please add comments per the GNU Coding Standard:
+  http://www.gnu.org/prep/standards/html_node/Comments.html
+
+
+Minor syntactic preferences
+===========================
+[I hesitate to write this one down, because it appears to be an
+ acquired taste, at least for native-English speakers.  It seems odd
+ (if not truly backwards) to nearly anyone who doesn't have a strong
+ mathematics background and perhaps a streak of something odd in their
+ character ;-) ]
+In writing arithmetic comparisons, use "<" and "<=" rather than
+">" and ">=".  For some justification, read this:
+  http://thread.gmane.org/gmane.comp.version-control.git/3903/focus=4126
+
+const placement:
+Write "Type const *var", not "const Type *var".
+FIXME: dig up justification
+
+
+Be nice to translators
+======================
+Don't change translatable strings if you can avoid it.
+If you must rearrange individual lines (e.g., in multi-line --help
+strings), extract and create new strings, rather than extracting
+and moving into existing blocks.  This avoids making unnecessary
+work for translators.
+
+
+Add tests
+==========
+Nearly every significant change must be accompanied by a test suite
+addition that exercises it.  If you fix a bug, add at least one test that
+fails without the patch, but that succeeds once your patch is applied.
+If you add a feature, add tests to exercise as much of the new code
+as possible. Note to run tests/new-test in isolation you can do:
+
+  (cd tests && make check TESTS=new-test VERBOSE=yes)
+
+There are many tests in the tests/ directories.  Use one of the
+init.sh-using scripts as a template.
+
+If writing tests is not your thing, don't worry too much about it,
+but do provide scenarios, input/output pairs, or whatever, along with
+examples of running the tool to demonstrate the new or changed feature,
+and someone else will massage that into a test (writing portable tests
+can be a challenge).
+
+
+Copyright assignment
+====================
+If your change is significant (i.e., if it adds more than ~10 lines),
+then you'll have to have a copyright assignment on file with the FSF.
+Since that involves first an email exchange between you and the FSF,
+and then the exchange (FSF to you, then back) of an actual sheet of paper
+with your signature on it, and finally, some administrative processing
+in Boston, the process can take a few weeks.
+
+The forms to choose from are in gnulib's doc/Copyright/ directory.
+If you want to assign a single change, you should use the file,
+doc/Copyright/request-assign.changes:
+
+    http://git.sv.gnu.org/gitweb/?p=gnulib.git;a=blob;f=doc/Copyright/request-assign.changes;hb=HEAD
+
+If you would like to assign past and future contributions to a project,
+you'd use doc/Copyright/request-assign.future:
+
+    http://git.sv.gnu.org/gitweb/?p=gnulib.git;a=blob;f=doc/Copyright/request-assign.future;hb=HEAD
+
+You may make assignments for up to four projects at a time.
+
+In case you're wondering why we bother with all of this, read this:
+
+    http://www.gnu.org/licenses/why-assign.html
+
+
+Run "make syntax-check", or even "make distcheck"
+================================================
+Making either of those targets runs many integrity and
+project-specific policy-conformance tests.  For example, the former
+ensures that you add no trailing blanks and no uses of certain deprecated
+functions.  The latter performs all "syntax-check" tests, and also
+ensures that the build completes with no warnings when using a certain
+set of gcc -W... options.  Don't even bother running "make distcheck"
+unless you have a reasonably up to date installation including recent
+versions of gcc and the linux kernel, and modern GNU tools.
+
+
+Ensure that your changes are indented properly.
+===============================================
+Format the code the way GNU indent does.
+In a file with the "indent-tabs-mode: nil" directive at the end,
+running "indent --no-tabs" should induce no change.
+With other files, there will be some existing differences.
+Try not to add any more.
+
+
+Avoid trailing white space
+==========================
+You may notice that the only trailing blanks in diffutils'
+version-controlled files are in a single directory: tests/pr,
+which contains expected output from various invocations of pr.
+
+Do not add any more trailing blanks anywhere.  While "make syntax-check"
+will alert you if you slip up, it's better to nip any problem in the
+bud, as you're typing.  A good way to help you adapt to this rule is
+to configure your editor to highlight any offending characters in the
+files you edit.  If you use Emacs, customize its font-lock mode (FIXME:
+provide more detail) or try one of its whitespace packages.  This appears
+to be the one that will end up in emacs 23:
+
+    http://www.emacswiki.org/emacs/WhiteSpace
+
+[that page says its version also works with emacs 21 and 22]
+If you use vim, add this to ~/.vimrc:
+
+    let c_space_errors=1
+    highlight RedundantSpaces ctermbg=red guibg=red
+    match RedundantSpaces /\s\+$\| \+\ze\t/
+
+
+Git can help too, by stopping you from committing any change that would
+add trailing blanks.  The example pre-commit hook contains code to check
+for trailing whitespace and spaces before tabs; enable it by moving it
+to the right place and making sure it is executable:
+
+    mv .git/hooks/pre-commit.sample .git/hooks/pre-commit
+
+With a repository created by git-1.5.6 or older, use this command:
+
+    chmod +x .git/hooks/pre-commit
+
+To manually check for whitespace errors before committing, you can use
+
+    git diff --check
+
+Git also has some settings to enable suitable internal whitespace checks.
+See the manpage for git-apply for details.
+
+
+-------------------------------------------
+
+Miscellaneous useful git commands
+=================================
+
+  * gitk: give a graphical view of the revision graph of the current branch
+  * gitk --all: same, but display all branches
+  * git log: to get most of the same info in text form
+  * git log -p: same as above, but with diffs
+  * git log -p SOME_FILE: same as above, but limit to SOME_FILE
+  * git log -p -2 SOME_FILE: same as above, but print only two deltas
+  * git log -p -1: print the most recently committed change set
+  * git format-patch --stdout -1 > FILE: output the most recently committed
+      change set, in a format suitable to be submitted and/or applied via
+      "git am FILE".
+  * git reset --soft HEAD^: Commit the delta required to restore
+      state to the revision just before HEAD (i.e., next-to-last).
+  * git rebase -i master: run this from on a branch, and it gives
+      you an interface with which you can reorder and modify arbitrary
+      change sets on that branch.
+
+  * if you "misplace" a change set, i.e., via git reset --hard ..., so that
+    it's no longer reachable by any branch, you can use "git fsck" to find
+    its SHA1 and then tag it or cherry-pick it onto an existing branch.
+    For example, run this:
+      git fsck --lost-found HEAD && cd .git/lost-found/commit \
+        && for i in *; do git show $i|grep SOME_IDENTIFYING_STRING \
+        && echo $i; done
+    The "git fsck ..." command creates the .git/lost-found/... hierarchy
+    listing all unreachable objects.  Then the for loop
+    print SHA1s for commits that match via log or patch.
+    For example, say that found 556fbb57216b119155cdda824c98dc579b8121c8,
+    you could run "git show 556fbb57216b119" to examine the change set,
+    or "git checkout -b found 556fbb5721" to give it a branch name.
+    Finally, you might run "git checkout master && git cherry-pick 556fbb5721"
+    to put that change on the tip of "master".
+
+-------------------------------------------
+
+Finding things to do
+====================
+If you don't know where to start, check out the TODO file for projects
+that look like they're at your skill-/interest-level.  Another good
+option is always to improve tests.  You never know what you might
+uncover when you improve test coverage, and even if you don't find
+any bugs your contribution is sure to be appreciated.
+
+A good way to quickly assess current test coverage is to use "lcov"
+to generate HTML coverage reports.  Follow these steps:
+
+  # configure with coverage information
+  ./configure CFLAGS="-g -fprofile-arcs -ftest-coverage"
+  make
+  # run whatever tests you want, i.e.:
+  make check
+  # run lcov
+  lcov -t diffutils -q -d lib -b lib -o lib.lcov -c
+  lcov -t diffutils -q -d src -b src -o src.lcov -c
+  # generate HTML from the output
+  genhtml -p `pwd` -t diffutils -q --output-directory lcov-html *.lcov
+
+Then just open the index.html file (in the generated lcov-html directory)
+in your favorite web browser.
+
+========================================================================
+Copyright (C) 2009-2012 Free Software Foundation, Inc.
+
+Permission is granted to copy, distribute and/or modify this document
+under the terms of the GNU Free Documentation License, Version 1.3 or
+any later version published by the Free Software Foundation; with no
+Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
+Texts.  A copy of the license is included in the "GNU Free
+Documentation License" file as part of this distribution.
diff --git a/Makefile.am b/Makefile.am
index 9d86cb1..73cac49 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,6 +1,6 @@
 # Main Automakefile for GNU diffutils.
 
-# Copyright (C) 2001-2002, 2004, 2006, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001-2002, 2004, 2006, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
diff --git a/NEWS b/NEWS
index 5fe01b7..808c603 100644
--- a/NEWS
+++ b/NEWS
@@ -1,5 +1,33 @@
 GNU diffutils NEWS                                    -*- outline -*-
 
+* Noteworthy changes in release ?.? (????-??-??) [?]
+
+
+* Noteworthy changes in release 3.2 (2011-09-02) [stable]
+
+** Changes in behavior
+
+  --ignore-file-name-case now applies at the top level too.
+  For example, "diff dir inIt" might compare "dir/Init" to "inIt".
+
+** New features
+
+  diff and sdiff have a new option --ignore-trailing-space (-Z).
+
+** Packaging
+
+  The texinfo documentation no longer specifies "front-cover" or "back-cover"
+  texts, so that it may now be included in Debian's "main" section.
+
+
+* Noteworthy changes in release 3.1 (2011-08-10) [stable]
+
+** Bug fixes
+
+  diff no longer reports spurious differences merely because two entries
+  in the same directory have names that compare equal in the current
+  locale, or compare equal because --ignore-file-name-case was given.
+
 * Noteworthy changes in release 3.0 (2010-05-03) [stable]
 
 ** Bug fixes
@@ -30,7 +58,7 @@ GNU diffutils NEWS                                    -*- outline -*-
 
   New diff option --suppress-blank-empty.
 
-  Bring back support for `diff -NUM', where NUM is a number,
+  Bring back support for 'diff -NUM', where NUM is a number,
   even when conforming to POSIX 1003.1-2001.  This change reverts to
   the behavior of GNU diff 2.7 and earlier.  This is a change only
   when conforming to POSIX 1003.1-2001; there is no effect when
@@ -66,7 +94,7 @@ User-visible changes in version 2.8.6:
   that 'patch' creates to indicate nonexistent backups) are now
   treated as nonexistent when they are in the 'backup' file position.
 
-* If multiple SKIP values are given to cmp, e.g., `cmp -i 10 -i 20',
+* If multiple SKIP values are given to cmp, e.g., 'cmp -i 10 -i 20',
   cmp now uses the maximal value instead of the last one.
 
 * diff now omits the ".000000000" on hosts that do not support
@@ -106,7 +134,7 @@ User-visible changes in version 2.8:
 * cmp and diff now conform to POSIX 1003.1-2001 (IEEE Std 1003.1-2001)
   if the underlying system conforms to POSIX and if the _POSIX2_VERSION
   environment variable is set to 200112.  Conformance removes support
-  for `diff -NUM', where NUM is a number.  Use -C NUM or -U NUM instead.
+  for 'diff -NUM', where NUM is a number.  Use -C NUM or -U NUM instead.
 * cmp now supports trailing operands SKIP1 and SKIP2, like BSD cmp.
 * cmp -i or --ignore-initial now accepts SKIP1:SKIP2 option value.
 * New cmp option: -n or --bytes.
@@ -140,13 +168,13 @@ User-visible changes in version 2.8:
   category if possible, instead of using native byte comparison.
 * Recursive diffs now detect and report directory loops.
 * Diff printf specs can now use the "0" and "'" flags.
-* The new sdiff interactive command `ed' precedes each version with a header.
+* The new sdiff interactive command 'ed' precedes each version with a header.
 * On 64-bit hosts, files larger than 2 GB can be compared.
 * Some internationalization support has been added, but multibyte locales
   are still not completely supported yet.
 * Some diagnostics have been reworded slightly for consistency.
-  Also, `diff -D FOO' now outputs `/* ! FOO */' instead of `/* not FOO */'.
-* The `patch' part of the manual now describes `patch' version 2.5.4.
+  Also, 'diff -D FOO' now outputs '/* ! FOO */' instead of '/* not FOO */'.
+* The 'patch' part of the manual now describes 'patch' version 2.5.4.
 * Man pages are now distributed and installed.
 * There is support for DJGPP; see the 'ms' subdirectory and the files
   m4/dos.m4 and */setmode.*.
@@ -184,7 +212,7 @@ User-visible changes in version 2.4:
       A printf spec followed by one of the following letters
       causes the integer corresponding to that letter to be
       printed according to the printf specification.
-      E.g. `%5df' prints the number of the first line in the
+      E.g. '%5df' prints the number of the first line in the
       group in the old file using the "%5d" format.
 	e: line number just before the group in old file; equals f - 1
 	f: first line number in group in the old file
@@ -197,9 +225,9 @@ User-visible changes in version 2.4:
       constant or a single letter interpreted as above.  T and E are
       arbitrary format strings.  This format spec is equivalent to T if
       A's value equals B's; otherwise it is equivalent to E.  For
-      example, `%(N=0?no:%dN) line%(N=1?:s)' is equivalent to `no lines'
+      example, '%(N=0?no:%dN) line%(N=1?:s)' is equivalent to 'no lines'
       if N (the number of lines in the group in the new file) is 0,
-      to `1 line' if N is 1, and to `%dN lines' otherwise.
+      to '1 line' if N is 1, and to '%dN lines' otherwise.
   %c'C'
       where C is a single character, stands for the character C.  C may not
       be a backslash or an apostrophe.  E.g. %c':' stands for a colon.
@@ -209,7 +237,7 @@ User-visible changes in version 2.4:
 * New diff line format specifications:
   <PRINTF_SPEC>n
       The line number, printed with <PRINTF_SPEC>.
-      E.g. `%5dn' prints the line number with a "%5d" format.
+      E.g. '%5dn' prints the line number with a "%5d" format.
   %c'C'
   %c'\O'
       The character C, or with octal code O, as above.
@@ -221,14 +249,14 @@ User-visible changes in version 2.4:
 * cmp and diff now conform to POSIX 1003.2-1992 (ISO/IEC 9945-2:1993)
   if the underlying system conforms to POSIX:
   - Some messages' wordings are changed in minor ways.
-  - ``White space'' is now whatever C's `isspace' says it is.
-  - When comparing directories, if `diff' finds a file that is not a regular
+  - "White space" is now whatever C's 'isspace' says it is.
+  - When comparing directories, if 'diff' finds a file that is not a regular
     file or a directory, it reports the file's type instead of diffing it.
     (As usual, it follows symbolic links first.)
   - When signaled, sdiff exits with the signal's status, not with status 2.
 * Now portable to hosts where int, long, pointer, etc. are not all the same
   size.
-* `cmp - -' now works like `diff - -'.
+* 'cmp - -' now works like 'diff - -'.
 
 
 User-visible changes in version 2.3:
@@ -281,7 +309,7 @@ User-visible changes in version 2.0:
 
 
 
-Copyright (C) 1993-1994, 1998, 2001-2002, 2004, 2006, 2009-2010 Free Software
+Copyright (C) 1993-1994, 1998, 2001-2002, 2004, 2006, 2009-2012 Free Software
 Foundation, Inc.
 
 This file is part of GNU Diffutils.
diff --git a/README b/README
index 061ec8a..ddab36e 100644
--- a/README
+++ b/README
@@ -8,10 +8,10 @@ Please see the file COPYING for copying conditions.
 
 Please see the file doc/version.texi for version information.
 
-Please see the file doc/diff.texi (or doc/diff.info) for documentation
-that can be printed with TeX, or read with the `info' program or with
-Emacs's `M-x info'.  Brief man pages are in man/*, but they are no
-substitute for the documentation.
+Please see the file doc/diffutils.texi (or doc/diffutils.info) for
+documentation that can be printed with TeX, or read with the 'info'
+program or with Emacs's 'M-x info'.  Brief man pages are in man/*,
+but they are no substitute for the documentation.
 
 Please see the file ABOUT-NLS for notes about translations.
 
@@ -21,7 +21,7 @@ command "./configure --help" lists the supported --enable and --with
 options.
 
 If you have a problem with internationalization, you might be able to
-work around it as described in ABOUT-NLS by invoking `./configure
+work around it as described in ABOUT-NLS by invoking './configure
 --disable-nls'.  Many of the problems arise from dynamic linking
 issues on non-GNU platforms (e.g. with the iconv library).  Such
 problems tend to be shared by other GNU applications on these
@@ -44,24 +44,21 @@ this distribution:
 * help2man 1.33   <ftp://ftp.gnu.org/gnu/help2man/help2man-1.33.1.tar.gz>
 * Texinfo 4.7     <ftp://ftp.gnu.org/gnu/texinfo/texinfo-4.7.tar.gz>
 
+For any copyright year range specified as YYYY-ZZZZ in this package
+note that the range specifies every single year in that closed interval.
+
 Please report bugs to <bug-gnu-utils@gnu.org>.
 
 -----
 
-Copyright (C) 1992, 1998, 2001-2002, 2004, 2009-2010 Free Software Foundation,
+Copyright (C) 1992, 1998, 2001-2002, 2004, 2009-2012 Free Software Foundation,
 Inc.
 
 This file is part of GNU Diffutils.
 
-This program is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
-
-This program is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with this program.  If not, see <http://www.gnu.org/licenses/>.
+Permission is granted to copy, distribute and/or modify this document
+under the terms of the GNU Free Documentation License, Version 1.3 or
+any later version published by the Free Software Foundation; with no
+Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
+Texts.  A copy of the license is included in the "GNU Free
+Documentation License" file as part of this distribution.
diff --git a/README-hacking b/README-hacking
index 3dd1ac4..e276592 100644
--- a/README-hacking
+++ b/README-hacking
@@ -2,55 +2,99 @@
 
 These notes intend to help people working on the checked-out sources.
 These requirements do not apply when building from a distribution tarball.
+See also HACKING for more detailed contribution guidelines.
 
 * Requirements
 
 We've opted to keep only the highest-level sources in the GIT repository.
 This eases our maintenance burden, (fewer merges etc.), but imposes more
 requirements on anyone wishing to build from the just-checked-out sources.
-For example, you have to use the latest stable versions of the maintainer
-tools we depend upon, including:
-
-- Automake <http://www.gnu.org/software/automake/>
-- Autoconf <http://www.gnu.org/software/autoconf/>
-- Gettext <http://www.gnu.org/software/gettext/>
-- Gzip <http://www.gnu.org/software/gzip/>
-- M4 <http://www.gnu.org/software/m4/>
-- Tar <http://www.gnu.org/software/tar/>
-- Wget <http://www.gnu.org/software/wget/>
+Note the requirements to build the released archive are much less and
+are just the requirements of the standard ./configure && make procedure.
+Specific development tools and versions will be checked for and listed by
+the bootstrap script.  See README-prereq for specific notes on obtaining
+these prerequisite tools.
 
 Valgrind <http://valgrind.org/> is also highly recommended, if
 Valgrind supports your architecture.
 
-Only building the initial full source tree will be a bit painful.
-Later, a plain `cvs update -dP && make' should be sufficient.
+While building from a just-cloned source tree may require installing a
+few prerequisites, later, a plain 'git pull && make' should be sufficient.
+
+* First GIT checkout
+
+You can get a copy of the source repository like this:
+
+        $ git clone git://git.sv.gnu.org/diffutils
+        $ cd diffutils
 
-* First checkout
+As an optional step, if you already have a copy of the gnulib git
+repository on your hard drive, then you can use it as a reference to
+reduce download time and disk space requirements:
 
-Obviously, if you are reading these notes, you did manage to check out
-this package from CVS.  The next step is to get other files needed to
-build, which are extracted from other source packages:
+        $ export GNULIB_SRCDIR=/path/to/gnulib
 
-	$ ./bootstrap
+The next step is to get and check other files needed to build,
+which are extracted from other source packages:
+
+        $ ./bootstrap
+
+To use the most-recent gnulib (as opposed to the gnulib version that
+the package last synchronized to), do this next:
+
+        $ git submodule foreach git pull origin master
+        $ git commit -m 'build: update gnulib submodule to latest' gnulib
 
 And there you are!  Just
 
-	$ ./configure
-	$ make
-	$ make check
+        $ ./configure --quiet #[--enable-gcc-warnings] [*]
+        $ make
+        $ make check
 
 At this point, there should be no difference between your local copy,
-and the master:
+and the GIT master copy:
 
-	$ cvs diff -pu
+        $ git diff
 
 should output no difference.
 
 Enjoy!
 
+[*] The --enable-gcc-warnings option is useful only with glibc
+and with a very recent version of gcc.  You'll probably also have
+to use recent system headers.  If you configure with this option,
+and spot a problem, please be sure to send the report to the bug
+reporting address of this package, and not to that of gnulib, even
+if the problem seems to originate in a gnulib-provided file.
+
+* Submitting patches
+
+If you develop a fix or a new feature, please send it to the
+appropriate bug-reporting address as reported by the --help option of
+each program.  One way to do this is to use vc-dwim
+<http://www.gnu.org/software/vc-dwim/>), as follows.
+
+  Run the command "vc-dwim --help", copy its definition of the
+  "git-changelog-symlink-init" function into your shell, and then run
+  this function at the top-level directory of the package.
+
+  Edit the (empty) ChangeLog file that this command creates, creating a
+  properly-formatted entry according to the GNU coding standards
+  <http://www.gnu.org/prep/standards/html_node/Change-Logs.html>.
+
+  Make your changes.
+
+  Run the command "vc-dwim" and make sure its output (the diff of all
+  your changes) looks good.
+
+  Run "vc-dwim --commit".
+
+  Run the command "git format-patch --stdout -1", and email its output
+  in, using the output's subject line.
+
 -----
 
-Copyright (C) 2002-2007, 2009-2010 Free Software Foundation, Inc.
+Copyright (C) 2002-2007, 2009-2012 Free Software Foundation, Inc.
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
diff --git a/README-release b/README-release
deleted file mode 100644
index 155d97a..0000000
--- a/README-release
+++ /dev/null
@@ -1,84 +0,0 @@
-Here are most of the steps we (maintainers) follow when making a release.
-
-* start from a clean, up-to-date git directory.
-
-    git checkout master; git pull
-
-* Run ./configure && make maintainer-clean
-
-* Ensure that the desired versions of autoconf, automake, etc.
-  are in your PATH.  See the buildreq list in bootstrap.conf for
-  the complete list.
-
-* Ensure that you're on "master" with no uncommitted diffs.
-  This should produce no output: git checkout master; git diff
-
-* Run bootstrap one last time.  This downloads any new translations:
-
-    ./bootstrap
-
-* Pre-release testing:
-  Ensure that make check syntax-check succeeds.
-
-* Run "make distcheck"
-
-* Set the date, version number, and release type [stable/alpha/beta] on
-  line 3 of NEWS, commit that, and tag the release by running e.g.,
-
-    build-aux/do-release-commit-and-tag 2.9 stable
-
-* Run the following to create release tarballs.  Your choice selects the
-  corresponding upload-to destination in the emitted gnupload command.
-  The different destinations are specified in cfg.mk.  See the definitions
-  of gnu_ftp_host-{alpha,beta,stable}.
-
-    # "TYPE" must be stable, beta or alpha
-    make TYPE
-
-* Test the tarball.  copy it to a few odd-ball systems and ensure that
-  it builds and passes all tests.
-
-* While that's happening, write the release announcement that you will
-  soon post.
-
-Once all the builds and tests have passed,
-
-* Run the gnupload command that was suggested by your "make stable" run above.
-
-* Wait a few minutes (maybe up to 30?) and then use the release URLs to
-  download all tarball/signature pairs and use gpg --verify to ensure
-  that they're all valid.
-
-* Push the NEWS-updating changes and the new tag:
-
-    v=$(cat .prev-version)
-    git push origin master tag v$v
-
-* Send the gpg-signed announcement mail, e.g.,
-
-    To: info-gnu@gnu.org
-    Cc: coordinator@translationproject.org, bug-diffutils@gnu.org
-    Subject: diffutils-2.9 released [stable]
-
-* Announce it on Savannah, too:
-  From here:
-    https://savannah.gnu.org/projects/diffutils/
-  click on the "submit news", then write something like the following:
-  (If there is no such button, then enable "News" for the project via
-   the Main -> "Select Features" menu item, or via this link:
-   https://savannah.gnu.org/project/admin/editgroupfeatures.php?group=diffutils)
-
-    Subject: diffutils-1.3.13 released [stable]
-    The announcement is here:
-      http://article.gmane.org/gmane.comp.gnu.diffutils.bugs/258
-
-  Then go here to approve it:
-    https://savannah.gnu.org/news/approve.php?group=diffutils
-
-* After each non-alpha release, update the on-line manual accessible via
-
-    http://www.gnu.org/software/diffutils/manual/
-
-  by running this:
-
-    build-aux/gnu-web-doc-update
diff --git a/TODO b/TODO
index f8dc34a..5132de8 100644
--- a/TODO
+++ b/TODO
@@ -6,4 +6,4 @@ http://www.pkix.net/~chuck/sdiff2.diff
 Propagate stderr from subprocess so that diff3 does
 a better job of explaining _why_:
   > $ diff3 /bin/sh /bin/false /bin/mv
-  > diff3: subsidiary program `diff' failed (exit status 2)
+  > diff3: subsidiary program 'diff' failed (exit status 2)
diff --git a/bootstrap b/bootstrap
index e55b3d2..66da981 100755
--- a/bootstrap
+++ b/bootstrap
@@ -1,10 +1,10 @@
 #! /bin/sh
 # Print a version string.
-scriptversion=2010-04-30.16; # UTC
+scriptversion=2012-01-06.07; # UTC
 
 # Bootstrap this package from checked-out sources.
 
-# Copyright (C) 2003-2010 Free Software Foundation, Inc.
+# Copyright (C) 2003-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -38,28 +38,32 @@ export LC_ALL
 
 local_gl_dir=gl
 
-# Temporary directory names.
-bt='._bootmp'
-bt_regex=`echo "$bt"| sed 's/\./[.]/g'`
-bt2=${bt}2
+me=$0
 
 usage() {
   cat <<EOF
-Usage: $0 [OPTION]...
+Usage: $me [OPTION]...
 Bootstrap this package from the checked-out sources.
 
 Options:
- --gnulib-srcdir=DIRNAME  Specify the local directory where gnulib
+ --gnulib-srcdir=DIRNAME  specify the local directory where gnulib
                           sources reside.  Use this if you already
                           have gnulib sources on your machine, and
                           do not want to waste your bandwidth downloading
-                          them again.  Defaults to \$GNULIB_SRCDIR.
- --copy                   Copy files instead of creating symbolic links.
- --force                  Attempt to bootstrap even if the sources seem
-                          not to have been checked out.
- --skip-po                Do not download po files.
-
-If the file $0.conf exists in the same directory as this script, its
+                          them again.  Defaults to \$GNULIB_SRCDIR
+ --bootstrap-sync         if this bootstrap script is not identical to
+                          the version in the local gnulib sources,
+                          update this script, and then restart it with
+                          /bin/sh or the shell \$CONFIG_SHELL
+ --no-bootstrap-sync      do not check whether bootstrap is out of sync
+ --copy                   copy files instead of creating symbolic links
+ --force                  attempt to bootstrap even if the sources seem
+                          not to have been checked out
+ --no-git                 do not use git to update gnulib.  Requires that
+                          --gnulib-srcdir point to a correct gnulib snapshot
+ --skip-po                do not download po files
+
+If the file $me.conf exists in the same directory as this script, its
 contents are read as shell variables to configure the bootstrap.
 
 For build prerequisites, environment variables like \$AUTOCONF and \$AMTAR
@@ -80,6 +84,13 @@ gnulib_modules=
 # Any gnulib files needed that are not in modules.
 gnulib_files=
 
+: ${AUTOPOINT=autopoint}
+: ${AUTORECONF=autoreconf}
+
+# A function to be called to edit gnulib.mk right after it's created.
+# Override it via your own definition in bootstrap.conf.
+gnulib_mk_hook() { :; }
+
 # A function to be called after everything else in this script.
 # Override it via your own definition in bootstrap.conf.
 bootstrap_epilogue() { :; }
@@ -90,7 +101,13 @@ bootstrap_epilogue() { :; }
 # options because the latest/%s directory and the .po files within are
 # all symlinks.
 po_download_command_format=\
-"rsync -Lrtvz 'translationproject.org::tp/latest/%s/' '%s'"
+"rsync --delete --exclude '*.s1' -Lrtvz \
+ 'translationproject.org::tp/latest/%s/' '%s'"
+
+# Fallback for downloading .po files (if rsync fails).
+po_download_command_format2=\
+"wget --mirror -nd -q -np -A.po -P '%s' \
+ http://translationproject.org/latest/%s/"
 
 extract_package_name='
   /^AC_INIT(/{
@@ -117,18 +134,7 @@ source_base=lib
 m4_base=m4
 doc_base=doc
 tests_base=tests
-
-# Extra files from gnulib, which override files from other sources.
-gnulib_extra_files="
-        $build_aux/install-sh
-        $build_aux/missing
-        $build_aux/mdate-sh
-        $build_aux/texinfo.tex
-        $build_aux/depcomp
-        $build_aux/config.guess
-        $build_aux/config.sub
-        doc/INSTALL
-"
+gnulib_extra_files=''
 
 # Additional gnulib-tool options to use.  Use "\newline" to break lines.
 gnulib_tool_option_extras=
@@ -163,6 +169,13 @@ copy=false
 # on which version control system (if any) is used in the source directory.
 vc_ignore=auto
 
+# Set this to true in bootstrap.conf to enable --bootstrap-sync by
+# default.
+bootstrap_sync=false
+
+# Use git to update gnulib sources
+use_git=true
+
 # find_tool ENVVAR NAMES...
 # -------------------------
 # Search for a required program.  Use the value of ENVVAR, if set,
@@ -187,11 +200,11 @@ find_tool ()
     find_tool_error_prefix="\$$find_tool_envvar: "
   fi
   if test x"$find_tool_res" = x; then
-    echo >&2 "$0: one of these is required: $find_tool_names"
+    echo >&2 "$me: one of these is required: $find_tool_names"
     exit 1
   fi
   ($find_tool_res --version </dev/null) >/dev/null 2>&1 || {
-    echo >&2 "$0: ${find_tool_error_prefix}cannot run $find_tool_res --version"
+    echo >&2 "$me: ${find_tool_error_prefix}cannot run $find_tool_res --version"
     exit 1
   }
   eval "$find_tool_envvar=\$find_tool_res"
@@ -209,6 +222,18 @@ case "$0" in
   *) test -r "$0.conf" && . ./"$0.conf" ;;
 esac
 
+# Extra files from gnulib, which override files from other sources.
+test -z "${gnulib_extra_files}" && \
+  gnulib_extra_files="
+        $build_aux/install-sh
+        $build_aux/missing
+        $build_aux/mdate-sh
+        $build_aux/texinfo.tex
+        $build_aux/depcomp
+        $build_aux/config.guess
+        $build_aux/config.sub
+        doc/INSTALL
+"
 
 if test "$vc_ignore" = auto; then
   vc_ignore=
@@ -234,28 +259,71 @@ do
     checkout_only_file=;;
   --copy)
     copy=true;;
+  --bootstrap-sync)
+    bootstrap_sync=true;;
+  --no-bootstrap-sync)
+    bootstrap_sync=false;;
+  --no-git)
+    use_git=false;;
   *)
     echo >&2 "$0: $option: unknown option"
     exit 1;;
   esac
 done
 
+if $use_git || test -d "$GNULIB_SRCDIR"; then
+  :
+else
+  echo "$0: Error: --no-git requires --gnulib-srcdir" >&2
+  exit 1
+fi
+
 if test -n "$checkout_only_file" && test ! -r "$checkout_only_file"; then
   echo "$0: Bootstrapping from a non-checked-out distribution is risky." >&2
   exit 1
 fi
 
+# Ensure that lines starting with ! sort last, per gitignore conventions
+# for whitelisting exceptions after a more generic blacklist pattern.
+sort_patterns() {
+  sort -u "$@" | sed '/^!/ {
+    H
+    d
+  }
+  $ {
+    P
+    x
+    s/^\n//
+  }' | sed '/^$/d'
+}
+
 # If $STR is not already on a line by itself in $FILE, insert it,
 # sorting the new contents of the file and replacing $FILE with the result.
 insert_sorted_if_absent() {
   file=$1
   str=$2
   test -f $file || touch $file
-  echo "$str" | sort -u - $file | cmp - $file > /dev/null \
-    || echo "$str" | sort -u - $file -o $file \
+  echo "$str" | sort_patterns - $file | cmp - $file > /dev/null \
+    || { echo "$str" | sort_patterns - $file > $file.bak \
+      && mv $file.bak $file; } \
     || exit 1
 }
 
+# Adjust $PATTERN for $VC_IGNORE_FILE and insert it with
+# insert_sorted_if_absent.
+insert_vc_ignore() {
+  vc_ignore_file="$1"
+  pattern="$2"
+  case $vc_ignore_file in
+  *.gitignore)
+    # A .gitignore entry that does not start with '/' applies
+    # recursively to subdirectories, so prepend '/' to every
+    # .gitignore entry.
+    pattern=`echo "$pattern" | sed s,^,/,`;;
+  esac
+  insert_sorted_if_absent "$vc_ignore_file" "$pattern"
+}
+
 # Die if there is no AC_CONFIG_AUX_DIR($build_aux) line in configure.ac.
 found_aux_dir=no
 grep '^[	 ]*AC_CONFIG_AUX_DIR(\['"$build_aux"'\])' configure.ac \
@@ -274,7 +342,7 @@ if test ! -d $build_aux; then
   mkdir $build_aux
   for dot_ig in x $vc_ignore; do
     test $dot_ig = x && continue
-    insert_sorted_if_absent $dot_ig $build_aux
+    insert_vc_ignore $dot_ig $build_aux
   done
 fi
 
@@ -324,17 +392,18 @@ get_version() {
   $app --version >/dev/null 2>&1 || return 1
 
   $app --version 2>&1 |
-  sed -n '# extract version within line
-          s/.*[v ]\{1,\}\([0-9]\{1,\}\.[.a-z0-9-]*\).*/\1/
-          t done
+  sed -n '# Move version to start of line.
+          s/.*[v ]\([0-9]\)/\1/
 
-          # extract version at start of line
-          s/^\([0-9]\{1,\}\.[.a-z0-9-]*\).*/\1/
-          t done
+          # Skip lines that do not start with version.
+          /^[0-9]/!d
 
-          d
+          # Remove characters after the version.
+          s/[^.a-z0-9-].*//
+
+          # The first component must be digits only.
+          s/^\([0-9]*\)[a-z-].*/\1/
 
-          :done
           #the following essentially does s/5.005/5.5/
           s/\.0*\([1-9]\)/.\1/g
           p
@@ -345,21 +414,43 @@ check_versions() {
   ret=0
 
   while read app req_ver; do
+    # We only need libtoolize from the libtool package.
+    if test "$app" = libtool; then
+      app=libtoolize
+    fi
+    # Exempt git if --no-git is in effect.
+    if test "$app" = git; then
+      $use_git || continue
+    fi
     # Honor $APP variables ($TAR, $AUTOCONF, etc.)
-    appvar=`echo $app | tr '[a-z]' '[A-Z]'`
+    appvar=`echo $app | tr '[a-z]-' '[A-Z]_'`
     test "$appvar" = TAR && appvar=AMTAR
-    eval "app=\${$appvar-$app}"
-    inst_ver=$(get_version $app)
-    if [ ! "$inst_ver" ]; then
-      echo "Error: '$app' not found" >&2
-      ret=1
-    elif [ ! "$req_ver" = "-" ]; then
-      latest_ver=$(sort_ver $req_ver $inst_ver | cut -d' ' -f2)
-      if [ ! "$latest_ver" = "$inst_ver" ]; then
-        echo "Error: '$app' version == $inst_ver is too old" >&2
-        echo "       '$app' version >= $req_ver is required" >&2
+    case $appvar in
+        GZIP) ;; # Do not use $GZIP:  it contains gzip options.
+        *) eval "app=\${$appvar-$app}" ;;
+    esac
+    if [ "$req_ver" = "-" ]; then
+      # Merely require app to exist; not all prereq apps are well-behaved
+      # so we have to rely on $? rather than get_version.
+      $app --version >/dev/null 2>&1
+      if [ 126 -le $? ]; then
+        echo "$me: Error: '$app' not found" >&2
         ret=1
       fi
+    else
+      # Require app to produce a new enough version string.
+      inst_ver=$(get_version $app)
+      if [ ! "$inst_ver" ]; then
+        echo "$me: Error: '$app' not found" >&2
+        ret=1
+      else
+        latest_ver=$(sort_ver $req_ver $inst_ver | cut -d' ' -f2)
+        if [ ! "$latest_ver" = "$inst_ver" ]; then
+          echo "$me: Error: '$app' version == $inst_ver is too old" >&2
+          echo "       '$app' version >= $req_ver is required" >&2
+          ret=1
+        fi
+      fi
     fi
   done
 
@@ -369,16 +460,56 @@ check_versions() {
 print_versions() {
   echo "Program    Min_version"
   echo "----------------------"
-  printf "$buildreq"
+  printf %s "$buildreq"
   echo "----------------------"
   # can't depend on column -t
 }
 
+use_libtool=0
+# We'd like to use grep -E, to see if any of LT_INIT,
+# AC_PROG_LIBTOOL, AM_PROG_LIBTOOL is used in configure.ac,
+# but that's not portable enough (e.g., for Solaris).
+grep '^[	 ]*A[CM]_PROG_LIBTOOL' configure.ac >/dev/null \
+  && use_libtool=1
+grep '^[	 ]*LT_INIT' configure.ac >/dev/null \
+  && use_libtool=1
+if test $use_libtool = 1; then
+  find_tool LIBTOOLIZE glibtoolize libtoolize
+fi
+
+# gnulib-tool requires at least automake and autoconf.
+# If either is not listed, add it (with minimum version) as a prerequisite.
+case $buildreq in
+  *automake*) ;;
+  *) buildreq="automake 1.9
+$buildreq" ;;
+esac
+case $buildreq in
+  *autoconf*) ;;
+  *) buildreq="autoconf 2.59
+$buildreq" ;;
+esac
+
+# When we can deduce that gnulib-tool will require patch,
+# and when patch is not already listed as a prerequisite, add it, too.
+if test ! -d "$local_gl_dir" \
+    || find "$local_gl_dir" -name '*.diff' -exec false {} +; then
+  :
+else
+  case $buildreq in
+    *patch*) ;;
+    *) buildreq="patch -
+$buildreq" ;;
+  esac
+fi
+
 if ! printf "$buildreq" | check_versions; then
-  test -f README-prereq &&
-  echo "See README-prereq for notes on obtaining these prerequisite programs:" >&2
-  echo
-  print_versions
+  echo >&2
+  if test -f README-prereq; then
+    echo "$0: See README-prereq for how to get the prerequisite programs" >&2
+  else
+    echo "$0: Please install the prerequisite programs" >&2
+  fi
   exit 1
 fi
 
@@ -389,11 +520,11 @@ if test -d .git && (git --version) >/dev/null 2>/dev/null ; then
   if git config merge.merge-changelog.driver >/dev/null ; then
     :
   elif (git-merge-changelog --version) >/dev/null 2>/dev/null ; then
-    echo "initializing git-merge-changelog driver"
+    echo "$0: initializing git-merge-changelog driver"
     git config merge.merge-changelog.name 'GNU-style ChangeLog merge driver'
     git config merge.merge-changelog.driver 'git-merge-changelog %O %A %B'
   else
-    echo "consider installing git-merge-changelog from gnulib"
+    echo "$0: consider installing git-merge-changelog from gnulib"
   fi
 fi
 
@@ -409,6 +540,7 @@ git_modules_config () {
 }
 
 gnulib_path=`git_modules_config submodule.gnulib.path`
+test -z "$gnulib_path" && gnulib_path=gnulib
 
 # Get gnulib files.
 
@@ -424,7 +556,8 @@ case ${GNULIB_SRCDIR--} in
 
     trap cleanup_gnulib 1 2 13 15
 
-    git clone -h|grep -- --depth > /dev/null && shallow='--depth 2' || shallow=
+    shallow=
+    git clone -h 2>&1 | grep -- --depth > /dev/null && shallow='--depth 2'
     git clone $shallow git://git.sv.gnu.org/gnulib "$gnulib_path" ||
       cleanup_gnulib
 
@@ -460,6 +593,16 @@ case ${GNULIB_SRCDIR--} in
   ;;
 esac
 
+if $bootstrap_sync; then
+  cmp -s "$0" "$GNULIB_SRCDIR/build-aux/bootstrap" || {
+    echo "$0: updating bootstrap and restarting..."
+    exec sh -c \
+      'cp "$1" "$2" && shift && exec "${CONFIG_SHELL-/bin/sh}" "$@"' \
+      -- "$GNULIB_SRCDIR/build-aux/bootstrap" \
+      "$0" "$@" --no-bootstrap-sync
+  }
+fi
+
 gnulib_tool=$GNULIB_SRCDIR/gnulib-tool
 <$gnulib_tool || exit
 
@@ -468,27 +611,32 @@ gnulib_tool=$GNULIB_SRCDIR/gnulib-tool
 download_po_files() {
   subdir=$1
   domain=$2
-  echo "$0: getting translations into $subdir for $domain..."
+  echo "$me: getting translations into $subdir for $domain..."
   cmd=`printf "$po_download_command_format" "$domain" "$subdir"`
+  eval "$cmd" && return
+  # Fallback to HTTP.
+  cmd=`printf "$po_download_command_format2" "$subdir" "$domain"`
   eval "$cmd"
 }
 
-# Download .po files to $po_dir/.reference and copy only the new
+# Mirror .po files to $po_dir/.reference and copy only the new
 # or modified ones into $po_dir.  Also update $po_dir/LINGUAS.
+# Note po files that exist locally only are left in $po_dir but will
+# not be included in LINGUAS and hence will not be distributed.
 update_po_files() {
   # Directory containing primary .po files.
   # Overwrite them only when we're sure a .po file is new.
   po_dir=$1
   domain=$2
 
-  # Download *.po files into this dir.
+  # Mirror *.po files into this dir.
   # Usually contains *.s1 checksum files.
   ref_po_dir="$po_dir/.reference"
 
   test -d $ref_po_dir || mkdir $ref_po_dir || return
   download_po_files $ref_po_dir $domain \
     && ls "$ref_po_dir"/*.po 2>/dev/null |
-      sed 's|.*/||; s|\.po$||' > "$po_dir/LINGUAS"
+      sed 's|.*/||; s|\.po$||' > "$po_dir/LINGUAS" || return
 
   langs=`cd $ref_po_dir && echo *.po|sed 's/\.po//g'`
   test "$langs" = '*' && langs=x
@@ -500,7 +648,7 @@ update_po_files() {
         ! test -f "$po_dir/$po.po" ||
         ! $SHA1SUM -c --status "$cksum_file" \
             < "$new_po" > /dev/null; then
-      echo "updated $po_dir/$po.po..."
+      echo "$me: updated $po_dir/$po.po..."
       cp "$new_po" "$po_dir/$po.po" \
           && $SHA1SUM < "$new_po" > "$cksum_file"
     fi
@@ -538,34 +686,42 @@ symlink_to_dir()
       for dot_ig in x $vc_ignore; do
         test $dot_ig = x && continue
         ig=$parent/$dot_ig
-        insert_sorted_if_absent $ig `echo "$dst_dir"|sed 's,.*/,,'`
+        insert_vc_ignore $ig `echo "$dst_dir"|sed 's,.*/,,'`
       done
     fi
 
     if $copy; then
       {
         test ! -h "$dst" || {
-          echo "$0: rm -f $dst" &&
+          echo "$me: rm -f $dst" &&
           rm -f "$dst"
         }
       } &&
       test -f "$dst" &&
       cmp -s "$src" "$dst" || {
-        echo "$0: cp -fp $src $dst" &&
+        echo "$me: cp -fp $src $dst" &&
         cp -fp "$src" "$dst"
       }
     else
+      # Leave any existing symlink alone, if it already points to the source,
+      # so that broken build tools that care about symlink times
+      # aren't confused into doing unnecessary builds.  Conversely, if the
+      # existing symlink's time stamp is older than the source, make it afresh,
+      # so that broken tools aren't confused into skipping needed builds.  See
+      # <http://lists.gnu.org/archive/html/bug-gnulib/2011-05/msg00326.html>.
       test -h "$dst" &&
       src_ls=`ls -diL "$src" 2>/dev/null` && set $src_ls && src_i=$1 &&
       dst_ls=`ls -diL "$dst" 2>/dev/null` && set $dst_ls && dst_i=$1 &&
-      test "$src_i" = "$dst_i" || {
+      test "$src_i" = "$dst_i" &&
+      both_ls=`ls -dt "$src" "$dst"` &&
+      test "X$both_ls" = "X$dst$nl$src" || {
         dot_dots=
         case $src in
         /*) ;;
         *)
           case /$dst/ in
           *//* | */../* | */./* | /*/*/*/*/*/)
-             echo >&2 "$0: invalid symlink calculation: $src -> $dst"
+             echo >&2 "$me: invalid symlink calculation: $src -> $dst"
              exit 1;;
           /*/*/*/*/)	dot_dots=../../../;;
           /*/*/*/)	dot_dots=../../;;
@@ -573,63 +729,39 @@ symlink_to_dir()
           esac;;
         esac
 
-        echo "$0: ln -fs $dot_dots$src $dst" &&
+        echo "$me: ln -fs $dot_dots$src $dst" &&
         ln -fs "$dot_dots$src" "$dst"
       }
     fi
   }
 }
 
-cp_mark_as_generated()
-{
-  cp_src=$1
-  cp_dst=$2
+# NOTE: we have to be careful to run both autopoint and libtoolize
+# before gnulib-tool, since gnulib-tool is likely to provide newer
+# versions of files "installed" by these two programs.
+# Then, *after* gnulib-tool (see below), we have to be careful to
+# run autoreconf in such a way that it does not run either of these
+# two just-pre-run programs.
 
-  if cmp -s "$cp_src" "$GNULIB_SRCDIR/$cp_dst"; then
-    symlink_to_dir "$GNULIB_SRCDIR" "$cp_dst"
-  elif cmp -s "$cp_src" "$local_gl_dir/$cp_dst"; then
-    symlink_to_dir $local_gl_dir "$cp_dst"
-  else
-    case $cp_dst in
-      *.[ch])             c1='/* '; c2=' */';;
-      *.texi)             c1='@c '; c2=     ;;
-      *.m4|*/Make*|Make*) c1='# ' ; c2=     ;;
-      *)                  c1=     ; c2=     ;;
-    esac
+# Import from gettext.
+with_gettext=yes
+grep '^[	 ]*AM_GNU_GETTEXT_VERSION(' configure.ac >/dev/null || \
+    with_gettext=no
 
-    # If the destination directory doesn't exist, create it.
-    # This is required at least for "lib/uniwidth/cjk.h".
-    dst_dir=`dirname "$cp_dst"`
-    test -d "$dst_dir" || mkdir -p "$dst_dir"
-
-    if test -z "$c1"; then
-      cmp -s "$cp_src" "$cp_dst" || {
-        # Copy the file first to get proper permissions if it
-        # doesn't already exist.  Then overwrite the copy.
-        echo "$0: cp -f $cp_src $cp_dst" &&
-        rm -f "$cp_dst" &&
-        cp "$cp_src" "$cp_dst-t" &&
-        sed "s!$bt_regex/!!g" "$cp_src" > "$cp_dst-t" &&
-        mv -f "$cp_dst-t" "$cp_dst"
-      }
-    else
-      # Copy the file first to get proper permissions if it
-      # doesn't already exist.  Then overwrite the copy.
-      cp "$cp_src" "$cp_dst-t" &&
-      (
-        echo "$c1-*- buffer-read-only: t -*- vi: set ro:$c2" &&
-        echo "${c1}DO NOT EDIT! GENERATED AUTOMATICALLY!$c2" &&
-        sed "s!$bt_regex/!!g" "$cp_src"
-      ) > $cp_dst-t &&
-      if cmp -s "$cp_dst-t" "$cp_dst"; then
-        rm -f "$cp_dst-t"
-      else
-        echo "$0: cp $cp_src $cp_dst # with edits" &&
-        mv -f "$cp_dst-t" "$cp_dst"
-      fi
-    fi
-  fi
-}
+if test $with_gettext = yes; then
+  # Released autopoint has the tendency to install macros that have been
+  # obsoleted in current gnulib, so run this before gnulib-tool.
+  echo "$0: $AUTOPOINT --force"
+  $AUTOPOINT --force || exit
+fi
+
+# Autoreconf runs aclocal before libtoolize, which causes spurious
+# warnings if the initial aclocal is confused by the libtoolized
+# (or worse out-of-date) macro directory.
+if grep '^[    ]*LT_INIT' configure.ac >/dev/null; then
+  echo "running: $LIBTOOLIZE --copy --install"
+  $LIBTOOLIZE --copy --install
+fi
 
 version_controlled_file() {
   dir=$1
@@ -643,116 +775,38 @@ version_controlled_file() {
   elif test -d .svn; then
     svn log -r HEAD "$dir/$file" > /dev/null 2>&1 && found=yes
   else
-    echo "$0: no version control for $dir/$file?" >&2
+    echo "$me: no version control for $dir/$file?" >&2
   fi
   test $found = yes
 }
 
-slurp() {
-  for dir in . `(cd $1 && find * -type d -print)`; do
-    copied=
-    sep=
-    for file in `ls -a $1/$dir`; do
-      case $file in
-      .|..) continue;;
-      .*) continue;; # FIXME: should all file names starting with "." be ignored?
-      esac
-      test -d $1/$dir/$file && continue
-      for excluded_file in $excluded_files; do
-        test "$dir/$file" = "$excluded_file" && continue 2
-      done
-      if test $file = Makefile.am && test "X$gnulib_mk" != XMakefile.am; then
-        copied=$copied${sep}$gnulib_mk; sep=$nl
-        remove_intl='/^[^#].*\/intl/s/^/#/;'"s!$bt_regex/!!g"
-        sed "$remove_intl" $1/$dir/$file | cmp - $dir/$gnulib_mk > /dev/null || {
-          echo "$0: Copying $1/$dir/$file to $dir/$gnulib_mk ..." &&
-          rm -f $dir/$gnulib_mk &&
-          sed "$remove_intl" $1/$dir/$file >$dir/$gnulib_mk
-        }
-      elif { test "${2+set}" = set && test -r $2/$dir/$file; } ||
-           version_controlled_file $dir $file; then
-        echo "$0: $dir/$file overrides $1/$dir/$file"
-      else
-        copied=$copied$sep$file; sep=$nl
-        if test $file = gettext.m4; then
-          echo "$0: patching m4/gettext.m4 to remove need for intl/* ..."
-          rm -f $dir/$file
-          sed '
-            /^AC_DEFUN(\[AM_INTL_SUBDIR],/,/^]/c\
-              AC_DEFUN([AM_INTL_SUBDIR], [])
-            /^AC_DEFUN(\[gt_INTL_SUBDIR_CORE],/,/^]/c\
-              AC_DEFUN([gt_INTL_SUBDIR_CORE], [])
-            $a\
-              AC_DEFUN([gl_LOCK_EARLY], [])
-          ' $1/$dir/$file >$dir/$file
-        else
-          cp_mark_as_generated $1/$dir/$file $dir/$file
-        fi
-      fi || exit
-    done
-
-    for dot_ig in x $vc_ignore; do
-      test $dot_ig = x && continue
-      ig=$dir/$dot_ig
-      if test -n "$copied"; then
-        insert_sorted_if_absent $ig "$copied"
-        # If an ignored file name ends with .in.h, then also add
-        # the name with just ".h".  Many gnulib headers are generated,
-        # e.g., stdint.in.h -> stdint.h, dirent.in.h ->..., etc.
-        # Likewise for .gperf -> .h, .y -> .c, and .sin -> .sed
-        f=`echo "$copied"|sed 's/\.in\.h$/.h/;s/\.sin$/.sed/;s/\.y$/.c/;s/\.gperf$/.h/'`
-        insert_sorted_if_absent $ig "$f"
-
-        # For files like sys_stat.in.h and sys_time.in.h, record as
-        # ignorable the directory we might eventually create: sys/.
-        f=`echo "$copied"|sed 's/sys_.*\.in\.h$/sys/'`
-        insert_sorted_if_absent $ig "$f"
-      fi
-    done
-  done
-}
-
-
-# Create boot temporary directories to import from gnulib and gettext.
-rm -fr $bt $bt2 &&
-mkdir $bt $bt2 || exit
-
 # Import from gnulib.
 
 gnulib_tool_options="\
  --import\
  --no-changelog\
- --aux-dir $bt/$build_aux\
- --doc-base $bt/$doc_base\
+ --aux-dir $build_aux\
+ --doc-base $doc_base\
  --lib $gnulib_name\
- --m4-base $bt/$m4_base/\
- --source-base $bt/$source_base/\
- --tests-base $bt/$tests_base\
+ --m4-base $m4_base/\
+ --source-base $source_base/\
+ --tests-base $tests_base\
  --local-dir $local_gl_dir\
  $gnulib_tool_option_extras\
 "
+if test $use_libtool = 1; then
+  case "$gnulib_tool_options " in
+    *' --libtool '*) ;;
+    *) gnulib_tool_options="$gnulib_tool_options --libtool" ;;
+  esac
+fi
 echo "$0: $gnulib_tool $gnulib_tool_options --import ..."
 $gnulib_tool $gnulib_tool_options --import $gnulib_modules &&
-slurp $bt || exit
 
 for file in $gnulib_files; do
   symlink_to_dir "$GNULIB_SRCDIR" $file || exit
 done
 
-
-# Import from gettext.
-with_gettext=yes
-grep '^[	 ]*AM_GNU_GETTEXT_VERSION(' configure.ac >/dev/null || \
-    with_gettext=no
-
-if test $with_gettext = yes; then
-  echo "$0: (cd $bt2; ${AUTOPOINT-autopoint}) ..."
-  cp configure.ac $bt2 &&
-  (cd $bt2 && ${AUTOPOINT-autopoint} && rm configure.ac) &&
-  slurp $bt2 $bt || exit
-fi
-rm -fr $bt $bt2 || exit
-
 # Remove any dangling symlink matching "*.m4" or "*.[ch]" in some
 # gnulib-populated directories.  Such .m4 files would cause aclocal to fail.
 # The following requires GNU find 4.2.3 or newer.  Considering the usual
@@ -765,36 +819,12 @@ find "$m4_base" "$source_base" \
   -depth \( -name '*.m4' -o -name '*.[ch]' \) \
   -type l -xtype l -delete > /dev/null 2>&1
 
-# Reconfigure, getting other files.
-
-# Skip autoheader if it's not needed.
-grep -E '^[	 ]*AC_CONFIG_HEADERS?\>' configure.ac >/dev/null ||
-  AUTOHEADER=true
-
-for command in \
-  libtool \
-  "${ACLOCAL-aclocal} --force -I m4" \
-  "${AUTOCONF-autoconf} --force" \
-  "${AUTOHEADER-autoheader} --force" \
-  "${AUTOMAKE-automake} --add-missing --copy --force-missing"
-do
-  if test "$command" = libtool; then
-    use_libtool=0
-    # We'd like to use grep -E, to see if any of LT_INIT,
-    # AC_PROG_LIBTOOL, AM_PROG_LIBTOOL is used in configure.ac,
-    # but that's not portable enough (e.g., for Solaris).
-    grep '^[	 ]*A[CM]_PROG_LIBTOOL' configure.ac >/dev/null \
-      && use_libtool=1
-    grep '^[	 ]*LT_INIT' configure.ac >/dev/null \
-      && use_libtool=1
-    test $use_libtool = 0 \
-      && continue
-    command="${LIBTOOLIZE-libtoolize} -c -f"
-  fi
-  echo "$0: $command ..."
-  $command || exit
-done
-
+# Tell autoreconf not to invoke autopoint or libtoolize; they were run above.
+echo "running: AUTOPOINT=true LIBTOOLIZE=true " \
+    "$AUTORECONF --verbose --install --no-recursive -I $m4_base $ACLOCAL_FLAGS"
+AUTOPOINT=true LIBTOOLIZE=true \
+    $AUTORECONF --verbose --install --no-recursive -I $m4_base $ACLOCAL_FLAGS \
+  || exit 1
 
 # Get some extra files from gnulib, overriding existing files.
 for file in $gnulib_extra_files; do
diff --git a/bootstrap.conf b/bootstrap.conf
index 71fbd3f..9b67b74 100644
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -1,6 +1,6 @@
 # Bootstrap configuration.
 
-# Copyright (C) 2006-2010 Free Software Foundation, Inc.
+# Copyright (C) 2006-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -19,6 +19,7 @@
 # gnulib modules used by this package.
 gnulib_modules='
 announce-gen
+binary-io
 c-stack
 config-h
 diffseq
@@ -27,15 +28,15 @@ do-release-commit-and-tag
 dup2
 error
 exclude
-exit
 exitfail
 extensions
 fcntl
 fdl
 file-type
+filenamecat
 fnmatch-gnu
 getopt
-gettext
+gettext-h
 gettime
 git-version-gen
 gitlog-to-changelog
@@ -46,6 +47,8 @@ gnupload
 hard-locale
 inttostr
 inttypes
+largefile
+lstat
 maintainer-makefile
 manywarnings
 mbrtowc
@@ -53,16 +56,20 @@ mkstemp
 mktime
 progname
 propername
+readme-release
 regex
 sh-quote
+signal
+sigprocmask
+stat
 stat-macros
 stat-time
+stdint
 strcase
 strftime
 strptime
 strtoumax
 sys_wait
-timegm
 unistd
 unlocked-io
 update-copyright
@@ -72,6 +79,7 @@ version-etc-fsf
 wcwidth
 xalloc
 xfreopen
+xreadlink
 xstrtoumax
 '
 
@@ -104,17 +112,19 @@ if test $gettext_external = 1; then
       m4/glibc2.m4
       m4/intdiv0.m4
       m4/lcmessage.m4
-      m4/lock.m4
       m4/printf-posix.m4
-      m4/size_max.m4
       m4/uintmax_t.m4
       m4/ulonglong.m4
       m4/visibility.m4
-      m4/xsize.m4
 '
 fi
 
-gnulib_tool_option_extras="--tests-base=$bt/gnulib-tests --with-tests"
+gnulib_tool_option_extras="--tests-base=gnulib-tests --with-tests
+  --avoid=localename
+  --avoid=lock
+  --symlink
+  --makefile-name=gnulib.mk
+"
 
 # Build prerequisites
 buildreq="\
@@ -136,8 +146,5 @@ touch ChangeLog || exit 1
 
 bootstrap_epilogue()
 {
-  # Change paths in gnulib-tests/gnulib.mk from "../.." to "..".
-  m=gnulib-tests/gnulib.mk
-  sed 's,\.\./\.\.,..,g' $m > $m-t
-  mv -f $m-t $m
+  perl -pi -e "s/\@PACKAGE\@/$package/g" README-release
 }
diff --git a/cfg.mk b/cfg.mk
index fcebfab..72fddc0 100644
--- a/cfg.mk
+++ b/cfg.mk
@@ -1,5 +1,5 @@
 # Customize maint.mk                           -*- makefile -*-
-# Copyright (C) 2003-2010 Free Software Foundation, Inc.
+# Copyright (C) 2003-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -29,7 +29,7 @@ bootstrap-tools = autoconf,automake,gnulib
 # Now that we have better tests, make this the default.
 export VERBOSE = yes
 
-old_NEWS_hash = 5ce999f299bd2e9f44cbfef49015b45f
+old_NEWS_hash = 7d70c18e90495732e671b3c94da01651
 
 # Tell maint.mk's syntax-check rules that diff gets config.h directly or
 # via diff.h or system.h.
@@ -39,7 +39,7 @@ update-copyright-env = \
   UPDATE_COPYRIGHT_USE_INTERVALS=1 \
   UPDATE_COPYRIGHT_MAX_LINE_LENGTH=79
 
-include $(srcdir)/dist-check.mk
+-include $(srcdir)/dist-check.mk
 
 _cf_state_dir ?= .config-state
 _date_time := $(shell date +%F.%T)
@@ -60,5 +60,10 @@ config-save:
 	$(MAKE) --quiet config-compare > /dev/null 2>&1 \
 	  && { echo no change; exit 1; } || :
 	mkdir -p $(_cf_state_dir)/$(_date_time)
-	ln -nsf $(date_time) $(_cf_state_dir)/latest
+	ln -nsf $(_date_time) $(_cf_state_dir)/latest
 	cp lib/config.h config.status $(_cf_state_dir)/latest
+
+exclude_file_name_regexp--sc_space_tab = ^gl/lib/.*\.c\.diff$$
+
+# Tell gnulib's tight_scope rule that we mark externs with XTERN
+export _gl_TS_extern = extern|XTERN
diff --git a/configure.ac b/configure.ac
index ab6af5c..199af3e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,6 +1,6 @@
 # Configure template for GNU Diffutils.
 
-# Copyright (C) 1994-1995, 1998, 2001-2002, 2004, 2006, 2009-2010 Free Software
+# Copyright (C) 1994-1995, 1998, 2001-2002, 2004, 2006, 2009-2012 Free Software
 # Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
@@ -26,7 +26,7 @@ AC_CONFIG_SRCDIR([src/diff.c])
 AC_CONFIG_AUX_DIR([build-aux])
 AC_CONFIG_MACRO_DIR([m4])
 
-AM_INIT_AUTOMAKE([1.11 dist-xz color-tests parallel-tests])
+AM_INIT_AUTOMAKE([1.11 dist-xz no-dist-gzip color-tests parallel-tests])
 AM_SILENT_RULES([yes]) # make --enable-silent-rules the default.
 
 AC_CONFIG_HEADER([lib/config.h:lib/config.hin])
@@ -38,7 +38,6 @@ AM_MISSING_PROG([HELP2MAN], [help2man])
 AC_PROG_RANLIB
 gl_EARLY
 gl_USE_SYSTEM_EXTENSIONS
-AC_SYS_LARGEFILE
 gl_INIT
 
 AC_ARG_ENABLE([gcc-warnings],
@@ -97,6 +96,7 @@ if test "$gl_gcc_warnings" = yes; then
   gl_WARN_ADD([-Wno-sign-compare])     # Too many warnings for now
   gl_WARN_ADD([-Wno-pointer-sign])     # Too many warnings for now
   gl_WARN_ADD([-Wno-unused-parameter]) # Too many warnings for now
+  gl_WARN_ADD([-Wno-format-nonliteral])
 
   # In spite of excluding -Wlogical-op above, it is enabled, as of
   # gcc 4.5.0 20090517, and it provokes warnings in cat.c, dd.c, truncate.c
@@ -144,6 +144,19 @@ fi
 AC_FUNC_CLOSEDIR_VOID
 AC_FUNC_FORK
 
+# When .tarball-version exists, we're building from a tarball
+# and must not make man/*.1 files depend on the generated src/version.c,
+# because that would induce a requirement to run the help2man perl script.
+# We are not yet prepared to make perl a build-from-tarball requirement.
+# Hence, here we detect .tarball-version existence.  When not present,
+# we define a variable to be used in man/Makefile.am to induce the
+# proper dependency (so that man/*.1 will be rebuilt upon any version change),
+# but not when built from a tarball.
+AC_SUBST([SRC_VERSION_C])
+test -f $srcdir/.tarball-version \
+  && SRC_VERSION_C= \
+  || SRC_VERSION_C=../src/version.c
+
 AM_GNU_GETTEXT([external], [need-ngettext])
 AM_GNU_GETTEXT_VERSION([0.17])
 XGETTEXT="AWK='$AWK' \$(SHELL) \$(top_srcdir)/exgettext $XGETTEXT"
diff --git a/doc/Makefile.am b/doc/Makefile.am
index d864f09..5672057 100644
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -1,6 +1,6 @@
 # Makefile for GNU diffutils documentation.
 
-# Copyright (C) 2001-2002, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001-2002, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -17,7 +17,7 @@
 
 AM_MAKEINFOFLAGS = --no-split
 
-info_TEXINFOS = diff.texi
-diff_TEXINFOS = fdl.texi
+info_TEXINFOS = diffutils.texi
+diffutils_TEXINFOS = fdl.texi
 
 EXTRA_DIST = diagmeet.note
diff --git a/doc/diagmeet.note b/doc/diagmeet.note
index 9ffd175..2d30d21 100644
--- a/doc/diagmeet.note
+++ b/doc/diagmeet.note
@@ -1,5 +1,5 @@
 Here is a comparison matrix which shows a case in which
-it is possible for the forward and backward scan in `diag'
+it is possible for the forward and backward scan in 'diag'
 to meet along a nonzero length of diagonal simultaneous
 (so that bdiag[d] and fdiag[d] are not equal)
 even though there is no snake on that diagonal at the meeting point.
diff --git a/doc/diff.texi b/doc/diff.texi
deleted file mode 100644
index c933934..0000000
--- a/doc/diff.texi
+++ /dev/null
@@ -1,4682 +0,0 @@
-\input texinfo @c -*-texinfo-*-
-@comment %**start of header
-@setfilename diff.info
-@include version.texi
-@settitle Comparing and Merging Files
-@syncodeindex vr cp
-@setchapternewpage odd
-@comment %**end of header
-@copying
-This manual is for GNU Diffutils
-(version @value{VERSION}, @value{UPDATED}),
-and documents the @acronym{GNU} @command{diff}, @command{diff3},
-@command{sdiff}, and @command{cmp} commands for showing the
-differences between files and the @acronym{GNU} @command{patch} command for
-using their output to update files.
-
-Copyright @copyright{} 1992-1994, 1998, 2001-2002, 2004, 2006, 2009-2010 Free
-Software Foundation, Inc.
-
-@quotation
-Permission is granted to copy, distribute and/or modify this document
-under the terms of the GNU Free Documentation License, Version 1.3 or
-any later version published by the Free Software Foundation; with no
-Invariant Sections, with the Front-Cover texts being ``A GNU Manual,''
-and with the Back-Cover Texts as in (a) below.  A copy of the
-license is included in the section entitled ``GNU Free Documentation
-License.''
-
-(a) The FSF's Back-Cover Text is: ``You have the freedom to
-copy and modify this GNU manual.  Buying copies from the FSF
-supports it in developing GNU and promoting software freedom.''
-@end quotation
-@end copying
-
-@c Debian install-info (up through at least version 1.9.20) uses only the
-@c first dircategory.  Put this one first, as it is more useful in practice.
-@dircategory Individual utilities
-@direntry
-* cmp: (diff)Invoking cmp.                      Compare 2 files byte by byte.
-* diff: (diff)Invoking diff.                    Compare 2 files line by line.
-* diff3: (diff)Invoking diff3.                  Compare 3 files line by line.
-* patch: (diff)Invoking patch.                  Apply a patch to a file.
-* sdiff: (diff)Invoking sdiff.                  Merge 2 files side-by-side.
-@end direntry
-
-@dircategory Text creation and manipulation
-@direntry
-* Diff: (diff).                 Comparing and merging files.
-@end direntry
-
-@titlepage
-@title Comparing and Merging Files
-@subtitle for Diffutils @value{VERSION} and @code{patch} 2.5.4
-@subtitle @value{UPDATED}
-@author David MacKenzie, Paul Eggert, and Richard Stallman
-@page
-@vskip 0pt plus 1filll
-@insertcopying
-@end titlepage
-
-@shortcontents
-@contents
-
-@ifnottex
-@node Top
-@top Comparing and Merging Files
-
-@insertcopying
-@end ifnottex
-
-@menu
-* Overview::              Preliminary information.
-* Comparison::            What file comparison means.
-
-* Output Formats::        Formats for two-way difference reports.
-* Incomplete Lines::      Lines that lack trailing newlines.
-* Comparing Directories:: Comparing files and directories.
-* Adjusting Output::      Making @command{diff} output prettier.
-* diff Performance::      Making @command{diff} smarter or faster.
-
-* Comparing Three Files:: Formats for three-way difference reports.
-* diff3 Merging::         Merging from a common ancestor.
-
-* Interactive Merging::   Interactive merging with @command{sdiff}.
-
-* Merging with patch::    Using @command{patch} to change old files into new ones.
-* Making Patches::        Tips for making and using patch distributions.
-
-* Invoking cmp::          Compare two files byte by byte.
-* Invoking diff::         Compare two files line by line.
-* Invoking diff3::        Compare three files line by line.
-* Invoking patch::        Apply a diff file to an original.
-* Invoking sdiff::        Side-by-side merge of file differences.
-
-* Standards conformance:: Conformance to the @acronym{POSIX} standard.
-* Projects::              If you've found a bug or other shortcoming.
-
-* Copying This Manual::   How to make copies of this manual.
-* Translations::          Available translations of this manual.
-* Index::                 Index.
-@end menu
-
-@node Overview
-@unnumbered Overview
-@cindex overview of @command{diff} and @command{patch}
-
-Computer users often find occasion to ask how two files differ.  Perhaps
-one file is a newer version of the other file.  Or maybe the two files
-started out as identical copies but were changed by different people.
-
-You can use the @command{diff} command to show differences between two
-files, or each corresponding file in two directories.  @command{diff}
-outputs differences between files line by line in any of several
-formats, selectable by command line options.  This set of differences is
-often called a @dfn{diff} or @dfn{patch}.  For files that are identical,
-@command{diff} normally produces no output; for binary (non-text) files,
-@command{diff} normally reports only that they are different.
-
-You can use the @command{cmp} command to show the byte and line numbers
-where two files differ.  @command{cmp} can also show all the bytes
-that differ between the two files, side by side.  A way to compare
-two files character by character is the Emacs command @kbd{M-x
-compare-windows}.  @xref{Other Window, , Other Window, emacs, The @acronym{GNU}
-Emacs Manual}, for more information on that command.
-
-You can use the @command{diff3} command to show differences among three
-files.  When two people have made independent changes to a common
-original, @command{diff3} can report the differences between the original
-and the two changed versions, and can produce a merged file that
-contains both persons' changes together with warnings about conflicts.
-
-You can use the @command{sdiff} command to merge two files interactively.
-
-You can use the set of differences produced by @command{diff} to distribute
-updates to text files (such as program source code) to other people.
-This method is especially useful when the differences are small compared
-to the complete files.  Given @command{diff} output, you can use the
-@command{patch} program to update, or @dfn{patch}, a copy of the file.  If you
-think of @command{diff} as subtracting one file from another to produce
-their difference, you can think of @command{patch} as adding the difference
-to one file to reproduce the other.
-
-This manual first concentrates on making diffs, and later shows how to
-use diffs to update files.
-
-@acronym{GNU} @command{diff} was written by Paul Eggert, Mike Haertel,
-David Hayes, Richard Stallman, and Len Tower.  Wayne Davison designed and
-implemented the unified output format.  The basic algorithm is described
-by Eugene W. Myers in ``An O(ND) Difference Algorithm and its Variations'',
-@cite{Algorithmica} Vol.@: 1 No.@: 2, 1986, pp.@: 251--266; and in ``A File
-Comparison Program'', Webb Miller and Eugene W. Myers,
-@cite{Software---Practice and Experience} Vol.@: 15 No.@: 11, 1985,
-pp.@: 1025--1040.
-@c From: "Gene Myers" <gene@cs.arizona.edu>
-@c They are about the same basic algorithm; the Algorithmica
-@c paper gives a rigorous treatment and the sub-algorithm for
-@c delivering scripts and should be the primary reference, but
-@c both should be mentioned.
-The algorithm was independently discovered as described by E. Ukkonen in
-``Algorithms for Approximate String Matching'',
-@cite{Information and Control} Vol.@: 64, 1985, pp.@: 100--118.
-@c From: "Gene Myers" <gene@cs.arizona.edu>
-@c Date: Wed, 29 Sep 1993 08:27:55 MST
-@c Ukkonen should be given credit for also discovering the algorithm used
-@c in GNU diff.
-Unless the @option{--minimal} option is used, @command{diff} uses a
-heuristic by Paul Eggert that limits the cost to @math{O(N^1.5 log N)}
-at the price of producing suboptimal output for large inputs with many
-differences.  Related algorithms are surveyed by Alfred V. Aho in
-section 6.3 of ``Algorithms for Finding Patterns in Strings'',
-@cite{Handbook of Theoretical Computer Science} (Jan Van Leeuwen,
-ed.), Vol.@: A, @cite{Algorithms and Complexity}, Elsevier/MIT Press,
-1990, pp.@: 255--300.
-
-@acronym{GNU} @command{diff3} was written by Randy Smith.  @acronym{GNU}
-@command{sdiff} was written by Thomas Lord.  @acronym{GNU} @command{cmp}
-was written by Torbj@"orn Granlund and David MacKenzie.
-
-@acronym{GNU} @command{patch} was written mainly by Larry Wall and Paul Eggert;
-several @acronym{GNU} enhancements were contributed by Wayne Davison and
-David MacKenzie.  Parts of this manual are adapted from a manual page
-written by Larry Wall, with his permission.
-
-@node Comparison
-@chapter What Comparison Means
-@cindex introduction
-
-There are several ways to think about the differences between two files.
-One way to think of the differences is as a series of lines that were
-deleted from, inserted in, or changed in one file to produce the other
-file.  @command{diff} compares two files line by line, finds groups of
-lines that differ, and reports each group of differing lines.  It can
-report the differing lines in several formats, which have different
-purposes.
-
-@acronym{GNU} @command{diff} can show whether files are different
-without detailing the differences.  It also provides ways to suppress
-certain kinds of differences that are not important to you.  Most
-commonly, such differences are changes in the amount of white space
-between words or lines.  @command{diff} also provides ways to suppress
-differences in alphabetic case or in lines that match a regular
-expression that you provide.  These options can accumulate; for
-example, you can ignore changes in both white space and alphabetic
-case.
-
-Another way to think of the differences between two files is as a
-sequence of pairs of bytes that can be either identical or
-different.  @command{cmp} reports the differences between two files
-byte by byte, instead of line by line.  As a result, it is often
-more useful than @command{diff} for comparing binary files.  For text
-files, @command{cmp} is useful mainly when you want to know only whether
-two files are identical, or whether one file is a prefix of the other.
-
-To illustrate the effect that considering changes byte by byte
-can have compared with considering them line by line, think of what
-happens if a single newline character is added to the beginning of a
-file.  If that file is then compared with an otherwise identical file
-that lacks the newline at the beginning, @command{diff} will report that a
-blank line has been added to the file, while @command{cmp} will report that
-almost every byte of the two files differs.
-
-@command{diff3} normally compares three input files line by line, finds
-groups of lines that differ, and reports each group of differing lines.
-Its output is designed to make it easy to inspect two different sets of
-changes to the same file.
-
-@menu
-* Hunks::             Groups of differing lines.
-* White Space::       Suppressing differences in white space.
-* Blank Lines::       Suppressing differences whose lines are all blank.
-* Specified Lines::   Suppressing differences whose lines all match a pattern.
-* Case Folding::      Suppressing differences in alphabetic case.
-* Brief::             Summarizing which files are different.
-* Binary::            Comparing binary files or forcing text comparisons.
-@end menu
-
-@node Hunks
-@section Hunks
-@cindex hunks
-
-When comparing two files, @command{diff} finds sequences of lines common to
-both files, interspersed with groups of differing lines called
-@dfn{hunks}.  Comparing two identical files yields one sequence of
-common lines and no hunks, because no lines differ.  Comparing two
-entirely different files yields no common lines and one large hunk that
-contains all lines of both files.  In general, there are many ways to
-match up lines between two given files.  @command{diff} tries to minimize
-the total hunk size by finding large sequences of common lines
-interspersed with small hunks of differing lines.
-
-For example, suppose the file @file{F} contains the three lines
-@samp{a}, @samp{b}, @samp{c}, and the file @file{G} contains the same
-three lines in reverse order @samp{c}, @samp{b}, @samp{a}.  If
-@command{diff} finds the line @samp{c} as common, then the command
-@samp{diff F G} produces this output:
-
-@example
-1,2d0
-< a
-< b
-3a2,3
-> b
-> a
-@end example
-
-@noindent
-But if @command{diff} notices the common line @samp{b} instead, it produces
-this output:
-
-@example
-1c1
-< a
----
-> c
-3c3
-< c
----
-> a
-@end example
-
-@noindent
-It is also possible to find @samp{a} as the common line.  @command{diff}
-does not always find an optimal matching between the files; it takes
-shortcuts to run faster.  But its output is usually close to the
-shortest possible.  You can adjust this tradeoff with the
-@option{-d} or @option{--minimal} option (@pxref{diff Performance}).
-
-@node White Space
-@section Suppressing Differences in Blank and Tab Spacing
-@cindex blank and tab difference suppression
-@cindex tab and blank difference suppression
-
-The @option{-E} or @option{--ignore-tab-expansion} option ignores the
-distinction between tabs and spaces on input.  A tab is considered to be
-equivalent to the number of spaces to the next tab stop (@pxref{Tabs}).
-
-The @option{-b} or @option{--ignore-space-change} option is stronger.
-It ignores white space at line end, and considers all other sequences of
-one or more white space characters within a line to be equivalent.  With this
-option, @command{diff} considers the following two lines to be equivalent,
-where @samp{$} denotes the line end:
-
-@example
-Here lyeth  muche rychnesse  in lytell space.   -- John Heywood$
-Here lyeth muche rychnesse in lytell space. -- John Heywood   $
-@end example
-
-The @option{-w} or @option{--ignore-all-space} option is stronger still.
-It ignores differences even if one line has white space where
-the other line has none.  @dfn{White space} characters include
-tab, vertical tab, form feed, carriage return, and space;
-some locales may define additional characters to be white space.
-With this option, @command{diff} considers the
-following two lines to be equivalent, where @samp{$} denotes the line
-end and @samp{^M} denotes a carriage return:
-
-@example
-Here lyeth  muche  rychnesse in lytell space.--  John Heywood$
-  He relyeth much erychnes  seinly tells pace.  --John Heywood   ^M$
-@end example
-
-For many other programs newline is also a white space character, but
-@command{diff} is a line-oriented program and a newline character
-always ends a line.  Hence the @option{-w} or
-@option{--ignore-all-space} option does not ignore newline-related
-changes; it ignores only other white space changes.
-
-@node Blank Lines
-@section Suppressing Differences Whose Lines Are All Blank
-@cindex blank line difference suppression
-
-The @option{-B} or @option{--ignore-blank-lines} option ignores changes
-that consist entirely of blank lines.  With this option, for example, a
-file containing
-@example
-1.  A point is that which has no part.
-
-2.  A line is breadthless length.
--- Euclid, The Elements, I
-@end example
-@noindent
-is considered identical to a file containing
-@example
-1.  A point is that which has no part.
-2.  A line is breadthless length.
-
-
--- Euclid, The Elements, I
-@end example
-
-Normally this option affects only lines that are completely empty, but
-if you also specify the @option{-b} or @option{--ignore-space-change}
-option, or the @option{-w} or @option{--ignore-all-space} option,
-lines are also affected if they look empty but contain white space.
-In other words, @option{-B} is equivalent to @samp{-I '^$'} by
-default, but it is equivalent to @option{-I '^[[:space:]]*$'} if
-@option{-b} or @option{-w} is also specified.
-
-@node Specified Lines
-@section Suppressing Differences Whose Lines All Match a Regular Expression
-@cindex regular expression suppression
-
-To ignore insertions and deletions of lines that match a
-@command{grep}-style regular expression, use the @option{-I
-@var{regexp}} or @option{--ignore-matching-lines=@var{regexp}} option.
-You should escape
-regular expressions that contain shell metacharacters to prevent the
-shell from expanding them.  For example, @samp{diff -I '^[[:digit:]]'} ignores
-all changes to lines beginning with a digit.
-
-However, @option{-I} only ignores the insertion or deletion of lines that
-contain the regular expression if every changed line in the hunk---every
-insertion and every deletion---matches the regular expression.  In other
-words, for each nonignorable change, @command{diff} prints the complete set
-of changes in its vicinity, including the ignorable ones.
-
-You can specify more than one regular expression for lines to ignore by
-using more than one @option{-I} option.  @command{diff} tries to match each
-line against each regular expression.
-
-@node Case Folding
-@section Suppressing Case Differences
-@cindex case difference suppression
-
-@acronym{GNU} @command{diff} can treat lower case letters as
-equivalent to their upper case counterparts, so that, for example, it
-considers @samp{Funky Stuff}, @samp{funky STUFF}, and @samp{fUNKy
-stuFf} to all be the same.  To request this, use the @option{-i} or
-@option{--ignore-case} option.
-
-@node Brief
-@section Summarizing Which Files Differ
-@cindex summarizing which files differ
-@cindex brief difference reports
-
-When you only want to find out whether files are different, and you
-don't care what the differences are, you can use the summary output
-format.  In this format, instead of showing the differences between the
-files, @command{diff} simply reports whether files differ.  The @option{-q}
-or @option{--brief} option selects this output format.
-
-This format is especially useful when comparing the contents of two
-directories.  It is also much faster than doing the normal line by line
-comparisons, because @command{diff} can stop analyzing the files as soon as
-it knows that there are any differences.
-
-You can also get a brief indication of whether two files differ by using
-@command{cmp}.  For files that are identical, @command{cmp} produces no
-output.  When the files differ, by default, @command{cmp} outputs the byte
-and line number where the first difference occurs, or reports that one
-file is a prefix of the other.  You can use
-the @option{-s}, @option{--quiet}, or @option{--silent} option to
-suppress that information, so that @command{cmp}
-produces no output and reports whether the files differ using only its
-exit status (@pxref{Invoking cmp}).
-
-@c Fix this.
-Unlike @command{diff}, @command{cmp} cannot compare directories; it can only
-compare two files.
-
-@node Binary
-@section Binary Files and Forcing Text Comparisons
-@cindex binary file diff
-@cindex text versus binary diff
-
-If @command{diff} thinks that either of the two files it is comparing is
-binary (a non-text file), it normally treats that pair of files much as
-if the summary output format had been selected (@pxref{Brief}), and
-reports only that the binary files are different.  This is because line
-by line comparisons are usually not meaningful for binary files.
-
-@command{diff} determines whether a file is text or binary by checking the
-first few bytes in the file; the exact number of bytes is system
-dependent, but it is typically several thousand.  If every byte in
-that part of the file is non-null, @command{diff} considers the file to be
-text; otherwise it considers the file to be binary.
-
-Sometimes you might want to force @command{diff} to consider files to be
-text.  For example, you might be comparing text files that contain
-null characters; @command{diff} would erroneously decide that those are
-non-text files.  Or you might be comparing documents that are in a
-format used by a word processing system that uses null characters to
-indicate special formatting.  You can force @command{diff} to consider all
-files to be text files, and compare them line by line, by using the
-@option{-a} or @option{--text} option.  If the files you compare using this
-option do not in fact contain text, they will probably contain few
-newline characters, and the @command{diff} output will consist of hunks
-showing differences between long lines of whatever characters the files
-contain.
-
-You can also force @command{diff} to report only whether files differ
-(but not how).  Use the @option{-q} or @option{--brief} option for
-this.
-
-Normally, differing binary files count as trouble because the
-resulting @command{diff} output does not capture all the differences.
-This trouble causes @command{diff} to exit with status 2.  However,
-this trouble cannot occur with the @option{-a} or @option{--text}
-option, or with the @option{-q} or @option{--brief} option, as these
-options both cause @command{diff} to generate a form of output that
-represents differences as requested.
-
-In operating systems that distinguish between text and binary files,
-@command{diff} normally reads and writes all data as text.  Use the
-@option{--binary} option to force @command{diff} to read and write binary
-data instead.  This option has no effect on a @acronym{POSIX}-compliant system
-like @acronym{GNU} or traditional Unix.  However, many personal computer
-operating systems represent the end of a line with a carriage return
-followed by a newline.  On such systems, @command{diff} normally ignores
-these carriage returns on input and generates them at the end of each
-output line, but with the @option{--binary} option @command{diff} treats
-each carriage return as just another input character, and does not
-generate a carriage return at the end of each output line.  This can be
-useful when dealing with non-text files that are meant to be
-interchanged with @acronym{POSIX}-compliant systems.
-
-The @option{--strip-trailing-cr} causes @command{diff} to treat input
-lines that end in carriage return followed by newline as if they end
-in plain newline.  This can be useful when comparing text that is
-imperfectly imported from many personal computer operating systems.
-This option affects how lines are read, which in turn affects how they
-are compared and output.
-
-If you want to compare two files byte by byte, you can use the
-@command{cmp} program with the @option{-l} or @option{--verbose}
-option to show the values of each differing byte in the two files.
-With @acronym{GNU} @command{cmp}, you can also use the @option{-b} or
-@option{--print-bytes} option to show the @acronym{ASCII} representation of
-those bytes.  @xref{Invoking cmp}, for more information.
-
-If @command{diff3} thinks that any of the files it is comparing is binary
-(a non-text file), it normally reports an error, because such
-comparisons are usually not useful.  @command{diff3} uses the same test as
-@command{diff} to decide whether a file is binary.  As with @command{diff}, if
-the input files contain a few non-text bytes but otherwise are like
-text files, you can force @command{diff3} to consider all files to be text
-files and compare them line by line by using the @option{-a} or
-@option{--text} option.
-
-@node Output Formats
-@chapter @command{diff} Output Formats
-@cindex output formats
-@cindex format of @command{diff} output
-
-@command{diff} has several mutually exclusive options for output format.
-The following sections describe each format, illustrating how
-@command{diff} reports the differences between two sample input files.
-
-@menu
-* Sample diff Input:: Sample @command{diff} input files for examples.
-* Context::           Showing differences with the surrounding text.
-* Side by Side::      Showing differences in two columns.
-* Normal::            Showing differences without surrounding text.
-* Scripts::           Generating scripts for other programs.
-* If-then-else::      Merging files with if-then-else.
-@end menu
-
-@node Sample diff Input
-@section Two Sample Input Files
-@cindex @command{diff} sample input
-@cindex sample input for @command{diff}
-
-Here are two sample files that we will use in numerous examples to
-illustrate the output of @command{diff} and how various options can change
-it.
-
-This is the file @file{lao}:
-
-@example
-The Way that can be told of is not the eternal Way;
-The name that can be named is not the eternal name.
-The Nameless is the origin of Heaven and Earth;
-The Named is the mother of all things.
-Therefore let there always be non-being,
-  so we may see their subtlety,
-And let there always be being,
-  so we may see their outcome.
-The two are the same,
-But after they are produced,
-  they have different names.
-@end example
-
-This is the file @file{tzu}:
-
-@example
-The Nameless is the origin of Heaven and Earth;
-The named is the mother of all things.
-
-Therefore let there always be non-being,
-  so we may see their subtlety,
-And let there always be being,
-  so we may see their outcome.
-The two are the same,
-But after they are produced,
-  they have different names.
-They both may be called deep and profound.
-Deeper and more profound,
-The door of all subtleties!
-@end example
-
-In this example, the first hunk contains just the first two lines of
-@file{lao}, the second hunk contains the fourth line of @file{lao}
-opposing the second and third lines of @file{tzu}, and the last hunk
-contains just the last three lines of @file{tzu}.
-
-@node Context
-@section Showing Differences in Their Context
-@cindex context output format
-@cindex @samp{!} output format
-
-Usually, when you are looking at the differences between files, you will
-also want to see the parts of the files near the lines that differ, to
-help you understand exactly what has changed.  These nearby parts of the
-files are called the @dfn{context}.
-
-@acronym{GNU} @command{diff} provides two output formats that show context
-around the differing lines: @dfn{context format} and @dfn{unified
-format}.  It can optionally show in which function or section of the
-file the differing lines are found.
-
-If you are distributing new versions of files to other people in the
-form of @command{diff} output, you should use one of the output formats
-that show context so that they can apply the diffs even if they have
-made small changes of their own to the files.  @command{patch} can apply
-the diffs in this case by searching in the files for the lines of
-context around the differing lines; if those lines are actually a few
-lines away from where the diff says they are, @command{patch} can adjust
-the line numbers accordingly and still apply the diff correctly.
-@xref{Imperfect}, for more information on using @command{patch} to apply
-imperfect diffs.
-
-@menu
-* Context Format::  An output format that shows surrounding lines.
-* Unified Format::  A more compact output format that shows context.
-* Sections::        Showing which sections of the files differences are in.
-* Alternate Names:: Showing alternate file names in context headers.
-@end menu
-
-@node Context Format
-@subsection Context Format
-
-The context output format shows several lines of context around the
-lines that differ.  It is the standard format for distributing updates
-to source code.
-
-To select this output format, use the @option{-C @var{lines}},
-@option{--context@r{[}=@var{lines}@r{]}}, or @option{-c} option.  The
-argument @var{lines} that some of these options take is the number of
-lines of context to show.  If you do not specify @var{lines}, it
-defaults to three.  For proper operation, @command{patch} typically needs
-at least two lines of context.
-
-@menu
-* Example Context::  Sample output in context format.
-* Less Context::     Another sample with less context.
-* Detailed Context:: A detailed description of the context output format.
-@end menu
-
-@node Example Context
-@subsubsection An Example of Context Format
-
-Here is the output of @samp{diff -c lao tzu} (@pxref{Sample diff Input},
-for the complete contents of the two files).  Notice that up to three
-lines that are not different are shown around each line that is
-different; they are the context lines.  Also notice that the first two
-hunks have run together, because their contents overlap.
-
-@example
-*** lao	2002-02-21 23:30:39.942229878 -0800
---- tzu	2002-02-21 23:30:50.442260588 -0800
-***************
-*** 1,7 ****
-- The Way that can be told of is not the eternal Way;
-- The name that can be named is not the eternal name.
-  The Nameless is the origin of Heaven and Earth;
-! The Named is the mother of all things.
-  Therefore let there always be non-being,
-    so we may see their subtlety,
-  And let there always be being,
---- 1,6 ----
-  The Nameless is the origin of Heaven and Earth;
-! The named is the mother of all things.
-! @-
-  Therefore let there always be non-being,
-    so we may see their subtlety,
-  And let there always be being,
-***************
-*** 9,11 ****
---- 8,13 ----
-  The two are the same,
-  But after they are produced,
-    they have different names.
-+ They both may be called deep and profound.
-+ Deeper and more profound,
-+ The door of all subtleties!
-@end example
-
-@node Less Context
-@subsubsection An Example of Context Format with Less Context
-
-Here is the output of @samp{diff -C 1 lao tzu} (@pxref{Sample diff
-Input}, for the complete contents of the two files).  Notice that at
-most one context line is reported here.
-
-@example
-*** lao	2002-02-21 23:30:39.942229878 -0800
---- tzu	2002-02-21 23:30:50.442260588 -0800
-***************
-*** 1,5 ****
-- The Way that can be told of is not the eternal Way;
-- The name that can be named is not the eternal name.
-  The Nameless is the origin of Heaven and Earth;
-! The Named is the mother of all things.
-  Therefore let there always be non-being,
---- 1,4 ----
-  The Nameless is the origin of Heaven and Earth;
-! The named is the mother of all things.
-! @-
-  Therefore let there always be non-being,
-***************
-*** 11 ****
---- 10,13 ----
-    they have different names.
-+ They both may be called deep and profound.
-+ Deeper and more profound,
-+ The door of all subtleties!
-@end example
-
-@node Detailed Context
-@subsubsection Detailed Description of Context Format
-
-The context output format starts with a two-line header, which looks
-like this:
-
-@example
-*** @var{from-file} @var{from-file-modification-time}
---- @var{to-file} @var{to-file-modification time}
-@end example
-
-@noindent
-@vindex LC_TIME
-@cindex time stamp format, context diffs
-The time stamp normally looks like @samp{2002-02-21 23:30:39.942229878
--0800} to indicate the date, time with fractional seconds, and time
-zone in @uref{ftp://ftp.isi.edu/in-notes/rfc2822.txt, Internet RFC
-2822 format}.  (The fractional seconds are omitted on hosts that do
-not support fractional time stamps.)  However, a traditional time
-stamp like @samp{Thu Feb 21 23:30:39 2002} is used if the
-@env{LC_TIME} locale category is either @samp{C} or @samp{POSIX}.
-
-You can change the header's content with the
-@option{--label=@var{label}} option; see @ref{Alternate Names}.
-
-Next come one or more hunks of differences; each hunk shows one area
-where the files differ.  Context format hunks look like this:
-
-@example
-***************
-*** @var{from-file-line-numbers} ****
-  @var{from-file-line}
-  @var{from-file-line}@dots{}
---- @var{to-file-line-numbers} ----
-  @var{to-file-line}
-  @var{to-file-line}@dots{}
-@end example
-
-If a hunk contains two or more lines, its line numbers look like
-@samp{@var{start},@var{end}}.  Otherwise only its end line number
-appears.  An empty hunk is considered to end at the line that precedes
-the hunk.
-
-The lines of context around the lines that differ start with two space
-characters.  The lines that differ between the two files start with one
-of the following indicator characters, followed by a space character:
-
-@table @samp
-@item !
-A line that is part of a group of one or more lines that changed between
-the two files.  There is a corresponding group of lines marked with
-@samp{!} in the part of this hunk for the other file.
-
-@item +
-An ``inserted'' line in the second file that corresponds to nothing in
-the first file.
-
-@item -
-A ``deleted'' line in the first file that corresponds to nothing in the
-second file.
-@end table
-
-If all of the changes in a hunk are insertions, the lines of
-@var{from-file} are omitted.  If all of the changes are deletions, the
-lines of @var{to-file} are omitted.
-
-@node Unified Format
-@subsection Unified Format
-@cindex unified output format
-@cindex @samp{+-} output format
-
-The unified output format is a variation on the context format that is
-more compact because it omits redundant context lines.  To select this
-output format, use the @option{-U @var{lines}},
-@option{--unified@r{[}=@var{lines}@r{]}}, or @option{-u}
-option.  The argument @var{lines} is the number of lines of context to
-show.  When it is not given, it defaults to three.
-
-At present, only @acronym{GNU} @command{diff} can produce this format and
-only @acronym{GNU} @command{patch} can automatically apply diffs in this
-format.  For proper operation, @command{patch} typically needs at
-least three lines of context.
-
-@menu
-* Example Unified::  Sample output in unified format.
-* Detailed Unified:: A detailed description of unified format.
-@end menu
-
-@node Example Unified
-@subsubsection An Example of Unified Format
-
-Here is the output of the command @samp{diff -u lao tzu}
-(@pxref{Sample diff Input}, for the complete contents of the two files):
-
-@example
---- lao	2002-02-21 23:30:39.942229878 -0800
-+++ tzu	2002-02-21 23:30:50.442260588 -0800
-@@@@ -1,7 +1,6 @@@@
--The Way that can be told of is not the eternal Way;
--The name that can be named is not the eternal name.
- The Nameless is the origin of Heaven and Earth;
--The Named is the mother of all things.
-+The named is the mother of all things.
-+
- Therefore let there always be non-being,
-   so we may see their subtlety,
- And let there always be being,
-@@@@ -9,3 +8,6 @@@@
- The two are the same,
- But after they are produced,
-   they have different names.
-+They both may be called deep and profound.
-+Deeper and more profound,
-+The door of all subtleties!
-@end example
-
-@node Detailed Unified
-@subsubsection Detailed Description of Unified Format
-
-The unified output format starts with a two-line header, which looks
-like this:
-
-@example
---- @var{from-file} @var{from-file-modification-time}
-+++ @var{to-file} @var{to-file-modification-time}
-@end example
-
-@noindent
-@cindex time stamp format, unified diffs
-The time stamp looks like @samp{2002-02-21 23:30:39.942229878 -0800}
-to indicate the date, time with fractional seconds, and time zone.
-The fractional seconds are omitted on hosts that do not support
-fractional time stamps.
-
-You can change the header's content with the
-@option{--label=@var{label}} option; see @xref{Alternate Names}.
-
-Next come one or more hunks of differences; each hunk shows one area
-where the files differ.  Unified format hunks look like this:
-
-@example
-@@@@ @var{from-file-line-numbers} @var{to-file-line-numbers} @@@@
- @var{line-from-either-file}
- @var{line-from-either-file}@dots{}
-@end example
-
-If a hunk contains just one line, only its start line number appears.
-Otherwise its line numbers look like @samp{@var{start},@var{count}}.
-An empty hunk is considered to start at the line that follows the hunk.
-
-If a hunk and its context contain two or more lines, its
-line numbers look like @samp{@var{start},@var{count}}.  Otherwise only
-its end line number appears.  An empty hunk is considered to end at
-the line that precedes the hunk.
-
-The lines common to both files begin with a space character.  The lines
-that actually differ between the two files have one of the following
-indicator characters in the left print column:
-
-@table @samp
-@item +
-A line was added here to the first file.
-
-@item -
-A line was removed here from the first file.
-@end table
-
-@node Sections
-@subsection Showing Which Sections Differences Are in
-@cindex headings
-@cindex section headings
-
-Sometimes you might want to know which part of the files each change
-falls in.  If the files are source code, this could mean which
-function was changed.  If the files are documents, it could mean which
-chapter or appendix was changed.  @acronym{GNU} @command{diff} can
-show this by displaying the nearest section heading line that precedes
-the differing lines.  Which lines are ``section headings'' is
-determined by a regular expression.
-
-@menu
-* Specified Headings::  Showing headings that match regular expressions.
-* C Function Headings:: Showing headings of C functions.
-@end menu
-
-@node Specified Headings
-@subsubsection Showing Lines That Match Regular Expressions
-@cindex specified headings
-@cindex regular expression matching headings
-
-To show in which sections differences occur for files that are not
-source code for C or similar languages, use the @option{-F @var{regexp}}
-or @option{--show-function-line=@var{regexp}} option.  @command{diff}
-considers lines that match the @command{grep}-style regular expression
-@var{regexp} to be the beginning
-of a section of the file.  Here are suggested regular expressions for
-some common languages:
-
-@c Please add to this list, e.g. Fortran, Pascal, Perl, Python.
-@table @samp
-@item ^[[:alpha:]$_]
-C, C++, Prolog
-@item ^(
-Lisp
-@item ^@@node
-Texinfo
-@end table
-
-This option does not automatically select an output format; in order to
-use it, you must select the context format (@pxref{Context Format}) or
-unified format (@pxref{Unified Format}).  In other output formats it
-has no effect.
-
-The @option{-F} or @option{--show-function-line} option finds the nearest
-unchanged line that precedes each hunk of differences and matches the
-given regular expression.  Then it adds that line to the end of the
-line of asterisks in the context format, or to the @samp{@@@@} line in
-unified format.  If no matching line exists, this option leaves the output for
-that hunk unchanged.  If that line is more than 40 characters long, it
-outputs only the first 40 characters.  You can specify more than one
-regular expression for such lines; @command{diff} tries to match each line
-against each regular expression, starting with the last one given.  This
-means that you can use @option{-p} and @option{-F} together, if you wish.
-
-@node C Function Headings
-@subsubsection Showing C Function Headings
-@cindex C function headings
-@cindex function headings, C
-
-To show in which functions differences occur for C and similar
-languages, you can use the @option{-p} or @option{--show-c-function} option.
-This option automatically defaults to the context output format
-(@pxref{Context Format}), with the default number of lines of context.
-You can override that number with @option{-C @var{lines}} elsewhere in the
-command line.  You can override both the format and the number with
-@option{-U @var{lines}} elsewhere in the command line.
-
-The @option{-p} or @option{--show-c-function} option is equivalent to
-@option{-F '^[[:alpha:]$_]'} if the unified format is specified, otherwise
-@option{-c -F '^[[:alpha:]$_]'} (@pxref{Specified Headings}).  @acronym{GNU}
-@command{diff} provides this option for the sake of convenience.
-
-@node Alternate Names
-@subsection Showing Alternate File Names
-@cindex alternate file names
-@cindex file name alternates
-
-If you are comparing two files that have meaningless or uninformative
-names, you might want @command{diff} to show alternate names in the header
-of the context and unified output formats.  To do this, use the
-@option{--label=@var{label}} option.  The first time
-you give this option, its argument replaces the name and date of the
-first file in the header; the second time, its argument replaces the
-name and date of the second file.  If you give this option more than
-twice, @command{diff} reports an error.  The @option{--label} option does not
-affect the file names in the @command{pr} header when the @option{-l} or
-@option{--paginate} option is used (@pxref{Pagination}).
-
-Here are the first two lines of the output from @samp{diff -C 2
---label=original --label=modified lao tzu}:
-
-@example
-*** original
---- modified
-@end example
-
-@node Side by Side
-@section Showing Differences Side by Side
-@cindex side by side
-@cindex two-column output
-@cindex columnar output
-
-@command{diff} can produce a side by side difference listing of two files.
-The files are listed in two columns with a gutter between them.  The
-gutter contains one of the following markers:
-
-@table @asis
-@item white space
-The corresponding lines are in common.  That is, either the lines are
-identical, or the difference is ignored because of one of the
-@option{--ignore} options (@pxref{White Space}).
-
-@item @samp{|}
-The corresponding lines differ, and they are either both complete
-or both incomplete.
-
-@item @samp{<}
-The files differ and only the first file contains the line.
-
-@item @samp{>}
-The files differ and only the second file contains the line.
-
-@item @samp{(}
-Only the first file contains the line, but the difference is ignored.
-
-@item @samp{)}
-Only the second file contains the line, but the difference is ignored.
-
-@item @samp{\}
-The corresponding lines differ, and only the first line is incomplete.
-
-@item @samp{/}
-The corresponding lines differ, and only the second line is incomplete.
-@end table
-
-Normally, an output line is incomplete if and only if the lines that it
-contains are incomplete; @xref{Incomplete Lines}.  However, when an
-output line represents two differing lines, one might be incomplete
-while the other is not.  In this case, the output line is complete,
-but its the gutter is marked @samp{\} if the first line is incomplete,
-@samp{/} if the second line is.
-
-Side by side format is sometimes easiest to read, but it has limitations.
-It generates much wider output than usual, and truncates lines that are
-too long to fit.  Also, it relies on lining up output more heavily than
-usual, so its output looks particularly bad if you use varying
-width fonts, nonstandard tab stops, or nonprinting characters.
-
-You can use the @command{sdiff} command to interactively merge side by side
-differences.  @xref{Interactive Merging}, for more information on merging files.
-
-@menu
-* Side by Side Format::  Controlling side by side output format.
-* Example Side by Side:: Sample side by side output.
-@end menu
-
-@node Side by Side Format
-@subsection Controlling Side by Side Format
-@cindex side by side format
-
-The @option{-y} or @option{--side-by-side} option selects side by side
-format.  Because side by side output lines contain two input lines, the
-output is wider than usual: normally 130 print columns, which can fit
-onto a traditional printer line.  You can set the width of the output
-with the @option{-W @var{columns}} or @option{--width=@var{columns}}
-option.  The output is split into two halves of equal width, separated by a
-small gutter to mark differences; the right half is aligned to a tab
-stop so that tabs line up.  Input lines that are too long to fit in half
-of an output line are truncated for output.
-
-The @option{--left-column} option prints only the left column of two
-common lines.  The @option{--suppress-common-lines} option suppresses
-common lines entirely.
-
-@node Example Side by Side
-@subsection An Example of Side by Side Format
-
-Here is the output of the command @samp{diff -y -W 72 lao tzu}
-(@pxref{Sample diff Input}, for the complete contents of the two files).
-
-@example
-The Way that can be told of is n   <
-The name that can be named is no   <
-The Nameless is the origin of He        The Nameless is the origin of He
-The Named is the mother of all t   |    The named is the mother of all t
-                                   >
-Therefore let there always be no        Therefore let there always be no
-  so we may see their subtlety,           so we may see their subtlety,
-And let there always be being,          And let there always be being,
-  so we may see their outcome.            so we may see their outcome.
-The two are the same,                   The two are the same,
-But after they are produced,            But after they are produced,
-  they have different names.              they have different names.
-                                   >    They both may be called deep and
-                                   >    Deeper and more profound,
-                                   >    The door of all subtleties!
-@end example
-
-@node Normal
-@section Showing Differences Without Context
-@cindex normal output format
-@cindex @samp{<} output format
-
-The ``normal'' @command{diff} output format shows each hunk of differences
-without any surrounding context.  Sometimes such output is the clearest
-way to see how lines have changed, without the clutter of nearby
-unchanged lines (although you can get similar results with the context
-or unified formats by using 0 lines of context).  However, this format
-is no longer widely used for sending out patches; for that purpose, the
-context format (@pxref{Context Format}) and the unified format
-(@pxref{Unified Format}) are superior.  Normal format is the default for
-compatibility with older versions of @command{diff} and the @acronym{POSIX}
-standard.  Use the @option{--normal} option to select this output
-format explicitly.
-
-@menu
-* Example Normal::  Sample output in the normal format.
-* Detailed Normal:: A detailed description of normal output format.
-@end menu
-
-@node Example Normal
-@subsection An Example of Normal Format
-
-Here is the output of the command @samp{diff lao tzu}
-(@pxref{Sample diff Input}, for the complete contents of the two files).
-Notice that it shows only the lines that are different between the two
-files.
-
-@example
-1,2d0
-< The Way that can be told of is not the eternal Way;
-< The name that can be named is not the eternal name.
-4c2,3
-< The Named is the mother of all things.
----
-> The named is the mother of all things.
-> @-
-11a11,13
-> They both may be called deep and profound.
-> Deeper and more profound,
-> The door of all subtleties!
-@end example
-
-@node Detailed Normal
-@subsection Detailed Description of Normal Format
-
-The normal output format consists of one or more hunks of differences;
-each hunk shows one area where the files differ.  Normal format hunks
-look like this:
-
-@example
-@var{change-command}
-< @var{from-file-line}
-< @var{from-file-line}@dots{}
----
-> @var{to-file-line}
-> @var{to-file-line}@dots{}
-@end example
-
-There are three types of change commands.  Each consists of a line
-number or comma-separated range of lines in the first file, a single
-character indicating the kind of change to make, and a line number or
-comma-separated range of lines in the second file.  All line numbers are
-the original line numbers in each file.  The types of change commands
-are:
-
-@table @samp
-@item @var{l}a@var{r}
-Add the lines in range @var{r} of the second file after line @var{l} of
-the first file.  For example, @samp{8a12,15} means append lines 12--15
-of file 2 after line 8 of file 1; or, if changing file 2 into file 1,
-delete lines 12--15 of file 2.
-
-@item @var{f}c@var{t}
-Replace the lines in range @var{f} of the first file with lines in range
-@var{t} of the second file.  This is like a combined add and delete, but
-more compact.  For example, @samp{5,7c8,10} means change lines 5--7 of
-file 1 to read as lines 8--10 of file 2; or, if changing file 2 into
-file 1, change lines 8--10 of file 2 to read as lines 5--7 of file 1.
-
-@item @var{r}d@var{l}
-Delete the lines in range @var{r} from the first file; line @var{l} is where
-they would have appeared in the second file had they not been deleted.
-For example, @samp{5,7d3} means delete lines 5--7 of file 1; or, if
-changing file 2 into file 1, append lines 5--7 of file 1 after line 3 of
-file 2.
-@end table
-
-@node Scripts
-@section Making Edit Scripts
-@cindex script output formats
-
-Several output modes produce command scripts for editing @var{from-file}
-to produce @var{to-file}.
-
-@menu
-* ed Scripts:: Using @command{diff} to produce commands for @command{ed}.
-* Forward ed:: Making forward @command{ed} scripts.
-* RCS::        A special @command{diff} output format used by @acronym{RCS}.
-@end menu
-
-@node ed Scripts
-@subsection @command{ed} Scripts
-@cindex @command{ed} script output format
-
-@command{diff} can produce commands that direct the @command{ed} text editor
-to change the first file into the second file.  Long ago, this was the
-only output mode that was suitable for editing one file into another
-automatically; today, with @command{patch}, it is almost obsolete.  Use the
-@option{-e} or @option{--ed} option to select this output format.
-
-Like the normal format (@pxref{Normal}), this output format does not
-show any context; unlike the normal format, it does not include the
-information necessary to apply the diff in reverse (to produce the first
-file if all you have is the second file and the diff).
-
-If the file @file{d} contains the output of @samp{diff -e old new}, then
-the command @samp{(cat d && echo w) | ed - old} edits @file{old} to make
-it a copy of @file{new}.  More generally, if @file{d1}, @file{d2},
-@dots{}, @file{dN} contain the outputs of @samp{diff -e old new1},
-@samp{diff -e new1 new2}, @dots{}, @samp{diff -e newN-1 newN},
-respectively, then the command @samp{(cat d1 d2 @dots{} dN && echo w) |
-ed - old} edits @file{old} to make it a copy of @file{newN}.
-
-@menu
-* Example ed::  A sample @command{ed} script.
-* Detailed ed:: A detailed description of @command{ed} format.
-@end menu
-
-@node Example ed
-@subsubsection Example @command{ed} Script
-
-Here is the output of @samp{diff -e lao tzu} (@pxref{Sample
-diff Input}, for the complete contents of the two files):
-
-@example
-11a
-They both may be called deep and profound.
-Deeper and more profound,
-The door of all subtleties!
-.
-4c
-The named is the mother of all things.
-
-.
-1,2d
-@end example
-
-@node Detailed ed
-@subsubsection Detailed Description of @command{ed} Format
-
-The @command{ed} output format consists of one or more hunks of
-differences.  The changes closest to the ends of the files come first so
-that commands that change the number of lines do not affect how
-@command{ed} interprets line numbers in succeeding commands.  @command{ed}
-format hunks look like this:
-
-@example
-@var{change-command}
-@var{to-file-line}
-@var{to-file-line}@dots{}
-.
-@end example
-
-Because @command{ed} uses a single period on a line to indicate the
-end of input, @acronym{GNU} @command{diff} protects lines of changes
-that contain a single period on a line by writing two periods instead,
-then writing a subsequent @command{ed} command to change the two
-periods into one.  The @command{ed} format cannot represent an
-incomplete line, so if the second file ends in a changed incomplete
-line, @command{diff} reports an error and then pretends that a newline
-was appended.
-
-There are three types of change commands.  Each consists of a line
-number or comma-separated range of lines in the first file and a single
-character indicating the kind of change to make.  All line numbers are
-the original line numbers in the file.  The types of change commands
-are:
-
-@table @samp
-@item @var{l}a
-Add text from the second file after line @var{l} in the first file.  For
-example, @samp{8a} means to add the following lines after line 8 of file
-1.
-
-@item @var{r}c
-Replace the lines in range @var{r} in the first file with the following
-lines.  Like a combined add and delete, but more compact.  For example,
-@samp{5,7c} means change lines 5--7 of file 1 to read as the text file
-2.
-
-@item @var{r}d
-Delete the lines in range @var{r} from the first file.  For example,
-@samp{5,7d} means delete lines 5--7 of file 1.
-@end table
-
-@node Forward ed
-@subsection Forward @command{ed} Scripts
-@cindex forward @command{ed} script output format
-
-@command{diff} can produce output that is like an @command{ed} script, but
-with hunks in forward (front to back) order.  The format of the commands
-is also changed slightly: command characters precede the lines they
-modify, spaces separate line numbers in ranges, and no attempt is made
-to disambiguate hunk lines consisting of a single period.  Like
-@command{ed} format, forward @command{ed} format cannot represent incomplete
-lines.
-
-Forward @command{ed} format is not very useful, because neither @command{ed}
-nor @command{patch} can apply diffs in this format.  It exists mainly for
-compatibility with older versions of @command{diff}.  Use the @option{-f} or
-@option{--forward-ed} option to select it.
-
-@node RCS
-@subsection @acronym{RCS} Scripts
-@cindex @acronym{RCS} script output format
-
-The @acronym{RCS} output format is designed specifically for use by
-the Revision Control System, which is a set of free programs used for
-organizing different versions and systems of files.  Use the
-@option{-n} or @option{--rcs} option to select this output format.  It
-is like the forward @command{ed} format (@pxref{Forward ed}), but it
-can represent arbitrary changes to the contents of a file because it
-avoids the forward @command{ed} format's problems with lines
-consisting of a single period and with incomplete lines.  Instead of
-ending text sections with a line consisting of a single period, each
-command specifies the number of lines it affects; a combination of the
-@samp{a} and @samp{d} commands are used instead of @samp{c}.  Also, if
-the second file ends in a changed incomplete line, then the output
-also ends in an incomplete line.
-
-Here is the output of @samp{diff -n lao tzu} (@pxref{Sample
-diff Input}, for the complete contents of the two files):
-
-@example
-d1 2
-d4 1
-a4 2
-The named is the mother of all things.
-
-a11 3
-They both may be called deep and profound.
-Deeper and more profound,
-The door of all subtleties!
-@end example
-
-@node If-then-else
-@section Merging Files with If-then-else
-@cindex merged output format
-@cindex if-then-else output format
-@cindex C if-then-else output format
-@cindex @command{ifdef} output format
-
-You can use @command{diff} to merge two files of C source code.  The output
-of @command{diff} in this format contains all the lines of both files.
-Lines common to both files are output just once; the differing parts are
-separated by the C preprocessor directives @code{#ifdef @var{name}} or
-@code{#ifndef @var{name}}, @code{#else}, and @code{#endif}.  When
-compiling the output, you select which version to use by either defining
-or leaving undefined the macro @var{name}.
-
-To merge two files, use @command{diff} with the @option{-D @var{name}} or
-@option{--ifdef=@var{name}} option.  The argument @var{name} is the C
-preprocessor identifier to use in the @code{#ifdef} and @code{#ifndef}
-directives.
-
-For example, if you change an instance of @code{wait (&s)} to
-@code{waitpid (-1, &s, 0)} and then merge the old and new files with
-the @option{--ifdef=HAVE_WAITPID} option, then the affected part of your code
-might look like this:
-
-@example
-    do @{
-#ifndef HAVE_WAITPID
-        if ((w = wait (&s)) < 0  &&  errno != EINTR)
-#else /* HAVE_WAITPID */
-        if ((w = waitpid (-1, &s, 0)) < 0  &&  errno != EINTR)
-#endif /* HAVE_WAITPID */
-            return w;
-    @} while (w != child);
-@end example
-
-You can specify formats for languages other than C by using line group
-formats and line formats, as described in the next sections.
-
-@menu
-* Line Group Formats::    Formats for general if-then-else line groups.
-* Line Formats::          Formats for each line in a line group.
-* Example If-then-else::  Sample if-then-else format output.
-* Detailed If-then-else:: A detailed description of if-then-else format.
-@end menu
-
-@node Line Group Formats
-@subsection Line Group Formats
-@cindex line group formats
-@cindex formats for if-then-else line groups
-
-Line group formats let you specify formats suitable for many
-applications that allow if-then-else input, including programming
-languages and text formatting languages.  A line group format specifies
-the output format for a contiguous group of similar lines.
-
-For example, the following command compares the TeX files @file{old}
-and @file{new}, and outputs a merged file in which old regions are
-surrounded by @samp{\begin@{em@}}-@samp{\end@{em@}} lines, and new
-regions are surrounded by @samp{\begin@{bf@}}-@samp{\end@{bf@}} lines.
-
-@example
-diff \
-   --old-group-format='\begin@{em@}
-%<\end@{em@}
-' \
-   --new-group-format='\begin@{bf@}
-%>\end@{bf@}
-' \
-   old new
-@end example
-
-The following command is equivalent to the above example, but it is a
-little more verbose, because it spells out the default line group formats.
-
-@example
-diff \
-   --old-group-format='\begin@{em@}
-%<\end@{em@}
-' \
-   --new-group-format='\begin@{bf@}
-%>\end@{bf@}
-' \
-   --unchanged-group-format='%=' \
-   --changed-group-format='\begin@{em@}
-%<\end@{em@}
-\begin@{bf@}
-%>\end@{bf@}
-' \
-   old new
-@end example
-
-Here is a more advanced example, which outputs a diff listing with
-headers containing line numbers in a ``plain English'' style.
-
-@example
-diff \
-   --unchanged-group-format='' \
-   --old-group-format='-------- %dn line%(n=1?:s) deleted at %df:
-%<' \
-   --new-group-format='-------- %dN line%(N=1?:s) added after %de:
-%>' \
-   --changed-group-format='-------- %dn line%(n=1?:s) changed at %df:
-%<-------- to:
-%>' \
-   old new
-@end example
-
-To specify a line group format, use @command{diff} with one of the options
-listed below.  You can specify up to four line group formats, one for
-each kind of line group.  You should quote @var{format}, because it
-typically contains shell metacharacters.
-
-@table @option
-@item --old-group-format=@var{format}
-These line groups are hunks containing only lines from the first file.
-The default old group format is the same as the changed group format if
-it is specified; otherwise it is a format that outputs the line group as-is.
-
-@item --new-group-format=@var{format}
-These line groups are hunks containing only lines from the second
-file.  The default new group format is same as the changed group
-format if it is specified; otherwise it is a format that outputs the
-line group as-is.
-
-@item --changed-group-format=@var{format}
-These line groups are hunks containing lines from both files.  The
-default changed group format is the concatenation of the old and new
-group formats.
-
-@item --unchanged-group-format=@var{format}
-These line groups contain lines common to both files.  The default
-unchanged group format is a format that outputs the line group as-is.
-@end table
-
-In a line group format, ordinary characters represent themselves;
-conversion specifications start with @samp{%} and have one of the
-following forms.
-
-@table @samp
-@item %<
-stands for the lines from the first file, including the trailing newline.
-Each line is formatted according to the old line format (@pxref{Line Formats}).
-
-@item %>
-stands for the lines from the second file, including the trailing newline.
-Each line is formatted according to the new line format.
-
-@item %=
-stands for the lines common to both files, including the trailing newline.
-Each line is formatted according to the unchanged line format.
-
-@item %%
-stands for @samp{%}.
-
-@item %c'@var{C}'
-where @var{C} is a single character, stands for @var{C}.
-@var{C} may not be a backslash or an apostrophe.
-For example, @samp{%c':'} stands for a colon, even inside
-the then-part of an if-then-else format, which a colon would
-normally terminate.
-
-@item %c'\@var{O}'
-where @var{O} is a string of 1, 2, or 3 octal digits,
-stands for the character with octal code @var{O}.
-For example, @samp{%c'\0'} stands for a null character.
-
-@item @var{F}@var{n}
-where @var{F} is a @code{printf} conversion specification and @var{n} is one
-of the following letters, stands for @var{n}'s value formatted with @var{F}.
-
-@table @samp
-@item e
-The line number of the line just before the group in the old file.
-
-@item f
-The line number of the first line in the group in the old file;
-equals @var{e} + 1.
-
-@item l
-The line number of the last line in the group in the old file.
-
-@item m
-The line number of the line just after the group in the old file;
-equals @var{l} + 1.
-
-@item n
-The number of lines in the group in the old file; equals @var{l} - @var{f} + 1.
-
-@item E, F, L, M, N
-Likewise, for lines in the new file.
-
-@end table
-
-@vindex LC_NUMERIC
-The @code{printf} conversion specification can be @samp{%d},
-@samp{%o}, @samp{%x}, or @samp{%X}, specifying decimal, octal,
-lower case hexadecimal, or upper case hexadecimal output
-respectively.  After the @samp{%} the following options can appear in
-sequence: a series of zero or more flags; an integer
-specifying the minimum field width; and a period followed by an
-optional integer specifying the minimum number of digits.
-The flags are @samp{-} for left-justification, @samp{'} for separating
-the digit into groups as specified by the @env{LC_NUMERIC} locale category,
-and @samp{0} for padding with zeros instead of spaces.
-For example, @samp{%5dN} prints the number of new lines in the group
-in a field of width 5 characters, using the @code{printf} format @code{"%5d"}.
-
-@item (@var{A}=@var{B}?@var{T}:@var{E})
-If @var{A} equals @var{B} then @var{T} else @var{E}.
-@var{A} and @var{B} are each either a decimal constant
-or a single letter interpreted as above.
-This format spec is equivalent to @var{T} if
-@var{A}'s value equals @var{B}'s; otherwise it is equivalent to @var{E}.
-
-For example, @samp{%(N=0?no:%dN) line%(N=1?:s)} is equivalent to
-@samp{no lines} if @var{N} (the number of lines in the group in the
-new file) is 0, to @samp{1 line} if @var{N} is 1, and to @samp{%dN lines}
-otherwise.
-@end table
-
-@node Line Formats
-@subsection Line Formats
-@cindex line formats
-
-Line formats control how each line taken from an input file is
-output as part of a line group in if-then-else format.
-
-For example, the following command outputs text with a one-character
-change indicator to the left of the text.  The first character of output
-is @samp{-} for deleted lines, @samp{|} for added lines, and a space for
-unchanged lines.  The formats contain newline characters where newlines
-are desired on output.
-
-@example
-diff \
-   --old-line-format='-%l
-' \
-   --new-line-format='|%l
-' \
-   --unchanged-line-format=' %l
-' \
-   old new
-@end example
-
-To specify a line format, use one of the following options.  You should
-quote @var{format}, since it often contains shell metacharacters.
-
-@table @option
-@item --old-line-format=@var{format}
-formats lines just from the first file.
-
-@item --new-line-format=@var{format}
-formats lines just from the second file.
-
-@item --unchanged-line-format=@var{format}
-formats lines common to both files.
-
-@item --line-format=@var{format}
-formats all lines; in effect, it sets all three above options simultaneously.
-@end table
-
-In a line format, ordinary characters represent themselves;
-conversion specifications start with @samp{%} and have one of the
-following forms.
-
-@table @samp
-@item %l
-stands for the contents of the line, not counting its trailing
-newline (if any).  This format ignores whether the line is incomplete;
-@xref{Incomplete Lines}.
-
-@item %L
-stands for the contents of the line, including its trailing newline
-(if any).  If a line is incomplete, this format preserves its
-incompleteness.
-
-@item %%
-stands for @samp{%}.
-
-@item %c'@var{C}'
-where @var{C} is a single character, stands for @var{C}.
-@var{C} may not be a backslash or an apostrophe.
-For example, @samp{%c':'} stands for a colon.
-
-@item %c'\@var{O}'
-where @var{O} is a string of 1, 2, or 3 octal digits,
-stands for the character with octal code @var{O}.
-For example, @samp{%c'\0'} stands for a null character.
-
-@item @var{F}n
-where @var{F} is a @code{printf} conversion specification,
-stands for the line number formatted with @var{F}.
-For example, @samp{%.5dn} prints the line number using the
-@code{printf} format @code{"%.5d"}.  @xref{Line Group Formats}, for
-more about printf conversion specifications.
-
-@end table
-
-The default line format is @samp{%l} followed by a newline character.
-
-If the input contains tab characters and it is important that they line
-up on output, you should ensure that @samp{%l} or @samp{%L} in a line
-format is just after a tab stop (e.g.@: by preceding @samp{%l} or
-@samp{%L} with a tab character), or you should use the @option{-t} or
-@option{--expand-tabs} option.
-
-Taken together, the line and line group formats let you specify many
-different formats.  For example, the following command uses a format
-similar to normal @command{diff} format.  You can tailor this command
-to get fine control over @command{diff} output.
-
-@example
-diff \
-   --old-line-format='< %l
-' \
-   --new-line-format='> %l
-' \
-   --old-group-format='%df%(f=l?:,%dl)d%dE
-%<' \
-   --new-group-format='%dea%dF%(F=L?:,%dL)
-%>' \
-   --changed-group-format='%df%(f=l?:,%dl)c%dF%(F=L?:,%dL)
-%<---
-%>' \
-   --unchanged-group-format='' \
-   old new
-@end example
-
-@node Example If-then-else
-@subsection An Example of If-then-else Format
-
-Here is the output of @samp{diff -DTWO lao tzu} (@pxref{Sample
-diff Input}, for the complete contents of the two files):
-
-@example
-#ifndef TWO
-The Way that can be told of is not the eternal Way;
-The name that can be named is not the eternal name.
-#endif /* ! TWO */
-The Nameless is the origin of Heaven and Earth;
-#ifndef TWO
-The Named is the mother of all things.
-#else /* TWO */
-The named is the mother of all things.
-
-#endif /* TWO */
-Therefore let there always be non-being,
-  so we may see their subtlety,
-And let there always be being,
-  so we may see their outcome.
-The two are the same,
-But after they are produced,
-  they have different names.
-#ifdef TWO
-They both may be called deep and profound.
-Deeper and more profound,
-The door of all subtleties!
-#endif /* TWO */
-@end example
-
-@node Detailed If-then-else
-@subsection Detailed Description of If-then-else Format
-
-For lines common to both files, @command{diff} uses the unchanged line
-group format.  For each hunk of differences in the merged output
-format, if the hunk contains only lines from the first file,
-@command{diff} uses the old line group format; if the hunk contains only
-lines from the second file, @command{diff} uses the new group format;
-otherwise, @command{diff} uses the changed group format.
-
-The old, new, and unchanged line formats specify the output format of
-lines from the first file, lines from the second file, and lines common
-to both files, respectively.
-
-The option @option{--ifdef=@var{name}} is equivalent to
-the following sequence of options using shell syntax:
-
-@example
---old-group-format='#ifndef @var{name}
-%<#endif /* ! @var{name} */
-' \
---new-group-format='#ifdef @var{name}
-%>#endif /* @var{name} */
-' \
---unchanged-group-format='%=' \
---changed-group-format='#ifndef @var{name}
-%<#else /* @var{name} */
-%>#endif /* @var{name} */
-'
-@end example
-
-You should carefully check the @command{diff} output for proper nesting.
-For example, when using the @option{-D @var{name}} or
-@option{--ifdef=@var{name}} option, you should check that if the
-differing lines contain any of the C preprocessor directives
-@samp{#ifdef}, @samp{#ifndef}, @samp{#else}, @samp{#elif}, or
-@samp{#endif}, they are nested properly and match.  If they don't, you
-must make corrections manually.  It is a good idea to carefully check
-the resulting code anyway to make sure that it really does what you
-want it to; depending on how the input files were produced, the output
-might contain duplicate or otherwise incorrect code.
-
-The @command{patch} @option{-D @var{name}} option behaves like
-the @command{diff} @option{-D @var{name}} option, except it operates on
-a file and a diff to produce a merged file; @xref{patch Options}.
-
-@node Incomplete Lines
-@chapter Incomplete Lines
-@cindex incomplete lines
-@cindex full lines
-@cindex newline treatment by @command{diff}
-
-When an input file ends in a non-newline character, its last line is
-called an @dfn{incomplete line} because its last character is not a
-newline.  All other lines are called @dfn{full lines} and end in a
-newline character.  Incomplete lines do not match full lines unless
-differences in white space are ignored (@pxref{White Space}).
-
-An incomplete line is normally distinguished on output from a full
-line by a following line that starts with @samp{\}.  However, the
-@acronym{RCS} format (@pxref{RCS}) outputs the incomplete line as-is,
-without any trailing newline or following line.  The side by side
-format normally represents incomplete lines as-is, but in some cases
-uses a @samp{\} or @samp{/} gutter marker; @xref{Side by Side}.  The
-if-then-else line format preserves a line's incompleteness with
-@samp{%L}, and discards the newline with @samp{%l}; @xref{Line
-Formats}.  Finally, with the @command{ed} and forward @command{ed}
-output formats (@pxref{Output Formats}) @command{diff} cannot
-represent an incomplete line, so it pretends there was a newline and
-reports an error.
-
-For example, suppose @file{F} and @file{G} are one-byte files that
-contain just @samp{f} and @samp{g}, respectively.  Then @samp{diff F G}
-outputs
-
-@example
-1c1
-< f
-\ No newline at end of file
----
-> g
-\ No newline at end of file
-@end example
-
-@noindent
-(The exact message may differ in non-English locales.)
-@samp{diff -n F G} outputs the following without a trailing newline:
-
-@example
-d1 1
-a1 1
-g
-@end example
-
-@noindent
-@samp{diff -e F G} reports two errors and outputs the following:
-
-@example
-1c
-g
-.
-@end example
-
-@node Comparing Directories
-@chapter Comparing Directories
-
-@vindex LC_COLLATE
-You can use @command{diff} to compare some or all of the files in two
-directory trees.  When both file name arguments to @command{diff} are
-directories, it compares each file that is contained in both
-directories, examining file names in alphabetical order as specified by
-the @env{LC_COLLATE} locale category.  Normally
-@command{diff} is silent about pairs of files that contain no differences,
-but if you use the @option{-s} or @option{--report-identical-files} option,
-it reports pairs of identical files.  Normally @command{diff} reports
-subdirectories common to both directories without comparing
-subdirectories' files, but if you use the @option{-r} or
-@option{--recursive} option, it compares every corresponding pair of files
-in the directory trees, as many levels deep as they go.
-
-For file names that are in only one of the directories, @command{diff}
-normally does not show the contents of the file that exists; it reports
-only that the file exists in that directory and not in the other.  You
-can make @command{diff} act as though the file existed but was empty in the
-other directory, so that it outputs the entire contents of the file that
-actually exists.  (It is output as either an insertion or a
-deletion, depending on whether it is in the first or the second
-directory given.)  To do this, use the @option{-N} or @option{--new-file}
-option.
-
-If the older directory contains one or more large files that are not in
-the newer directory, you can make the patch smaller by using the
-@option{--unidirectional-new-file} option instead of @option{-N}.
-This option is like @option{-N} except that it only inserts the contents
-of files that appear in the second directory but not the first (that is,
-files that were added).  At the top of the patch, write instructions for
-the user applying the patch to remove the files that were deleted before
-applying the patch.  @xref{Making Patches}, for more discussion of
-making patches for distribution.
-
-To ignore some files while comparing directories, use the @option{-x
-@var{pattern}} or @option{--exclude=@var{pattern}} option.  This option
-ignores any files or subdirectories whose base names match the shell
-pattern @var{pattern}.  Unlike in the shell, a period at the start of
-the base of a file name matches a wildcard at the start of a pattern.
-You should enclose @var{pattern} in quotes so that the shell does not
-expand it.  For example, the option @option{-x '*.[ao]'} ignores any file
-whose name ends with @samp{.a} or @samp{.o}.
-
-This option accumulates if you specify it more than once.  For example,
-using the options @option{-x 'RCS' -x '*,v'} ignores any file or
-subdirectory whose base name is @samp{RCS} or ends with @samp{,v}.
-
-If you need to give this option many times, you can instead put the
-patterns in a file, one pattern per line, and use the @option{-X
-@var{file}} or @option{--exclude-from=@var{file}} option.  Trailing
-white space and empty lines are ignored in the pattern file.
-
-If you have been comparing two directories and stopped partway through,
-later you might want to continue where you left off.  You can do this by
-using the @option{-S @var{file}} or @option{--starting-file=@var{file}}
-option.  This compares only the file @var{file} and all alphabetically
-later files in the topmost directory level.
-
-If two directories differ only in that file names are lower case in
-one directory and upper case in the upper, @command{diff} normally
-reports many differences because it compares file names in a
-case sensitive way.  With the @option{--ignore-file-name-case} option,
-@command{diff} ignores case differences in file names, so that for example
-the contents of the file @file{Tao} in one directory are compared to
-the contents of the file @file{TAO} in the other.  The
-@option{--no-ignore-file-name-case} option cancels the effect of the
-@option{--ignore-file-name-case} option, reverting to the default
-behavior.
-
-If an @option{-x @var{pattern}} or @option{--exclude=@var{pattern}}
-option, or an @option{-X @var{file}} or
-@option{--exclude-from=@var{file}} option,
-is specified while the @option{--ignore-file-name-case} option is in
-effect, case is ignored when excluding file names matching the
-specified patterns.
-
-@node Adjusting Output
-@chapter Making @command{diff} Output Prettier
-
-@command{diff} provides several ways to adjust the appearance of its output.
-These adjustments can be applied to any output format.
-
-@menu
-* Tabs::            Preserving the alignment of tab stops.
-* Trailing Blanks:: Suppressing blanks before empty output lines.
-* Pagination::      Page numbering and time-stamping @command{diff} output.
-@end menu
-
-@node Tabs
-@section Preserving Tab Stop Alignment
-@cindex tab stop alignment
-@cindex aligning tab stops
-
-The lines of text in some of the @command{diff} output formats are
-preceded by one or two characters that indicate whether the text is
-inserted, deleted, or changed.  The addition of those characters can
-cause tabs to move to the next tab stop, throwing off the alignment of
-columns in the line.  @acronym{GNU} @command{diff} provides two ways
-to make tab-aligned columns line up correctly.
-
-The first way is to have @command{diff} convert all tabs into the correct
-number of spaces before outputting them; select this method with the
-@option{-t} or @option{--expand-tabs} option.  To use this form of output with
-@command{patch}, you must give @command{patch} the @option{-l} or
-@option{--ignore-white-space} option (@pxref{Changed White Space}, for more
-information).  @command{diff} normally assumes that tab stops are set
-every 8 print columns, but this can be altered by the
-@option{--tabsize=@var{columns}} option.
-
-The other method for making tabs line up correctly is to add a tab
-character instead of a space after the indicator character at the
-beginning of the line.  This ensures that all following tab characters
-are in the same position relative to tab stops that they were in the
-original files, so that the output is aligned correctly.  Its
-disadvantage is that it can make long lines too long to fit on one line
-of the screen or the paper.  It also does not work with the unified
-output format, which does not have a space character after the change
-type indicator character.  Select this method with the @option{-T} or
-@option{--initial-tab} option.
-
-@node Trailing Blanks
-@section Omitting trailing blanks
-@cindex trailing blanks
-When outputting lines in normal or context format, or outputting an
-unchanged line in unified format, @command{diff} normally outputs a
-blank just before each line.  If the line is empty, the output of
-@command{diff} therefore contains trailing blanks even though the
-input does not contain them.  For example, when outputting an
-unchanged empty line in context format, @command{diff} normally
-outputs a line with two leading spaces.
-
-Some text editors and email agents routinely delete trailing blanks,
-so it can be a problem to deal with diff output files that contain
-them.  You can avoid this problem with the
-@option{--suppress-blank-empty} option.  It causes @command{diff} to
-omit trailing blanks at the end of output lines in normal, context,
-and unified format, unless the trailing blanks were already present in
-the input.  This changes the output format slightly, so that output
-lines are guaranteed to never end in a blank unless an input line ends
-in a blank.  This format is less likely to be munged by text editors
-or by transmission via email.  It is accepted by @acronym{GNU}
-@command{patch} as well.
-
-@node Pagination
-@section Paginating @command{diff} Output
-@cindex paginating @command{diff} output
-
-It can be convenient to have long output page-numbered and time-stamped.
-The @option{-l} or @option{--paginate} option does this by sending the
-@command{diff} output through the @command{pr} program.  Here is what the page
-header might look like for @samp{diff -lc lao tzu}:
-
-@example
-2002-02-22 14:20                 diff -lc lao tzu                 Page 1
-@end example
-
-@node diff Performance
-@chapter @command{diff} Performance Tradeoffs
-@cindex performance of @command{diff}
-
-@acronym{GNU} @command{diff} runs quite efficiently; however, in some
-circumstances you can cause it to run faster or produce a more compact
-set of changes.
-
-One way to improve @command{diff} performance is to use hard or
-symbolic links to files instead of copies.  This improves performance
-because @command{diff} normally does not need to read two hard or
-symbolic links to the same file, since their contents must be
-identical.  For example, suppose you copy a large directory hierarchy,
-make a few changes to the copy, and then often use @samp{diff -r} to
-compare the original to the copy.  If the original files are
-read-only, you can greatly improve performance by creating the copy
-using hard or symbolic links (e.g., with @acronym{GNU} @samp{cp -lR} or
-@samp{cp -sR}).  Before editing a file in the copy for the first time,
-you should break the link and replace it with a regular copy.
-
-You can also affect the performance of @acronym{GNU} @command{diff} by
-giving it options that change the way it compares files.
-Performance has more than one dimension.  These options improve one
-aspect of performance at the cost of another, or they improve
-performance in some cases while hurting it in others.
-
-The way that @acronym{GNU} @command{diff} determines which lines have
-changed always comes up with a near-minimal set of differences.
-Usually it is good enough for practical purposes.  If the
-@command{diff} output is large, you might want @command{diff} to use a
-modified algorithm that sometimes produces a smaller set of
-differences.  The @option{-d} or @option{--minimal} option does this;
-however, it can also cause @command{diff} to run more slowly than
-usual, so it is not the default behavior.
-
-When the files you are comparing are large and have small groups of
-changes scattered throughout them, you can use the
-@option{--speed-large-files} option to make a different modification to
-the algorithm that @command{diff} uses.  If the input files have a constant
-small density of changes, this option speeds up the comparisons without
-changing the output.  If not, @command{diff} might produce a larger set of
-differences; however, the output will still be correct.
-
-Normally @command{diff} discards the prefix and suffix that is common to
-both files before it attempts to find a minimal set of differences.
-This makes @command{diff} run faster, but occasionally it may produce
-non-minimal output.  The @option{--horizon-lines=@var{lines}} option
-prevents @command{diff} from discarding the last @var{lines} lines of the
-prefix and the first @var{lines} lines of the suffix.  This gives
-@command{diff} further opportunities to find a minimal output.
-
-Suppose a run of changed lines includes a sequence of lines at one end
-and there is an identical sequence of lines just outside the other end.
-The @command{diff} command is free to choose which identical sequence is
-included in the hunk.  In this case, @command{diff} normally shifts the
-hunk's boundaries when this merges adjacent hunks, or shifts a hunk's
-lines towards the end of the file.  Merging hunks can make the output
-look nicer in some cases.
-
-@node Comparing Three Files
-@chapter Comparing Three Files
-@cindex comparing three files
-@cindex format of @command{diff3} output
-
-Use the program @command{diff3} to compare three files and show any
-differences among them.  (@command{diff3} can also merge files; see
-@ref{diff3 Merging}).
-
-The ``normal'' @command{diff3} output format shows each hunk of
-differences without surrounding context.  Hunks are labeled depending
-on whether they are two-way or three-way, and lines are annotated by
-their location in the input files.
-
-@xref{Invoking diff3}, for more information on how to run @command{diff3}.
-
-@menu
-* Sample diff3 Input::    Sample @command{diff3} input for examples.
-* Example diff3 Normal::  Sample output in the normal format.
-* diff3 Hunks::           The format of normal output format.
-* Detailed diff3 Normal:: A detailed description of normal output format.
-@end menu
-
-@node Sample diff3 Input
-@section A Third Sample Input File
-@cindex @command{diff3} sample input
-@cindex sample input for @command{diff3}
-
-Here is a third sample file that will be used in examples to illustrate
-the output of @command{diff3} and how various options can change it.  The
-first two files are the same that we used for @command{diff} (@pxref{Sample
-diff Input}).  This is the third sample file, called @file{tao}:
-
-@example
-The Way that can be told of is not the eternal Way;
-The name that can be named is not the eternal name.
-The Nameless is the origin of Heaven and Earth;
-The named is the mother of all things.
-
-Therefore let there always be non-being,
-  so we may see their subtlety,
-And let there always be being,
-  so we may see their result.
-The two are the same,
-But after they are produced,
-  they have different names.
-
-  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
-@end example
-
-@node Example diff3 Normal
-@section An Example of @command{diff3} Normal Format
-
-Here is the output of the command @samp{diff3 lao tzu tao}
-(@pxref{Sample diff3 Input}, for the complete contents of the files).
-Notice that it shows only the lines that are different among the three
-files.
-
-@example
-====2
-1:1,2c
-3:1,2c
-  The Way that can be told of is not the eternal Way;
-  The name that can be named is not the eternal name.
-2:0a
-====1
-1:4c
-  The Named is the mother of all things.
-2:2,3c
-3:4,5c
-  The named is the mother of all things.
-  @-
-====3
-1:8c
-2:7c
-    so we may see their outcome.
-3:9c
-    so we may see their result.
-====
-1:11a
-2:11,13c
-  They both may be called deep and profound.
-  Deeper and more profound,
-  The door of all subtleties!
-3:13,14c
-  @-
-    -- The Way of Lao-Tzu, tr. Wing-tsit Chan
-@end example
-
-@node Detailed diff3 Normal
-@section Detailed Description of @command{diff3} Normal Format
-
-Each hunk begins with a line marked @samp{====}.  Three-way hunks have
-plain @samp{====} lines, and two-way hunks have @samp{1}, @samp{2}, or
-@samp{3} appended to specify which of the three input files differ in
-that hunk.  The hunks contain copies of two or three sets of input
-lines each preceded by one or two commands identifying where the lines
-came from.
-
-Normally, two spaces precede each copy of an input line to distinguish
-it from the commands.  But with the @option{-T} or @option{--initial-tab}
-option, @command{diff3} uses a tab instead of two spaces; this lines up
-tabs correctly.  @xref{Tabs}, for more information.
-
-Commands take the following forms:
-
-@table @samp
-@item @var{file}:@var{l}a
-This hunk appears after line @var{l} of file @var{file}, and
-contains no lines in that file.  To edit this file to yield the other
-files, one must append hunk lines taken from the other files.  For
-example, @samp{1:11a} means that the hunk follows line 11 in the first
-file and contains no lines from that file.
-
-@item @var{file}:@var{r}c
-This hunk contains the lines in the range @var{r} of file @var{file}.
-The range @var{r} is a comma-separated pair of line numbers, or just one
-number if there is only one line.  To edit this file to yield the
-other files, one must change the specified lines to be the lines taken
-from the other files.  For example, @samp{2:11,13c} means that the hunk
-contains lines 11 through 13 from the second file.
-@end table
-
-If the last line in a set of input lines is incomplete
-(@pxref{Incomplete Lines}), it is distinguished on output from a full
-line by a following line that starts with @samp{\}.
-
-@node diff3 Hunks
-@section @command{diff3} Hunks
-@cindex hunks for @command{diff3}
-@cindex @command{diff3} hunks
-
-Groups of lines that differ in two or three of the input files are
-called @dfn{diff3 hunks}, by analogy with @command{diff} hunks
-(@pxref{Hunks}).  If all three input files differ in a @command{diff3}
-hunk, the hunk is called a @dfn{three-way hunk}; if just two input files
-differ, it is a @dfn{two-way hunk}.
-
-As with @command{diff}, several solutions are possible.  When comparing the
-files @samp{A}, @samp{B}, and @samp{C}, @command{diff3} normally finds
-@command{diff3} hunks by merging the two-way hunks output by the two
-commands @samp{diff A B} and @samp{diff A C}.  This does not necessarily
-minimize the size of the output, but exceptions should be rare.
-
-For example, suppose @file{F} contains the three lines @samp{a},
-@samp{b}, @samp{f}, @file{G} contains the lines @samp{g}, @samp{b},
-@samp{g}, and @file{H} contains the lines @samp{a}, @samp{b},
-@samp{h}.  @samp{diff3 F G H} might output the following:
-
-@example
-====2
-1:1c
-3:1c
-  a
-2:1c
-  g
-====
-1:3c
-  f
-2:3c
-  g
-3:3c
-  h
-@end example
-
-@noindent
-because it found a two-way hunk containing @samp{a} in the first and
-third files and @samp{g} in the second file, then the single line
-@samp{b} common to all three files, then a three-way hunk containing
-the last line of each file.
-
-@node diff3 Merging
-@chapter Merging From a Common Ancestor
-@cindex merging from a common ancestor
-
-When two people have made changes to copies of the same file,
-@command{diff3} can produce a merged output that contains both sets of
-changes together with warnings about conflicts.
-
-One might imagine programs with names like @command{diff4} and @command{diff5}
-to compare more than three files simultaneously, but in practice the
-need rarely arises.  You can use @command{diff3} to merge three or more
-sets of changes to a file by merging two change sets at a time.
-
-@command{diff3} can incorporate changes from two modified versions into a
-common preceding version.  This lets you merge the sets of changes
-represented by the two newer files.  Specify the common ancestor version
-as the second argument and the two newer versions as the first and third
-arguments, like this:
-
-@example
-diff3 @var{mine} @var{older} @var{yours}
-@end example
-
-@noindent
-You can remember the order of the arguments by noting that they are in
-alphabetical order.
-
-@cindex conflict
-@cindex overlap
-You can think of this as subtracting @var{older} from @var{yours} and
-adding the result to @var{mine}, or as merging into @var{mine} the
-changes that would turn @var{older} into @var{yours}.  This merging is
-well-defined as long as @var{mine} and @var{older} match in the
-neighborhood of each such change.  This fails to be true when all three
-input files differ or when only @var{older} differs; we call this
-a @dfn{conflict}.  When all three input files differ, we call the
-conflict an @dfn{overlap}.
-
-@command{diff3} gives you several ways to handle overlaps and conflicts.
-You can omit overlaps or conflicts, or select only overlaps,
-or mark conflicts with special @samp{<<<<<<<} and @samp{>>>>>>>} lines.
-
-@command{diff3} can output the merge results as an @command{ed} script that
-that can be applied to the first file to yield the merged output.
-However, it is usually better to have @command{diff3} generate the merged
-output directly; this bypasses some problems with @command{ed}.
-
-@menu
-* Which Changes::            Selecting changes to incorporate.
-* Marking Conflicts::        Marking conflicts.
-* Bypassing ed::             Generating merged output directly.
-* Merging Incomplete Lines:: How @command{diff3} merges incomplete lines.
-* Saving the Changed File::  Emulating System V behavior.
-@end menu
-
-@node Which Changes
-@section Selecting Which Changes to Incorporate
-@cindex overlapping change, selection of
-@cindex unmerged change
-
-You can select all unmerged changes from @var{older} to @var{yours} for merging
-into @var{mine} with the @option{-e} or @option{--ed} option.  You can
-select only the nonoverlapping unmerged changes with @option{-3} or
-@option{--easy-only}, and you can select only the overlapping changes with
-@option{-x} or @option{--overlap-only}.
-
-The @option{-e}, @option{-3} and @option{-x} options select only
-@dfn{unmerged changes}, i.e.@: changes where @var{mine} and @var{yours}
-differ; they ignore changes from @var{older} to @var{yours} where
-@var{mine} and @var{yours} are identical, because they assume that such
-changes have already been merged.  If this assumption is not a safe
-one, you can use the @option{-A} or @option{--show-all} option
-(@pxref{Marking Conflicts}).
-
-Here is the output of the command @command{diff3} with each of these three
-options (@pxref{Sample diff3 Input}, for the complete contents of the files).
-Notice that @option{-e} outputs the union of the disjoint sets of changes
-output by @option{-3} and @option{-x}.
-
-Output of @samp{diff3 -e lao tzu tao}:
-@example
-11a
-
-  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
-.
-8c
-  so we may see their result.
-.
-@end example
-
-Output of @samp{diff3 -3 lao tzu tao}:
-@example
-8c
-  so we may see their result.
-.
-@end example
-
-Output of @samp{diff3 -x lao tzu tao}:
-@example
-11a
-
-  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
-.
-@end example
-
-@node Marking Conflicts
-@section Marking Conflicts
-@cindex conflict marking
-@cindex @samp{<<<<<<<} for marking conflicts
-
-@command{diff3} can mark conflicts in the merged output by
-bracketing them with special marker lines.  A conflict
-that comes from two files @var{A} and @var{B} is marked as follows:
-
-@example
-<<<<<<< @var{A}
-@r{lines from @var{A}}
-=======
-@r{lines from @var{B}}
->>>>>>> @var{B}
-@end example
-
-A conflict that comes from three files @var{A}, @var{B} and @var{C} is
-marked as follows:
-
-@example
-<<<<<<< @var{A}
-@r{lines from @var{A}}
-||||||| @var{B}
-@r{lines from @var{B}}
-=======
-@r{lines from @var{C}}
->>>>>>> @var{C}
-@end example
-
-The @option{-A} or @option{--show-all} option acts like the @option{-e}
-option, except that it brackets conflicts, and it outputs all changes
-from @var{older} to @var{yours}, not just the unmerged changes.  Thus,
-given the sample input files (@pxref{Sample diff3 Input}), @samp{diff3
--A lao tzu tao} puts brackets around the conflict where only @file{tzu}
-differs:
-
-@example
-<<<<<<< tzu
-=======
-The Way that can be told of is not the eternal Way;
-The name that can be named is not the eternal name.
->>>>>>> tao
-@end example
-
-And it outputs the three-way conflict as follows:
-
-@example
-<<<<<<< lao
-||||||| tzu
-They both may be called deep and profound.
-Deeper and more profound,
-The door of all subtleties!
-=======
-
-  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
->>>>>>> tao
-@end example
-
-The @option{-E} or @option{--show-overlap} option outputs less information
-than the @option{-A} or @option{--show-all} option, because it outputs only
-unmerged changes, and it never outputs the contents of the second
-file.  Thus the @option{-E} option acts like the @option{-e} option,
-except that it brackets the first and third files from three-way
-overlapping changes.  Similarly, @option{-X} acts like @option{-x}, except
-it brackets all its (necessarily overlapping) changes.  For example,
-for the three-way overlapping change above, the @option{-E} and @option{-X}
-options output the following:
-
-@example
-<<<<<<< lao
-=======
-
-  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
->>>>>>> tao
-@end example
-
-If you are comparing files that have meaningless or uninformative names,
-you can use the @option{--label=@var{label}}
-option to show alternate names in the @samp{<<<<<<<}, @samp{|||||||}
-and @samp{>>>>>>>} brackets.  This option can be given up to three
-times, once for each input file.  Thus @samp{diff3 -A --label X
---label Y --label Z A
-B C} acts like @samp{diff3 -A A B C}, except that the output looks like
-it came from files named @samp{X}, @samp{Y} and @samp{Z} rather than
-from files named @samp{A}, @samp{B} and @samp{C}.
-
-@node Bypassing ed
-@section Generating the Merged Output Directly
-@cindex merged @command{diff3} format
-
-With the @option{-m} or @option{--merge} option, @command{diff3} outputs the
-merged file directly.  This is more efficient than using @command{ed} to
-generate it, and works even with non-text files that @command{ed} would
-reject.  If you specify @option{-m} without an @command{ed} script option,
-@option{-A} is assumed.
-
-For example, the command @samp{diff3 -m lao tzu tao}
-(@pxref{Sample diff3 Input} for a copy of the input files) would output
-the following:
-
-@example
-<<<<<<< tzu
-=======
-The Way that can be told of is not the eternal Way;
-The name that can be named is not the eternal name.
->>>>>>> tao
-The Nameless is the origin of Heaven and Earth;
-The Named is the mother of all things.
-Therefore let there always be non-being,
-  so we may see their subtlety,
-And let there always be being,
-  so we may see their result.
-The two are the same,
-But after they are produced,
-  they have different names.
-<<<<<<< lao
-||||||| tzu
-They both may be called deep and profound.
-Deeper and more profound,
-The door of all subtleties!
-=======
-
-  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
->>>>>>> tao
-@end example
-
-@node Merging Incomplete Lines
-@section How @command{diff3} Merges Incomplete Lines
-@cindex incomplete line merging
-
-With @option{-m}, incomplete lines (@pxref{Incomplete Lines}) are simply
-copied to the output as they are found; if the merged output ends in an
-conflict and one of the input files ends in an incomplete
-line, succeeding @samp{|||||||}, @samp{=======} or @samp{>>>>>>>}
-brackets appear somewhere other than the start of a line because
-they are appended to the incomplete line.
-
-Without @option{-m}, if an @command{ed} script option is specified and an
-incomplete line is found, @command{diff3} generates a warning and acts as
-if a newline had been present.
-
-@node Saving the Changed File
-@section Saving the Changed File
-@cindex System V @command{diff3} compatibility
-
-Traditional Unix @command{diff3} generates an @command{ed} script without the
-trailing @samp{w} and @samp{q} commands that save the changes.
-System V @command{diff3} generates these extra commands.  @acronym{GNU}
-@command{diff3} normally behaves like traditional Unix
-@command{diff3}, but with the @option{-i} option it behaves like
-System V @command{diff3} and appends the @samp{w} and @samp{q}
-commands.
-
-The @option{-i} option requires one of the @command{ed} script options
-@option{-AeExX3}, and is incompatible with the merged output option
-@option{-m}.
-
-@node Interactive Merging
-@chapter Interactive Merging with @command{sdiff}
-@cindex diff merging
-@cindex interactive merging
-
-With @command{sdiff}, you can merge two files interactively based on a
-side-by-side @option{-y} format comparison (@pxref{Side by Side}).  Use
-@option{-o @var{file}} or @option{--output=@var{file}} to specify where to
-put the merged text.  @xref{Invoking sdiff}, for more details on the
-options to @command{sdiff}.
-
-Another way to merge files interactively is to use the Emacs Lisp
-package @command{emerge}.  @xref{emerge, , emerge, emacs, The
-@acronym{GNU} Emacs Manual}, for more information.
-
-@menu
-* sdiff Option Summary:: Summary of @command{sdiff} options.
-* Merge Commands::       Merging two files interactively.
-@end menu
-
-@node sdiff Option Summary
-@section Specifying @command{diff} Options to @command{sdiff}
-@cindex @command{sdiff} output format
-
-The following @command{sdiff} options have the same meaning as for
-@command{diff}.  @xref{diff Options}, for the use of these options.
-
-@example
--a -b -d -i -t -v
--B -E -I @var{regexp}
-
---expand-tabs
---ignore-blank-lines  --ignore-case
---ignore-matching-lines=@var{regexp}  --ignore-space-change
---ignore-tab-expansion
---left-column  --minimal  --speed-large-files
---strip-trailing-cr  --suppress-common-lines
---tabsize=@var{columns}  --text  --version  --width=@var{columns}
-@end example
-
-For historical reasons, @command{sdiff} has alternate names for some
-options.  The @option{-l} option is equivalent to the
-@option{--left-column} option, and similarly @option{-s} is equivalent
-to @option{--suppress-common-lines}.  The meaning of the @command{sdiff}
-@option{-w} and @option{-W} options is interchanged from that of
-@command{diff}: with @command{sdiff}, @option{-w @var{columns}} is
-equivalent to @option{--width=@var{columns}}, and @option{-W} is
-equivalent to @option{--ignore-all-space}.  @command{sdiff} without the
-@option{-o} option is equivalent to @command{diff} with the @option{-y}
-or @option{--side-by-side} option (@pxref{Side by Side}).
-
-@node Merge Commands
-@section Merge Commands
-@cindex merge commands
-@cindex merging interactively
-
-Groups of common lines, with a blank gutter, are copied from the first
-file to the output.  After each group of differing lines, @command{sdiff}
-prompts with @samp{%} and pauses, waiting for one of the following
-commands.  Follow each command with @key{RET}.
-
-@table @samp
-@item e
-Discard both versions.
-Invoke a text editor on an empty temporary file,
-then copy the resulting file to the output.
-
-@item eb
-Concatenate the two versions, edit the result in a temporary file,
-then copy the edited result to the output.
-
-@item ed
-Like @samp{eb}, except precede each version with a header that
-shows what file and lines the version came from.
-
-@item el
-@itemx e1
-Edit a copy of the left version, then copy the result to the output.
-
-@item er
-@itemx e2
-Edit a copy of the right version, then copy the result to the output.
-
-@item l
-@itemx 1
-Copy the left version to the output.
-
-@item q
-Quit.
-
-@item r
-@itemx 2
-Copy the right version to the output.
-
-@item s
-Silently copy common lines.
-
-@item v
-Verbosely copy common lines.  This is the default.
-@end table
-
-@vindex EDITOR
-The text editor invoked is specified by the @env{EDITOR} environment
-variable if it is set.  The default is system-dependent.
-
-@node Merging with patch
-@chapter Merging with @command{patch}
-
-@command{patch} takes comparison output produced by @command{diff} and applies
-the differences to a copy of the original file, producing a patched
-version.  With @command{patch}, you can distribute just the changes to a
-set of files instead of distributing the entire file set; your
-correspondents can apply @command{patch} to update their copy of the files
-with your changes.  @command{patch} automatically determines the diff
-format, skips any leading or trailing headers, and uses the headers to
-determine which file to patch.  This lets your correspondents feed a
-mail message containing a difference listing directly to
-@command{patch}.
-
-@command{patch} detects and warns about common problems like forward
-patches.  It saves any patches that it could not apply.  It can also maintain a
-@code{patchlevel.h} file to ensure that your correspondents apply
-diffs in the proper order.
-
-@command{patch} accepts a series of diffs in its standard input, usually
-separated by headers that specify which file to patch.  It applies
-@command{diff} hunks (@pxref{Hunks}) one by one.  If a hunk does not
-exactly match the original file, @command{patch} uses heuristics to try to
-patch the file as well as it can.  If no approximate match can be found,
-@command{patch} rejects the hunk and skips to the next hunk.  @command{patch}
-normally replaces each file @var{f} with its new version, putting reject
-hunks (if any) into @samp{@var{f}.rej}.
-
-@xref{Invoking patch}, for detailed information on the options to
-@command{patch}.
-
-@menu
-* patch Input::            Selecting the type of @command{patch} input.
-* Revision Control::       Getting files from @acronym{RCS}, @acronym{SCCS}, etc.
-* Imperfect::              Dealing with imperfect patches.
-* Creating and Removing::  Creating and removing files with a patch.
-* Patching Time Stamps::   Updating time stamps on patched files.
-* Multiple Patches::       Handling multiple patches in a file.
-* patch Directories::      Changing directory and stripping directories.
-* Backups::                Whether backup files are made.
-* Backup Names::           Backup file names.
-* Reject Names::           Reject file names.
-* patch Messages::         Messages and questions @command{patch} can produce.
-* patch and POSIX::        Conformance to the @acronym{POSIX} standard.
-* patch and Tradition::    @acronym{GNU} versus traditional @command{patch}.
-@end menu
-
-@node patch Input
-@section Selecting the @command{patch} Input Format
-@cindex @command{patch} input format
-
-@command{patch} normally determines which @command{diff} format the patch
-file uses by examining its contents.  For patch files that contain
-particularly confusing leading text, you might need to use one of the
-following options to force @command{patch} to interpret the patch file as a
-certain format of diff.  The output formats listed here are the only
-ones that @command{patch} can understand.
-
-@table @option
-@item -c
-@itemx --context
-context diff.
-
-@item -e
-@itemx --ed
-@command{ed} script.
-
-@item -n
-@itemx --normal
-normal diff.
-
-@item -u
-@itemx --unified
-unified diff.
-@end table
-
-@node Revision Control
-@section Revision Control
-@cindex revision control
-@cindex version control
-@cindex @acronym{RCS}
-@cindex ClearCase
-@cindex @acronym{SCCS}
-
-If a nonexistent input file is under a revision control system
-supported by @command{patch}, @command{patch} normally asks the user
-whether to get (or check out) the file from the revision control
-system.  Patch currently supports @acronym{RCS}, ClearCase and
-@acronym{SCCS}.  Under @acronym{RCS} and @acronym{SCCS},
-@command{patch} also asks when the input file is read-only and matches
-the default version in the revision control system.
-
-@vindex PATCH_GET
-The @option{-g @var{num}} or @option{--get=@var{num}} option affects access
-to files under supported revision control systems.  If @var{num} is
-positive, @command{patch} gets the file without asking the user; if
-zero, @command{patch} neither asks the user nor gets the file; and if
-negative, @command{patch} asks the user before getting the file.  The
-default value of @var{num} is given by the value of the
-@env{PATCH_GET} environment variable if it is set; if not, the default
-value is zero if @command{patch} is conforming to @acronym{POSIX}, negative
-otherwise.  @xref{patch and POSIX}.
-
-@vindex VERSION_CONTROL
-The choice of revision control system is unaffected by the
-@env{VERSION_CONTROL} environment variable (@pxref{Backup Names}).
-
-@node Imperfect
-@section Applying Imperfect Patches
-@cindex imperfect patch application
-
-@command{patch} tries to skip any leading text in the patch file,
-apply the diff, and then skip any trailing text.  Thus you can feed a
-mail message directly to @command{patch}, and it should work.  If the
-entire diff is indented by a constant amount of white space,
-@command{patch} automatically ignores the indentation.  If a context
-diff contains trailing carriage return on each line, @command{patch}
-automatically ignores the carriage return.  If a context diff has been
-encapsulated by prepending @w{@samp{- }} to lines beginning with @samp{-}
-as per @uref{ftp://ftp.isi.edu/in-notes/rfc934.txt, Internet RFC 934},
-@command{patch} automatically unencapsulates the input.
-
-However, certain other types of imperfect input require user
-intervention or testing.
-
-@menu
-* Changed White Space:: When tabs and spaces don't match exactly.
-* Reversed Patches::    Applying reversed patches correctly.
-* Inexact::             Helping @command{patch} find close matches.
-* Dry Runs::            Predicting what @command{patch} will do.
-@end menu
-
-@node Changed White Space
-@subsection Applying Patches with Changed White Space
-@cindex white space in patches
-
-Sometimes mailers, editors, or other programs change spaces into tabs,
-or vice versa.  If this happens to a patch file or an input file, the
-files might look the same, but @command{patch} will not be able to match
-them properly.  If this problem occurs, use the @option{-l} or
-@option{--ignore-white-space} option, which makes @command{patch} compare
-blank characters (i.e.@: spaces and tabs) loosely so that any nonempty
-sequence of blanks in the patch file matches any nonempty sequence of
-blanks in the input files.  Non-blank
-characters must still match exactly.  Each line of the context must
-still match a line in the input file.
-
-@node Reversed Patches
-@subsection Applying Reversed Patches
-@cindex reversed patches
-
-Sometimes people run @command{diff} with the new file first instead of
-second.  This creates a diff that is ``reversed''.  To apply such
-patches, give @command{patch} the @option{-R} or @option{--reverse} option.
-@command{patch} then attempts to swap each hunk around before applying it.
-Rejects come out in the swapped format.
-
-Often @command{patch} can guess that the patch is reversed.  If the first
-hunk of a patch fails, @command{patch} reverses the hunk to see if it can
-apply it that way.  If it can, @command{patch} asks you if you want to have
-the @option{-R} option set; if it can't, @command{patch} continues to apply
-the patch normally.  This method cannot detect a reversed patch if it is
-a normal diff and the first command is an append (which should have been
-a delete) since appends always succeed, because a null context matches
-anywhere.  But most patches add or change lines rather than delete them,
-so most reversed normal diffs begin with a delete, which fails, and
-@command{patch} notices.
-
-If you apply a patch that you have already applied, @command{patch} thinks
-it is a reversed patch and offers to un-apply the patch.  This could be
-construed as a feature.  If you did this inadvertently and you don't
-want to un-apply the patch, just answer @samp{n} to this offer and to
-the subsequent ``apply anyway'' question---or type @kbd{C-c} to kill the
-@command{patch} process.
-
-@node Inexact
-@subsection Helping @command{patch} Find Inexact Matches
-@cindex inexact patches
-@cindex fuzz factor when patching
-
-For context diffs, and to a lesser extent normal diffs, @command{patch} can
-detect when the line numbers mentioned in the patch are incorrect, and
-it attempts to find the correct place to apply each hunk of the patch.
-As a first guess, it takes the line number mentioned in the hunk, plus
-or minus any offset used in applying the previous hunk.  If that is not
-the correct place, @command{patch} scans both forward and backward for a
-set of lines matching the context given in the hunk.
-
-First @command{patch} looks for a place where all lines of the context
-match.  If it cannot find such a place, and it is reading a context or
-unified diff, and the maximum fuzz factor is set to 1 or more, then
-@command{patch} makes another scan, ignoring the first and last line of
-context.  If that fails, and the maximum fuzz factor is set to 2 or
-more, it makes another scan, ignoring the first two and last two lines
-of context are ignored.  It continues similarly if the maximum fuzz
-factor is larger.
-
-The @option{-F @var{lines}} or @option{--fuzz=@var{lines}} option sets the
-maximum fuzz factor to @var{lines}.  This option only applies to context
-and unified diffs; it ignores up to @var{lines} lines while looking for
-the place to install a hunk.  Note that a larger fuzz factor increases
-the odds of making a faulty patch.  The default fuzz factor is 2; there
-is no point to setting it to more than the number of lines of context
-in the diff, ordinarily 3.
-
-If @command{patch} cannot find a place to install a hunk of the patch, it
-writes the hunk out to a reject file (@pxref{Reject Names}, for information
-on how reject files are named).  It writes out rejected hunks in context
-format no matter what form the input patch is in.  If the input is a
-normal or @command{ed} diff, many of the contexts are simply null.  The
-line numbers on the hunks in the reject file may be different from those
-in the patch file: they show the approximate location where @command{patch}
-thinks the failed hunks belong in the new file rather than in the old
-one.
-
-If the @option{--verbose} option is given, then
-as it completes each hunk @command{patch} tells you whether the hunk
-succeeded or failed, and if it failed, on which line (in the new file)
-@command{patch} thinks the hunk should go.  If this is different from the
-line number specified in the diff, it tells you the offset.  A single
-large offset @emph{may} indicate that @command{patch} installed a hunk in
-the wrong place.  @command{patch} also tells you if it used a fuzz factor
-to make the match, in which case you should also be slightly suspicious.
-
-@command{patch} cannot tell if the line numbers are off in an @command{ed}
-script, and can only detect wrong line numbers in a normal diff when it
-finds a change or delete command.  It may have the same problem with a
-context diff using a fuzz factor equal to or greater than the number of
-lines of context shown in the diff (typically 3).  In these cases, you
-should probably look at a context diff between your original and patched
-input files to see if the changes make sense.  Compiling without errors
-is a pretty good indication that the patch worked, but not a guarantee.
-
-A patch against an empty file applies to a nonexistent file, and vice
-versa.  @xref{Creating and Removing}.
-
-@command{patch} usually produces the correct results, even when it must
-make many guesses.  However, the results are guaranteed only when
-the patch is applied to an exact copy of the file that the patch was
-generated from.
-
-@node Dry Runs
-@subsection Predicting what @command{patch} will do
-@cindex testing @command{patch}
-@cindex dry runs for @command{patch}
-
-It may not be obvious in advance what @command{patch} will do with a
-complicated or poorly formatted patch.  If you are concerned that the
-input might cause @command{patch} to modify the wrong files, you can
-use the @option{--dry-run} option, which causes @command{patch} to
-print the results of applying patches without actually changing any
-files.  You can then inspect the diagnostics generated by the dry run
-to see whether @command{patch} will modify the files that you expect.
-If the patch does not do what you want, you can modify the patch (or
-the other options to @command{patch}) and try another dry run.  Once
-you are satisfied with the proposed patch you can apply it by invoking
-@command{patch} as before, but this time without the
-@option{--dry-run} option.
-
-@node Creating and Removing
-@section Creating and Removing Files
-@cindex creating files
-@cindex empty files, removing
-@cindex removing empty files
-
-Sometimes when comparing two directories, a file may exist in one
-directory but not the other.  If you give @command{diff} the
-@option{-N} or @option{--new-file} option, or if you supply an old or
-new file that is named @file{/dev/null} or is empty and is dated the
-Epoch (1970-01-01 00:00:00 UTC), @command{diff} outputs a patch that
-adds or deletes the contents of this file.  When given such a patch,
-@command{patch} normally creates a new file or removes the old file.
-However, when conforming to @acronym{POSIX} (@pxref{patch and POSIX}),
-@command{patch} does not remove the old file, but leaves it empty.
-The @option{-E} or @option{--remove-empty-files} option causes
-@command{patch} to remove output files that are empty after applying a
-patch, even if the patch does not appear to be one that removed the
-file.
-
-If the patch appears to create a file that already exists,
-@command{patch} asks for confirmation before applying the patch.
-
-@node Patching Time Stamps
-@section Updating Time Stamps on Patched Files
-@cindex time stamps on patched files
-
-When @command{patch} updates a file, it normally sets the file's
-last-modified time stamp to the current time of day.  If you are using
-@command{patch} to track a software distribution, this can cause
-@command{make} to incorrectly conclude that a patched file is out of
-date.  For example, if @file{syntax.c} depends on @file{syntax.y}, and
-@command{patch} updates @file{syntax.c} and then @file{syntax.y}, then
-@file{syntax.c} will normally appear to be out of date with respect to
-@file{syntax.y} even though its contents are actually up to date.
-
-The @option{-Z} or @option{--set-utc} option causes @command{patch} to
-set a patched file's modification and access times to the time stamps
-given in context diff headers.  If the context diff headers do not
-specify a time zone, they are assumed to use Coordinated Universal
-Time (@acronym{UTC}, often known as @acronym{GMT}).
-
-The @option{-T} or @option{--set-time} option acts like @option{-Z} or
-@option{--set-utc}, except that it assumes that the context diff
-headers' time stamps use local time instead of @acronym{UTC}.  This option
-is not recommended, because patches using local time cannot easily be
-used by people in other time zones, and because local time stamps are
-ambiguous when local clocks move backwards during daylight-saving time
-adjustments.  If the context diff headers specify a time zone, this
-option is equivalent to @option{-Z} or @option{--set-utc}.
-
-@command{patch} normally refrains from setting a file's time stamps if
-the file's original last-modified time stamp does not match the time
-given in the diff header, of if the file's contents do not exactly
-match the patch.  However, if the @option{-f} or @option{--force}
-option is given, the file's time stamps are set regardless.
-
-Due to the limitations of the current @command{diff} format,
-@command{patch} cannot update the times of files whose contents have
-not changed.  Also, if you set file time stamps to values other than
-the current time of day, you should also remove (e.g., with @samp{make
-clean}) all files that depend on the patched files, so that later
-invocations of @command{make} do not get confused by the patched
-files' times.
-
-@node Multiple Patches
-@section Multiple Patches in a File
-@cindex multiple patches
-@cindex intuiting file names from patches
-
-If the patch file contains more than one patch, and if you do not
-specify an input file on the command line, @command{patch} tries to
-apply each patch as if they came from separate patch files.  This
-means that it determines the name of the file to patch for each patch,
-and that it examines the leading text before each patch for file names
-and prerequisite revision level (@pxref{Making Patches}, for more on
-that topic).
-
-@command{patch} uses the following rules to intuit a file name from
-the leading text before a patch.  First, @command{patch} takes an
-ordered list of candidate file names as follows:
-
-@itemize @bullet
-@item
-If the header is that of a context diff, @command{patch} takes the old
-and new file names in the header.  A name is ignored if it does not
-have enough slashes to satisfy the @option{-p@var{num}} or
-@option{--strip=@var{num}} option.  The name @file{/dev/null} is also
-ignored.
-
-@item
-If there is an @samp{Index:} line in the leading garbage and if either
-the old and new names are both absent or if @command{patch} is
-conforming to @acronym{POSIX}, @command{patch} takes the name in the
-@samp{Index:} line.
-
-@item
-For the purpose of the following rules, the candidate file names are
-considered to be in the order (old, new, index), regardless of the
-order that they appear in the header.
-@end itemize
-
-@noindent
-Then @command{patch} selects a file name from the candidate list as
-follows:
-
-@itemize @bullet
-@item
-If some of the named files exist, @command{patch} selects the first
-name if conforming to @acronym{POSIX}, and the best name otherwise.
-
-@item
-If @command{patch} is not ignoring @acronym{RCS}, ClearCase, and @acronym{SCCS}
-(@pxref{Revision Control}), and no named files exist but an @acronym{RCS},
-ClearCase, or @acronym{SCCS} master is found, @command{patch} selects the
-first named file with an @acronym{RCS}, ClearCase, or @acronym{SCCS} master.
-
-@item
-If no named files exist, no @acronym{RCS}, ClearCase, or @acronym{SCCS} master
-was found, some names are given, @command{patch} is not conforming to
-@acronym{POSIX}, and the patch appears to create a file, @command{patch}
-selects the best name requiring the creation of the fewest
-directories.
-
-@item
-If no file name results from the above heuristics, you are asked for
-the name of the file to patch, and @command{patch} selects that name.
-@end itemize
-
-To determine the @dfn{best} of a nonempty list of file names,
-@command{patch} first takes all the names with the fewest path name
-components; of those, it then takes all the names with the shortest
-basename; of those, it then takes all the shortest names; finally, it
-takes the first remaining name.
-
-@xref{patch and POSIX}, to see whether @command{patch} is conforming
-to @acronym{POSIX}.
-
-@node patch Directories
-@section Applying Patches in Other Directories
-@cindex directories and patch
-@cindex patching directories
-
-The @option{-d @var{directory}} or @option{--directory=@var{directory}}
-option to @command{patch} makes directory @var{directory} the current
-directory for interpreting both file names in the patch file, and file
-names given as arguments to other options (such as @option{-B} and
-@option{-o}).  For example, while in a mail reading program, you can patch
-a file in the @file{/usr/src/emacs} directory directly from a message
-containing the patch like this:
-
-@example
-| patch -d /usr/src/emacs
-@end example
-
-Sometimes the file names given in a patch contain leading directories,
-but you keep your files in a directory different from the one given in
-the patch.  In those cases, you can use the
-@option{-p@var{number}} or @option{--strip=@var{number}}
-option to set the file name strip count to @var{number}.  The strip
-count tells @command{patch} how many slashes, along with the directory
-names between them, to strip from the front of file names.  A sequence
-of one or more adjacent slashes is counted as a single slash.  By
-default, @command{patch} strips off all leading directories, leaving
-just the base file names.
-
-For example, suppose the file name in the patch file is
-@file{/gnu/src/emacs/etc/NEWS}.  Using @option{-p0} gives the
-entire file name unmodified, @option{-p1} gives
-@file{gnu/src/emacs/etc/NEWS} (no leading slash), @option{-p4} gives
-@file{etc/NEWS}, and not specifying @option{-p} at all gives @file{NEWS}.
-
-@command{patch} looks for each file (after any slashes have been stripped)
-in the current directory, or if you used the @option{-d @var{directory}}
-option, in that directory.
-
-@node Backups
-@section Backup Files
-@cindex backup file strategy
-
-Normally, @command{patch} creates a backup file if the patch does not
-exactly match the original input file, because in that case the
-original data might not be recovered if you undo the patch with
-@samp{patch -R} (@pxref{Reversed Patches}).  However, when conforming
-to @acronym{POSIX}, @command{patch} does not create backup files by
-default.  @xref{patch and POSIX}.
-
-The @option{-b} or @option{--backup} option causes @command{patch} to
-make a backup file regardless of whether the patch matches the
-original input.  The @option{--backup-if-mismatch} option causes
-@command{patch} to create backup files for mismatches files; this is
-the default when not conforming to @acronym{POSIX}.  The
-@option{--no-backup-if-mismatch} option causes @command{patch} to not
-create backup files, even for mismatched patches; this is the default
-when conforming to @acronym{POSIX}.
-
-When backing up a file that does not exist, an empty, unreadable
-backup file is created as a placeholder to represent the nonexistent
-file.
-
-@node Backup Names
-@section Backup File Names
-@cindex backup file names
-
-Normally, @command{patch} renames an original input file into a backup
-file by appending to its name the extension @samp{.orig}, or @samp{~}
-if using @samp{.orig} would make the backup file name too
-long.@footnote{A coding error in @acronym{GNU} @command{patch} version
-2.5.4 causes it to always use @samp{~}, but this should be fixed in
-the next release.}  The @option{-z @var{backup-suffix}} or
-@option{--suffix=@var{backup-suffix}} option causes @command{patch} to
-use @var{backup-suffix} as the backup extension instead.
-
-@vindex SIMPLE_BACKUP_SUFFIX
-Alternately, you can specify the extension for backup files with the
-@env{SIMPLE_BACKUP_SUFFIX} environment variable, which the options
-override.
-
-@command{patch} can also create numbered backup files the way
-@acronym{GNU} Emacs does.  With this method, instead of having a
-single backup of each file, @command{patch} makes a new backup file
-name each time it patches a file.  For example, the backups of a file
-named @file{sink} would be called, successively, @file{sink.~1~},
-@file{sink.~2~}, @file{sink.~3~}, etc.
-
-@vindex PATCH_VERSION_CONTROL
-@vindex VERSION_CONTROL
-The @option{-V @var{backup-style}} or
-@option{--version-control=@var{backup-style}} option takes as an
-argument a method for creating backup file names.  You can alternately
-control the type of backups that @command{patch} makes with the
-@env{PATCH_VERSION_CONTROL} environment variable, which the
-@option{-V} option overrides.  If @env{PATCH_VERSION_CONTROL} is not
-set, the @env{VERSION_CONTROL} environment variable is used instead.
-Please note that these options and variables control backup file
-names; they do not affect the choice of revision control system
-(@pxref{Revision Control}).
-
-The values of these environment variables and the argument to the
-@option{-V} option are like the @acronym{GNU} Emacs @code{version-control}
-variable (@pxref{Backup Names, , , emacs, The @acronym{GNU} Emacs Manual},
-for more information on backup versions in Emacs).  They also
-recognize synonyms that are more descriptive.  The valid values are
-listed below; unique abbreviations are acceptable.
-
-@table @option
-@item t
-@itemx numbered
-Always make numbered backups.
-
-@item nil
-@itemx existing
-Make numbered backups of files that already have them, simple backups of
-the others.  This is the default.
-
-@item never
-@itemx simple
-Always make simple backups.
-@end table
-
-You can also tell @command{patch} to prepend a prefix, such as a
-directory name, to produce backup file names.  The @option{-B
-@var{prefix}} or @option{--prefix=@var{prefix}} option makes backup
-files by prepending @var{prefix} to them.  The @option{-Y
-@var{prefix}} or @option{--basename-prefix=@var{prefix}} prepends
-@var{prefix} to the last file name component of backup file names
-instead; for example, @option{-Y ~} causes the backup name for
-@file{dir/file.c} to be @file{dir/~file.c}.  If you use either of
-these prefix options, the suffix-based options are ignored.
-
-If you specify the output file with the @option{-o} option, that file is
-the one that is backed up, not the input file.
-
-Options that affect the names of backup files do not affect whether
-backups are made.  For example, if you specify the
-@option{--no-backup-if-mismatch} option, none of the options described
-in this section have any affect, because no backups are made.
-
-@node Reject Names
-@section Reject File Names
-@cindex reject file names
-
-The names for reject files (files containing patches that
-@command{patch} could not find a place to apply) are normally the name
-of the output file with @samp{.rej} appended (or @samp{#} if using
-@samp{.rej} would make the backup file name too long).
-
-Alternatively, you can tell @command{patch} to place all of the rejected
-patches in a single file.  The @option{-r @var{reject-file}} or
-@option{--reject-file=@var{reject-file}} option uses @var{reject-file} as
-the reject file name.
-
-@node patch Messages
-@section Messages and Questions from @command{patch}
-@cindex @command{patch} messages and questions
-@cindex diagnostics from @command{patch}
-@cindex messages from @command{patch}
-
-@command{patch} can produce a variety of messages, especially if it
-has trouble decoding its input.  In a few situations where it's not
-sure how to proceed, @command{patch} normally prompts you for more
-information from the keyboard.  There are options to produce more or
-fewer messages, to have it not ask for keyboard input, and to
-affect the way that file names are quoted in messages.
-
-@menu
-* More or Fewer Messages::    Controlling the verbosity of @command{patch}.
-* patch and Keyboard Input::  Inhibiting keyboard input.
-* patch Quoting Style::       Quoting file names in diagnostics.
-@end menu
-
-@command{patch} exits with status 0 if all hunks are applied successfully,
-1 if some hunks cannot be applied, and 2 if there is more serious trouble.
-When applying a set of patches in a loop, you should check the
-exit status, so you don't apply a later patch to a partially patched
-file.
-
-@node More or Fewer Messages
-@subsection Controlling the Verbosity of @command{patch}
-@cindex verbose messages from @command{patch}
-@cindex inhibit messages from @command{patch}
-
-You can cause @command{patch} to produce more messages by using the
-@option{--verbose} option.  For example, when you give this option,
-the message @samp{Hmm...} indicates that @command{patch} is reading text in
-the patch file, attempting to determine whether there is a patch in that
-text, and if so, what kind of patch it is.
-
-You can inhibit all terminal output from @command{patch}, unless an error
-occurs, by using the @option{-s}, @option{--quiet}, or @option{--silent}
-option.
-
-@node patch and Keyboard Input
-@subsection Inhibiting Keyboard Input
-@cindex keyboard input to @command{patch}
-
-There are two ways you can prevent @command{patch} from asking you any
-questions.  The @option{-f} or @option{--force} option assumes that you know
-what you are doing.  It causes @command{patch} to do the following:
-
-@itemize @bullet
-@item
-Skip patches that do not contain file names in their headers.
-
-@item
-Patch files even though they have the wrong version for the
-@samp{Prereq:} line in the patch;
-
-@item
-Assume that patches are not reversed even if they look like they are.
-@end itemize
-
-@noindent
-The @option{-t} or @option{--batch} option is similar to @option{-f}, in that
-it suppresses questions, but it makes somewhat different assumptions:
-
-@itemize @bullet
-@item
-Skip patches that do not contain file names in their headers
-(the same as @option{-f}).
-
-@item
-Skip patches for which the file has the wrong version for the
-@samp{Prereq:} line in the patch;
-
-@item
-Assume that patches are reversed if they look like they are.
-@end itemize
-
-@node patch Quoting Style
-@subsection @command{patch} Quoting Style
-@cindex quoting style
-
-When @command{patch} outputs a file name in a diagnostic message, it
-can format the name in any of several ways.  This can be useful to
-output file names unambiguously, even if they contain punctuation or
-special characters like newlines.  The
-@option{--quoting-style=@var{word}} option controls how names are
-output.  The @var{word} should be one of the following:
-
-@table @samp
-@item literal
-Output names as-is.
-@item shell
-Quote names for the shell if they contain shell metacharacters or would
-cause ambiguous output.
-@item shell-always
-Quote names for the shell, even if they would normally not require quoting.
-@item c
-Quote names as for a C language string.
-@item escape
-Quote as with @samp{c} except omit the surrounding double-quote
-characters.
-@c The following are not yet implemented in patch 2.5.4.
-@c @item clocale
-@c Quote as with @samp{c} except use quotation marks appropriate for the
-@c locale.
-@c @item locale
-@c @c Use @t instead of @samp to avoid duplicate quoting in some output styles.
-@c Like @samp{clocale}, but quote @t{`like this'} instead of @t{"like
-@c this"} in the default C locale.  This looks nicer on many displays.
-@end table
-
-@vindex QUOTING_STYLE
-You can specify the default value of the @option{--quoting-style}
-option with the environment variable @env{QUOTING_STYLE}.  If that
-environment variable is not set, the default value is @samp{shell},
-but this default may change in a future version of @command{patch}.
-
-@node patch and POSIX
-@section @command{patch} and the @acronym{POSIX} Standard
-@cindex @acronym{POSIX}
-
-@vindex POSIXLY_CORRECT
-If you specify the @option{--posix} option, or set the
-@env{POSIXLY_CORRECT} environment variable, @command{patch} conforms
-more strictly to the @acronym{POSIX} standard, as follows:
-
-@itemize @bullet
-@item
-Take the first existing file from the list (old, new, index)
-when intuiting file names from diff headers.  @xref{Multiple Patches}.
-
-@item
-Do not remove files that are removed by a diff.
-@xref{Creating and Removing}.
-
-@item
-Do not ask whether to get files from @acronym{RCS}, ClearCase, or
-@acronym{SCCS}.  @xref{Revision Control}.
-
-@item
-Require that all options precede the files in the command line.
-
-@item
-Do not backup files, even when there is a mismatch.  @xref{Backups}.
-
-@end itemize
-
-@node patch and Tradition
-@section @acronym{GNU} @command{patch} and Traditional @command{patch}
-@cindex traditional @command{patch}
-
-The current version of @acronym{GNU} @command{patch} normally follows the
-@acronym{POSIX} standard.  @xref{patch and POSIX}, for the few exceptions
-to this general rule.
-
-Unfortunately, @acronym{POSIX} redefined the behavior of @command{patch} in
-several important ways.  You should be aware of the following
-differences if you must interoperate with traditional @command{patch},
-or with @acronym{GNU} @command{patch} version 2.1 and earlier.
-
-@itemize @bullet
-@item
-In traditional @command{patch}, the @option{-p} option's operand was
-optional, and a bare @option{-p} was equivalent to @option{-p0}.  The
-@option{-p} option now requires an operand, and @option{-p@ 0} is now
-equivalent to @option{-p0}.  For maximum compatibility, use options
-like @option{-p0} and @option{-p1}.
-
-Also, traditional @command{patch} simply counted slashes when
-stripping path prefixes; @command{patch} now counts pathname
-components.  That is, a sequence of one or more adjacent slashes now
-counts as a single slash.  For maximum portability, avoid sending
-patches containing @file{//} in file names.
-
-@item
-In traditional @command{patch}, backups were enabled by default.  This
-behavior is now enabled with the @option{-b} or @option{--backup}
-option.
-
-Conversely, in @acronym{POSIX} @command{patch}, backups are never made,
-even when there is a mismatch.  In @acronym{GNU} @command{patch}, this
-behavior is enabled with the @option{--no-backup-if-mismatch} option,
-or by conforming to @acronym{POSIX}.
-
-The @option{-b@ @var{suffix}} option of traditional @command{patch} is
-equivalent to the @samp{-b -z@ @var{suffix}} options of @acronym{GNU}
-@command{patch}.
-
-@item
-Traditional @command{patch} used a complicated (and incompletely
-documented) method to intuit the name of the file to be patched from
-the patch header.  This method did not conform to @acronym{POSIX}, and had
-a few gotchas.  Now @command{patch} uses a different, equally
-complicated (but better documented) method that is optionally
-@acronym{POSIX}-conforming; we hope it has fewer gotchas.  The two methods
-are compatible if the file names in the context diff header and the
-@samp{Index:} line are all identical after prefix-stripping.  Your
-patch is normally compatible if each header's file names all contain
-the same number of slashes.
-
-@item
-When traditional @command{patch} asked the user a question, it sent
-the question to standard error and looked for an answer from the first
-file in the following list that was a terminal: standard error,
-standard output, @file{/dev/tty}, and standard input.  Now
-@command{patch} sends questions to standard output and gets answers
-from @file{/dev/tty}.  Defaults for some answers have been changed so
-that @command{patch} never goes into an infinite loop when using
-default answers.
-
-@item
-Traditional @command{patch} exited with a status value that counted
-the number of bad hunks, or with status 1 if there was real trouble.
-Now @command{patch} exits with status 1 if some hunks failed, or with
-2 if there was real trouble.
-
-@item
-Limit yourself to the following options when sending instructions
-meant to be executed by anyone running @acronym{GNU} @command{patch},
-traditional @command{patch}, or a @command{patch} that conforms to
-@acronym{POSIX}.  Spaces are significant in the following list, and
-operands are required.
-
-@example
-@option{-c}
-@option{-d @var{dir}}
-@option{-D @var{define}}
-@option{-e}
-@option{-l}
-@option{-n}
-@option{-N}
-@option{-o @var{outfile}}
-@option{-p@var{num}}
-@option{-R}
-@option{-r @var{rejectfile}}
-@end example
-
-@end itemize
-
-@node Making Patches
-@chapter Tips for Making and Using Patches
-
-Use some common sense when making and using patches.  For example,
-when sending bug fixes to a program's maintainer, send several small
-patches, one per independent subject, instead of one large,
-harder-to-digest patch that covers all the subjects.
-
-Here are some other things you should keep in mind if you are going to
-distribute patches for updating a software package.
-
-@menu
-* Tips for Patch Producers::    Advice for making patches.
-* Tips for Patch Consumers::    Advice for using patches.
-* Avoiding Common Mistakes::    Avoiding common mistakes when using @command{patch}.
-* Generating Smaller Patches::  How to generate smaller patches.
-@end menu
-
-@node Tips for Patch Producers
-@section Tips for Patch Producers
-@cindex patch producer tips
-
-To create a patch that changes an older version of a package into a
-newer version, first make a copy of the older and newer versions in
-adjacent subdirectories.  It is common to do that by unpacking
-@command{tar} archives of the two versions.
-
-To generate the patch, use the command @samp{diff -Naur @var{old}
-@var{new}} where @var{old} and @var{new} identify the old and new
-directories.  The names @var{old} and @var{new} should not contain any
-slashes.  The @option{-N} option lets the patch create and remove
-files; @option{-a} lets the patch update non-text files; @option{-u}
-generates useful time stamps and enough context; and @option{-r} lets
-the patch update subdirectories.  Here is an example command, using
-Bourne shell syntax:
-
-@example
-diff -Naur gcc-3.0.3 gcc-3.0.4
-@end example
-
-Tell your recipients how to apply the patches.  This should include
-which working directory to use, and which @command{patch} options to
-use; the option @samp{-p1} is recommended.  Test your procedure by
-pretending to be a recipient and applying your patches to a copy of
-the original files.
-
-@xref{Avoiding Common Mistakes}, for how to avoid common mistakes when
-generating a patch.
-
-@node Tips for Patch Consumers
-@section Tips for Patch Consumers
-@cindex patch consumer tips
-
-A patch producer should tell recipients how to apply the patches, so
-the first rule of thumb for a patch consumer is to follow the
-instructions supplied with the patch.
-
-@acronym{GNU} @command{diff} can analyze files with arbitrarily long lines
-and files that end in incomplete lines.  However, older versions of
-@command{patch} cannot patch such files.  If you are having trouble
-applying such patches, try upgrading to a recent version of @acronym{GNU}
-@command{patch}.
-
-@node Avoiding Common Mistakes
-@section Avoiding Common Mistakes
-@cindex common mistakes with patches
-@cindex patch, common mistakes
-
-When producing a patch for multiple files, apply @command{diff} to
-directories whose names do not have slashes.  This reduces confusion
-when the patch consumer specifies the @option{-p@var{number}} option,
-since this option can have surprising results when the old and new
-file names have different numbers of slashes.  For example, do not
-send a patch with a header that looks like this:
-
-@example
-diff -Naur v2.0.29/prog/README prog/README
---- v2.0.29/prog/README	2002-03-10 23:30:39.942229878 -0800
-+++ prog/README	2002-03-17 20:49:32.442260588 -0800
-@end example
-
-@noindent
-because the two file names have different numbers of slashes, and
-different versions of @command{patch} interpret the file names
-differently.  To avoid confusion, send output that looks like this
-instead:
-
-@example
-diff -Naur v2.0.29/prog/README v2.0.30/prog/README
---- v2.0.29/prog/README	2002-03-10 23:30:39.942229878 -0800
-+++ v2.0.30/prog/README	2002-03-17 20:49:32.442260588 -0800
-@end example
-
-Make sure you have specified the file names correctly, either in a
-context diff header or with an @samp{Index:} line.  Take care to not send out
-reversed patches, since these make people wonder whether they have
-already applied the patch.
-
-Avoid sending patches that compare backup file names like
-@file{README.orig} or @file{README~}, since this might confuse
-@command{patch} into patching a backup file instead of the real file.
-Instead, send patches that compare the same base file names in
-different directories, e.g.@: @file{old/README} and @file{new/README}.
-
-To save people from partially applying a patch before other patches that
-should have gone before it, you can make the first patch in the patch
-file update a file with a name like @file{patchlevel.h} or
-@file{version.c}, which contains a patch level or version number.  If
-the input file contains the wrong version number, @command{patch} will
-complain immediately.
-
-An even clearer way to prevent this problem is to put a @samp{Prereq:}
-line before the patch.  If the leading text in the patch file contains a
-line that starts with @samp{Prereq:}, @command{patch} takes the next word
-from that line (normally a version number) and checks whether the next
-input file contains that word, preceded and followed by either
-white space or a newline.  If not, @command{patch} prompts you for
-confirmation before proceeding.  This makes it difficult to accidentally
-apply patches in the wrong order.
-
-@node Generating Smaller Patches
-@section Generating Smaller Patches
-@cindex patches, shrinking
-
-The simplest way to generate a patch is to use @samp{diff -Naur}
-(@pxref{Tips for Patch Producers}), but you might be able to reduce
-the size of the patch by renaming or removing some files before making
-the patch.  If the older version of the package contains any files
-that the newer version does not, or if any files have been renamed
-between the two versions, make a list of @command{rm} and @command{mv}
-commands for the user to execute in the old version directory before
-applying the patch.  Then run those commands yourself in the scratch
-directory.
-
-If there are any files that you don't need to include in the patch
-because they can easily be rebuilt from other files (for example,
-@file{TAGS} and output from @command{yacc} and @command{makeinfo}),
-exclude them from the patch by giving @command{diff} the @option{-x
-@var{pattern}} option (@pxref{Comparing Directories}).  If you want
-your patch to modify a derived file because your recipients lack tools
-to build it, make sure that the patch for the derived file follows any
-patches for files that it depends on, so that the recipients' time
-stamps will not confuse @command{make}.
-
-Now you can create the patch using @samp{diff -Naur}.  Make sure to
-specify the scratch directory first and the newer directory second.
-
-Add to the top of the patch a note telling the user any @command{rm} and
-@command{mv} commands to run before applying the patch.  Then you can
-remove the scratch directory.
-
-You can also shrink the patch size by using fewer lines of context,
-but bear in mind that @command{patch} typically needs at least two
-lines for proper operation when patches do not exactly match the input
-files.
-
-@node Invoking cmp
-@chapter Invoking @command{cmp}
-@cindex invoking @command{cmp}
-@cindex @command{cmp} invocation
-
-The @command{cmp} command compares two files, and if they differ,
-tells the first byte and line number where they differ or reports
-that one file is a prefix of the other.  Bytes and
-lines are numbered starting with 1.  The arguments of @command{cmp}
-are as follows:
-
-@example
-cmp @var{options}@dots{} @var{from-file} @r{[}@var{to-file} @r{[}@var{from-skip} @r{[}@var{to-skip}@r{]}@r{]}@r{]}
-@end example
-
-The file name @file{-} is always the standard input.  @command{cmp}
-also uses the standard input if one file name is omitted.  The
-@var{from-skip} and @var{to-skip} operands specify how many bytes to
-ignore at the start of each file; they are equivalent to the
-@option{--ignore-initial=@var{from-skip}:@var{to-skip}} option.
-
-By default, @command{cmp} outputs nothing if the two files have the
-same contents.  If one file is a prefix of the other, @command{cmp}
-prints to standard error a message of the following form:
-
-@example
-cmp: EOF on @var{shorter-file}
-@end example
-
-Otherwise, @command{cmp} prints to standard output a message of the
-following form:
-
-@example
-@var{from-file} @var{to-file} differ: char @var{byte-number}, line @var{line-number}
-@end example
-
-The message formats can differ outside the @acronym{POSIX} locale.
-Also, @acronym{POSIX} allows the @acronym{EOF} message to be followed
-by a blank and some additional information.
-
-An exit status of 0 means no differences were found, 1 means some
-differences were found, and 2 means trouble.
-
-@menu
-* cmp Options:: Summary of options to @command{cmp}.
-@end menu
-
-@node cmp Options
-@section Options to @command{cmp}
-@cindex @command{cmp} options
-@cindex options for @command{cmp}
-
-Below is a summary of all of the options that @acronym{GNU}
-@command{cmp} accepts.  Most options have two equivalent names, one of
-which is a single letter preceded by @samp{-}, and the other of which
-is a long name preceded by @samp{--}.  Multiple single letter options
-(unless they take an argument) can be combined into a single command
-line word: @option{-bl} is equivalent to @option{-b -l}.
-
-@table @option
-@item -b
-@itemx --print-bytes
-Print the differing bytes.  Display control bytes as a
-@samp{^} followed by a letter of the alphabet and precede bytes
-that have the high bit set with @samp{M-} (which stands for ``meta'').
-
-@item --help
-Output a summary of usage and then exit.
-
-@item -i @var{skip}
-@itemx --ignore-initial=@var{skip}
-Ignore any differences in the first @var{skip} bytes of the input
-files.  Treat files with fewer than @var{skip} bytes as if they are
-empty.  If @var{skip} is of the form
-@option{@var{from-skip}:@var{to-skip}}, skip the first @var{from-skip}
-bytes of the first input file and the first @var{to-skip} bytes of the
-second.
-
-@item -l
-@itemx --verbose
-Output the (decimal) byte numbers and (octal) values of all differing bytes,
-instead of the default standard output.
-Also, output the @acronym{EOF} message if one file is shorter than the other.
-
-@item -n @var{count}
-@itemx --bytes=@var{count}
-Compare at most @var{count} input bytes.
-
-@item -s
-@itemx --quiet
-@itemx --silent
-Do not print anything; only return an exit status indicating whether
-the files differ.
-
-@item -v
-@itemx --version
-Output version information and then exit.
-@end table
-
-In the above table, operands that are byte counts are normally
-decimal, but may be preceded by @samp{0} for octal and @samp{0x} for
-hexadecimal.
-
-A byte count can be followed by a suffix to specify a multiple of that
-count; in this case an omitted integer is understood to be 1.  A bare
-size letter, or one followed by @samp{iB}, specifies a multiple using
-powers of 1024.  A size letter followed by @samp{B} specifies powers
-of 1000 instead.  For example, @option{-n 4M} and @option{-n 4MiB} are
-equivalent to @option{-n 4194304}, whereas @option{-n 4MB} is
-equivalent to @option{-n 4000000}.  This notation is upward compatible
-with the @uref{http://www.bipm.fr/enus/3_SI/si-prefixes.html, SI
-prefixes} for decimal multiples and with the
-@uref{http://physics.nist.gov/cuu/Units/binary.html, IEC 60027-2
-prefixes for binary multiples}.
-
-The following suffixes are defined.  Large sizes like @code{1Y} may be
-rejected by your computer due to limitations of its arithmetic.
-
-@table @samp
-@item kB
-@cindex kilobyte, definition of
-kilobyte: @math{10^3 = 1000}.
-@item k
-@itemx K
-@itemx KiB
-@cindex kibibyte, definition of
-kibibyte: @math{2^10 = 1024}.  @samp{K} is special: the SI prefix is
-@samp{k} and the IEC 60027-2 prefix is @samp{Ki}, but tradition and
-@acronym{POSIX} use @samp{k} to mean @samp{KiB}.
-@item MB
-@cindex megabyte, definition of
-megabyte: @math{10^6 = 1,000,000}.
-@item M
-@itemx MiB
-@cindex mebibyte, definition of
-mebibyte: @math{2^20 = 1,048,576}.
-@item GB
-@cindex gigabyte, definition of
-gigabyte: @math{10^9 = 1,000,000,000}.
-@item G
-@itemx GiB
-@cindex gibibyte, definition of
-gibibyte: @math{2^30 = 1,073,741,824}.
-@item TB
-@cindex terabyte, definition of
-terabyte:  @math{10^12 = 1,000,000,000,000}.
-@item T
-@itemx TiB
-@cindex tebibyte, definition of
-tebibyte: @math{2^40 = 1,099,511,627,776}.
-@item PB
-@cindex petabyte, definition of
-petabyte: @math{10^15 = 1,000,000,000,000,000}.
-@item P
-@itemx PiB
-@cindex pebibyte, definition of
-pebibyte: @math{2^50 = 1,125,899,906,842,624}.
-@item EB
-@cindex exabyte, definition of
-exabyte: @math{10^18 = 1,000,000,000,000,000,000}.
-@item E
-@itemx EiB
-@cindex exbibyte, definition of
-exbibyte: @math{2^60 = 1,152,921,504,606,846,976}.
-@item ZB
-@cindex zettabyte, definition of
-zettabyte: @math{10^21 = 1,000,000,000,000,000,000,000}
-@item Z
-@itemx ZiB
-@math{2^70 = 1,180,591,620,717,411,303,424}.
-(@samp{Zi} is a GNU extension to IEC 60027-2.)
-@item YB
-@cindex yottabyte, definition of
-yottabyte: @math{10^24 = 1,000,000,000,000,000,000,000,000}.
-@item Y
-@itemx YiB
-@math{2^80 = 1,208,925,819,614,629,174,706,176}.
-(@samp{Yi} is a GNU extension to IEC 60027-2.)
-@end table
-
-@node Invoking diff
-@chapter Invoking @command{diff}
-@cindex invoking @command{diff}
-@cindex @command{diff} invocation
-
-The format for running the @command{diff} command is:
-
-@example
-diff @var{options}@dots{} @var{files}@dots{}
-@end example
-
-In the simplest case, two file names @var{from-file} and
-@var{to-file} are given, and @command{diff} compares the contents of
-@var{from-file} and @var{to-file}.  A file name of @file{-} stands for
-text read from the standard input.  As a special case, @samp{diff - -}
-compares a copy of standard input to itself.
-
-If one file is a directory and the other is not, @command{diff} compares
-the file in the directory whose name is that of the non-directory.
-The non-directory file must not be @file{-}.
-
-If two file names are given and both are directories,
-@command{diff} compares corresponding files in both directories, in
-alphabetical order; this comparison is not recursive unless the
-@option{-r} or @option{--recursive} option is given.  @command{diff} never
-compares the actual contents of a directory as if it were a file.  The
-file that is fully specified may not be standard input, because standard
-input is nameless and the notion of ``file with the same name'' does not
-apply.
-
-If the @option{--from-file=@var{file}} option is given, the number of
-file names is arbitrary, and @var{file} is compared to each named file.
-Similarly, if the @option{--to-file=@var{file}} option is given, each
-named file is compared to @var{file}.
-
-@command{diff} options begin with @samp{-}, so normally file names
-may not begin with @samp{-}.  However, @option{--} as an
-argument by itself treats the remaining arguments as file names even if
-they begin with @samp{-}.
-
-An exit status of 0 means no differences were found, 1 means some
-differences were found, and 2 means trouble.  Normally, differing
-binary files count as trouble, but this can be altered by using the
-@option{-a} or @option{--text} option, or the @option{-q} or
-@option{--brief} option.
-
-@menu
-* diff Options:: Summary of options to @command{diff}.
-@end menu
-
-@node diff Options
-@section Options to @command{diff}
-@cindex @command{diff} options
-@cindex options for @command{diff}
-
-Below is a summary of all of the options that @acronym{GNU}
-@command{diff} accepts.  Most options have two equivalent names, one
-of which is a single letter preceded by @samp{-}, and the other of
-which is a long name preceded by @samp{--}.  Multiple single letter
-options (unless they take an argument) can be combined into a single
-command line word: @option{-ac} is equivalent to @option{-a -c}.  Long
-named options can be abbreviated to any unique prefix of their name.
-Brackets ([ and ]) indicate that an option takes an optional argument.
-
-@table @option
-@item -a
-@itemx --text
-Treat all files as text and compare them line-by-line, even if they
-do not seem to be text.  @xref{Binary}.
-
-@item -b
-@itemx --ignore-space-change
-Ignore changes in amount of white space.  @xref{White Space}.
-
-@item -B
-@itemx --ignore-blank-lines
-Ignore changes that just insert or delete blank lines.  @xref{Blank
-Lines}.
-
-@item --binary
-Read and write data in binary mode.  @xref{Binary}.
-
-@item -c
-Use the context output format, showing three lines of context.
-@xref{Context Format}.
-
-@item -C @var{lines}
-@itemx --context@r{[}=@var{lines}@r{]}
-Use the context output format, showing @var{lines} (an integer) lines of
-context, or three if @var{lines} is not given.  @xref{Context Format}.
-For proper operation, @command{patch} typically needs at least two lines of
-context.
-
-For compatibility @command{diff} also supports an obsolete option
-syntax @option{-@var{lines}} that has effect when combined with
-@option{-c}, @option{-p}, or @option{-u}.  New scripts should use
-@option{-C @var{lines}} or @option{-U @var{lines}} instead.
-
-@item --changed-group-format=@var{format}
-Use @var{format} to output a line group containing differing lines from
-both files in if-then-else format.  @xref{Line Group Formats}.
-
-@item -d
-@itemx --minimal
-Change the algorithm perhaps find a smaller set of changes.  This makes
-@command{diff} slower (sometimes much slower).  @xref{diff Performance}.
-
-@item -D @var{name}
-@itemx --ifdef=@var{name}
-Make merged @samp{#ifdef} format output, conditional on the preprocessor
-macro @var{name}.  @xref{If-then-else}.
-
-@item -e
-@itemx --ed
-Make output that is a valid @command{ed} script.  @xref{ed Scripts}.
-
-@item -E
-@itemx --ignore-tab-expansion
-Ignore changes due to tab expansion.
-@xref{White Space}.
-
-@item -f
-@itemx --forward-ed
-Make output that looks vaguely like an @command{ed} script but has changes
-in the order they appear in the file.  @xref{Forward ed}.
-
-@item -F @var{regexp}
-@itemx --show-function-line=@var{regexp}
-In context and unified format, for each hunk of differences, show some
-of the last preceding line that matches @var{regexp}.  @xref{Specified
-Headings}.
-
-@item --from-file=@var{file}
-Compare @var{file} to each operand; @var{file} may be a directory.
-
-@item --help
-Output a summary of usage and then exit.
-
-@item --horizon-lines=@var{lines}
-Do not discard the last @var{lines} lines of the common prefix
-and the first @var{lines} lines of the common suffix.
-@xref{diff Performance}.
-
-@item -i
-@itemx --ignore-case
-Ignore changes in case; consider upper- and lower-case letters
-equivalent.  @xref{Case Folding}.
-
-@item -I @var{regexp}
-@itemx --ignore-matching-lines=@var{regexp}
-Ignore changes that just insert or delete lines that match @var{regexp}.
-@xref{Specified Lines}.
-
-@item --ignore-file-name-case
-Ignore case when comparing file names during recursive comparison.
-@xref{Comparing Directories}.
-
-@item -l
-@itemx --paginate
-Pass the output through @command{pr} to paginate it.  @xref{Pagination}.
-
-@item --label=@var{label}
-Use @var{label} instead of the file name in the context format
-(@pxref{Context Format}) and unified format (@pxref{Unified Format})
-headers.  @xref{RCS}.
-
-@item --left-column
-Print only the left column of two common lines in side by side format.
-@xref{Side by Side Format}.
-
-@item --line-format=@var{format}
-Use @var{format} to output all input lines in if-then-else format.
-@xref{Line Formats}.
-
-@item -n
-@itemx --rcs
-Output @acronym{RCS}-format diffs; like @option{-f} except that each command
-specifies the number of lines affected.  @xref{RCS}.
-
-@item -N
-@itemx --new-file
-In directory comparison, if a file is found in only one directory,
-treat it as present but empty in the other directory.  @xref{Comparing
-Directories}.
-
-@item --new-group-format=@var{format}
-Use @var{format} to output a group of lines taken from just the second
-file in if-then-else format.  @xref{Line Group Formats}.
-
-@item --new-line-format=@var{format}
-Use @var{format} to output a line taken from just the second file in
-if-then-else format.  @xref{Line Formats}.
-
-@item --old-group-format=@var{format}
-Use @var{format} to output a group of lines taken from just the first
-file in if-then-else format.  @xref{Line Group Formats}.
-
-@item --old-line-format=@var{format}
-Use @var{format} to output a line taken from just the first file in
-if-then-else format.  @xref{Line Formats}.
-
-@item -p
-@itemx --show-c-function
-Show which C function each change is in.  @xref{C Function Headings}.
-
-@item -q
-@itemx --brief
-Report only whether the files differ, not the details of the
-differences.  @xref{Brief}.
-
-@item -r
-@itemx --recursive
-When comparing directories, recursively compare any subdirectories
-found.  @xref{Comparing Directories}.
-
-@item -s
-@itemx --report-identical-files
-Report when two files are the same.  @xref{Comparing Directories}.
-
-@item -S @var{file}
-@itemx --starting-file=@var{file}
-When comparing directories, start with the file @var{file}.  This is
-used for resuming an aborted comparison.  @xref{Comparing Directories}.
-
-@item --speed-large-files
-Use heuristics to speed handling of large files that have numerous
-scattered small changes.  @xref{diff Performance}.
-
-@item --strip-trailing-cr
-Strip any trailing carriage return at the end of an input line.
-@xref{Binary}.
-
-@item --suppress-common-lines
-Do not print common lines in side by side format.
-@xref{Side by Side Format}.
-
-@item -t
-@itemx --expand-tabs
-Expand tabs to spaces in the output, to preserve the alignment of tabs
-in the input files.  @xref{Tabs}.
-
-@item -T
-@itemx --initial-tab
-Output a tab rather than a space before the text of a line in normal or
-context format.  This causes the alignment of tabs in the line to look
-normal.  @xref{Tabs}.
-
-@item --tabsize=@var{columns}
-Assume that tab stops are set every @var{columns} (default 8) print
-columns.  @xref{Tabs}.
-
-@item --suppress-blank-empty
-Suppress any blanks before newlines when printing the representation
-of an empty line, when outputting normal, context, or unified format.
-@xref{Trailing Blanks}.
-
-@item --to-file=@var{file}
-Compare each operand to @var{file}; @var{file} may be a directory.
-
-@item -u
-Use the unified output format, showing three lines of context.
-@xref{Unified Format}.
-
-@item --unchanged-group-format=@var{format}
-Use @var{format} to output a group of common lines taken from both files
-in if-then-else format.  @xref{Line Group Formats}.
-
-@item --unchanged-line-format=@var{format}
-Use @var{format} to output a line common to both files in if-then-else
-format.  @xref{Line Formats}.
-
-@item --unidirectional-new-file
-When comparing directories, if a file appears only in the second
-directory of the two, treat it as present but empty in the other.
-@xref{Comparing Directories}.
-
-@item -U @var{lines}
-@itemx --unified@r{[}=@var{lines}@r{]}
-Use the unified output format, showing @var{lines} (an integer) lines of
-context, or three if @var{lines} is not given.  @xref{Unified Format}.
-For proper operation, @command{patch} typically needs at least two lines of
-context.
-
-On older systems, @command{diff} supports an obsolete option
-@option{-@var{lines}} that has effect when combined with @option{-u}.
-@acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance}) does not allow
-this; use @option{-U @var{lines}} instead.
-
-@item -v
-@itemx --version
-Output version information and then exit.
-
-@item -w
-@itemx --ignore-all-space
-Ignore white space when comparing lines.  @xref{White Space}.
-
-@item -W @var{columns}
-@itemx --width=@var{columns}
-Output at most @var{columns} (default 130) print columns per line in
-side by side format.  @xref{Side by Side Format}.
-
-@item -x @var{pattern}
-@itemx --exclude=@var{pattern}
-When comparing directories, ignore files and subdirectories whose basenames
-match @var{pattern}.  @xref{Comparing Directories}.
-
-@item -X @var{file}
-@itemx --exclude-from=@var{file}
-When comparing directories, ignore files and subdirectories whose basenames
-match any pattern contained in @var{file}.  @xref{Comparing Directories}.
-
-@item -y
-@itemx --side-by-side
-Use the side by side output format.  @xref{Side by Side Format}.
-@end table
-
-@node Invoking diff3
-@chapter Invoking @command{diff3}
-@cindex invoking @command{diff3}
-@cindex @command{diff3} invocation
-
-The @command{diff3} command compares three files and outputs descriptions
-of their differences.  Its arguments are as follows:
-
-@example
-diff3 @var{options}@dots{} @var{mine} @var{older} @var{yours}
-@end example
-
-The files to compare are @var{mine}, @var{older}, and @var{yours}.
-At most one of these three file names may be @file{-},
-which tells @command{diff3} to read the standard input for that file.
-
-An exit status of 0 means @command{diff3} was successful, 1 means some
-conflicts were found, and 2 means trouble.
-
-@menu
-* diff3 Options:: Summary of options to @command{diff3}.
-@end menu
-
-@node diff3 Options
-@section Options to @command{diff3}
-@cindex @command{diff3} options
-@cindex options for @command{diff3}
-
-Below is a summary of all of the options that @acronym{GNU} @command{diff3}
-accepts.  Multiple single letter options (unless they take an argument)
-can be combined into a single command line argument.
-
-@table @option
-@item -a
-@itemx --text
-Treat all files as text and compare them line-by-line, even if they
-do not appear to be text.  @xref{Binary}.
-
-@item -A
-@itemx --show-all
-Incorporate all unmerged changes from @var{older} to @var{yours} into
-@var{mine}, surrounding conflicts with bracket lines.
-@xref{Marking Conflicts}.
-
-@item --diff-program=@var{program}
-Use the compatible comparison program @var{program} to compare files
-instead of @command{diff}.
-
-@item -e
-@itemx --ed
-Generate an @command{ed} script that incorporates all the changes from
-@var{older} to @var{yours} into @var{mine}.  @xref{Which Changes}.
-
-@item -E
-@itemx --show-overlap
-Like @option{-e}, except bracket lines from overlapping changes' first
-and third files.
-@xref{Marking Conflicts}.
-With @option{-E}, an overlapping change looks like this:
-
-@example
-<<<<<<< @var{mine}
-@r{lines from @var{mine}}
-=======
-@r{lines from @var{yours}}
->>>>>>> @var{yours}
-@end example
-
-@item --help
-Output a summary of usage and then exit.
-
-@item -i
-Generate @samp{w} and @samp{q} commands at the end of the @command{ed}
-script for System V compatibility.  This option must be combined with
-one of the @option{-AeExX3} options, and may not be combined with @option{-m}.
-@xref{Saving the Changed File}.
-
-@item --label=@var{label}
-Use the label @var{label} for the brackets output by the @option{-A},
-@option{-E} and @option{-X} options.  This option may be given up to three
-times, one for each input file.  The default labels are the names of
-the input files.  Thus @samp{diff3 --label X --label Y --label Z -m A
-B C} acts like
-@samp{diff3 -m A B C}, except that the output looks like it came from
-files named @samp{X}, @samp{Y} and @samp{Z} rather than from files
-named @samp{A}, @samp{B} and @samp{C}.  @xref{Marking Conflicts}.
-
-@item -m
-@itemx --merge
-Apply the edit script to the first file and send the result to standard
-output.  Unlike piping the output from @command{diff3} to @command{ed}, this
-works even for binary files and incomplete lines.  @option{-A} is assumed
-if no edit script option is specified.  @xref{Bypassing ed}.
-
-@item --strip-trailing-cr
-Strip any trailing carriage return at the end of an input line.
-@xref{Binary}.
-
-@item -T
-@itemx --initial-tab
-Output a tab rather than two spaces before the text of a line in normal format.
-This causes the alignment of tabs in the line to look normal.  @xref{Tabs}.
-
-@item -v
-@itemx --version
-Output version information and then exit.
-
-@item -x
-@itemx --overlap-only
-Like @option{-e}, except output only the overlapping changes.
-@xref{Which Changes}.
-
-@item -X
-Like @option{-E}, except output only the overlapping changes.
-In other words, like @option{-x}, except bracket changes as in @option{-E}.
-@xref{Marking Conflicts}.
-
-@item -3
-@itemx --easy-only
-Like @option{-e}, except output only the nonoverlapping changes.
-@xref{Which Changes}.
-@end table
-
-@node Invoking patch
-@chapter Invoking @command{patch}
-@cindex invoking @command{patch}
-@cindex @command{patch} invocation
-
-Normally @command{patch} is invoked like this:
-
-@example
-patch <@var{patchfile}
-@end example
-
-The full format for invoking @command{patch} is:
-
-@example
-patch @var{options}@dots{} @r{[}@var{origfile} @r{[}@var{patchfile}@r{]}@r{]}
-@end example
-
-You can also specify where to read the patch from with the @option{-i
-@var{patchfile}} or @option{--input=@var{patchfile}} option.
-If you do not specify @var{patchfile}, or if @var{patchfile} is
-@file{-}, @command{patch} reads the patch (that is, the @command{diff} output)
-from the standard input.
-
-If you do not specify an input file on the command line, @command{patch}
-tries to intuit from the @dfn{leading text} (any text in the patch
-that comes before the @command{diff} output) which file to edit.
-@xref{Multiple Patches}.
-
-By default, @command{patch} replaces the original input file with the
-patched version, possibly after renaming the original file into a
-backup file (@pxref{Backup Names}, for a description of how
-@command{patch} names backup files).  You can also specify where to
-put the output with the @option{-o @var{file}} or
-@option{--output=@var{file}} option; however, do not use this option
-if @var{file} is one of the input files.
-
-@menu
-* patch Options::     Summary table of options to @command{patch}.
-@end menu
-
-@node patch Options
-@section Options to @command{patch}
-@cindex @command{patch} options
-@cindex options for @command{patch}
-
-Here is a summary of all of the options that @acronym{GNU} @command{patch}
-accepts.  @xref{patch and Tradition}, for which of these options are
-safe to use in older versions of @command{patch}.
-
-Multiple single-letter options that do not take an argument can be
-combined into a single command line argument with only one dash.
-
-@table @option
-@item -b
-@itemx --backup
-Back up the original contents of each file, even if backups would
-normally not be made.  @xref{Backups}.
-
-@item -B @var{prefix}
-@itemx --prefix=@var{prefix}
-Prepend @var{prefix} to backup file names.  @xref{Backup Names}.
-
-@item --backup-if-mismatch
-Back up the original contents of each file if the patch does not
-exactly match the file.  This is the default behavior when not
-conforming to @acronym{POSIX}.  @xref{Backups}.
-
-@item --binary
-Read and write all files in binary mode, except for standard output
-and @file{/dev/tty}.  This option has no effect on
-@acronym{POSIX}-conforming systems like @acronym{GNU}/Linux.  On systems where
-this option makes a difference, the patch should be generated by
-@samp{diff -a --binary}.  @xref{Binary}.
-
-@item -c
-@itemx --context
-Interpret the patch file as a context diff.  @xref{patch Input}.
-
-@item -d @var{directory}
-@itemx --directory=@var{directory}
-Make directory @var{directory} the current directory for interpreting
-both file names in the patch file, and file names given as arguments to
-other options.  @xref{patch Directories}.
-
-@item -D @var{name}
-@itemx --ifdef=@var{name}
-Make merged if-then-else output using @var{name}.  @xref{If-then-else}.
-
-@item --dry-run
-Print the results of applying the patches without actually changing
-any files.  @xref{Dry Runs}.
-
-@item -e
-@itemx --ed
-Interpret the patch file as an @command{ed} script.  @xref{patch Input}.
-
-@item -E
-@itemx --remove-empty-files
-Remove output files that are empty after the patches have been applied.
-@xref{Creating and Removing}.
-
-@item -f
-@itemx --force
-Assume that the user knows exactly what he or she is doing, and do not
-ask any questions.  @xref{patch Messages}.
-
-@item -F @var{lines}
-@itemx --fuzz=@var{lines}
-Set the maximum fuzz factor to @var{lines}.  @xref{Inexact}.
-
-@item -g @var{num}
-@itemx --get=@var{num}
-If @var{num} is positive, get input files from a revision control
-system as necessary; if zero, do not get the files; if negative, ask
-the user whether to get the files.  @xref{Revision Control}.
-
-@item --help
-Output a summary of usage and then exit.
-
-@item -i @var{patchfile}
-@itemx --input=@var{patchfile}
-Read the patch from @var{patchfile} rather than from standard input.
-@xref{patch Options}.
-
-@item -l
-@itemx --ignore-white-space
-Let any sequence of blanks (spaces or tabs) in the patch file match
-any sequence of blanks in the input file.  @xref{Changed White Space}.
-
-@item -n
-@itemx --normal
-Interpret the patch file as a normal diff.  @xref{patch Input}.
-
-@item -N
-@itemx --forward
-Ignore patches that @command{patch} thinks are reversed or already applied.
-See also @option{-R}.  @xref{Reversed Patches}.
-
-@item --no-backup-if-mismatch
-Do not back up the original contents of files.  This is the default
-behavior when conforming to @acronym{POSIX}.  @xref{Backups}.
-
-@item -o @var{file}
-@itemx --output=@var{file}
-Use @var{file} as the output file name.  @xref{patch Options}.
-
-@item -p@var{number}
-@itemx --strip=@var{number}
-Set the file name strip count to @var{number}.  @xref{patch Directories}.
-
-@item --posix
-Conform to @acronym{POSIX}, as if the @env{POSIXLY_CORRECT} environment
-variable had been set.  @xref{patch and POSIX}.
-
-@item --quoting-style=@var{word}
-Use style @var{word} to quote names in diagnostics, as if the
-@env{QUOTING_STYLE} environment variable had been set to @var{word}.
-@xref{patch Quoting Style}.
-
-@item -r @var{reject-file}
-@itemx --reject-file=@var{reject-file}
-Use @var{reject-file} as the reject file name.  @xref{Reject Names}.
-
-@item -R
-@itemx --reverse
-Assume that this patch was created with the old and new files swapped.
-@xref{Reversed Patches}.
-
-@item -s
-@itemx --quiet
-@itemx --silent
-Work silently unless an error occurs.  @xref{patch Messages}.
-
-@item -t
-@itemx --batch
-Do not ask any questions.  @xref{patch Messages}.
-
-@item -T
-@itemx --set-time
-Set the modification and access times of patched files from time
-stamps given in context diff headers, assuming that the context diff
-headers use local time.  @xref{Patching Time Stamps}.
-
-@item -u
-@itemx --unified
-Interpret the patch file as a unified diff.  @xref{patch Input}.
-
-@item -v
-@itemx --version
-Output version information and then exit.
-
-@item -V @var{backup-style}
-@itemx --version=control=@var{backup-style}
-Select the naming convention for backup file names.  @xref{Backup Names}.
-
-@item --verbose
-Print more diagnostics than usual.  @xref{patch Messages}.
-
-@item -x @var{number}
-@itemx --debug=@var{number}
-Set internal debugging flags.  Of interest only to @command{patch}
-patchers.
-
-@item -Y @var{prefix}
-@itemx --basename-prefix=@var{prefix}
-Prepend @var{prefix} to base names of backup files.  @xref{Backup Names}.
-
-@item -z @var{suffix}
-@itemx --suffix=@var{suffix}
-Use @var{suffix} as the backup extension instead of @samp{.orig} or
-@samp{~}.  @xref{Backup Names}.
-
-@item -Z
-@itemx --set-utc
-Set the modification and access times of patched files from time
-stamps given in context diff headers, assuming that the context diff
-headers use @acronym{UTC}.  @xref{Patching Time Stamps}.
-
-@end table
-
-@node Invoking sdiff
-@chapter Invoking @command{sdiff}
-@cindex invoking @command{sdiff}
-@cindex @command{sdiff} invocation
-
-The @command{sdiff} command merges two files and interactively outputs the
-results.  Its arguments are as follows:
-
-@example
-sdiff -o @var{outfile} @var{options}@dots{} @var{from-file} @var{to-file}
-@end example
-
-This merges @var{from-file} with @var{to-file}, with output to @var{outfile}.
-If @var{from-file} is a directory and @var{to-file} is not, @command{sdiff}
-compares the file in @var{from-file} whose file name is that of @var{to-file},
-and vice versa.  @var{from-file} and @var{to-file} may not both be
-directories.
-
-@command{sdiff} options begin with @samp{-}, so normally @var{from-file}
-and @var{to-file} may not begin with @samp{-}.  However, @option{--} as an
-argument by itself treats the remaining arguments as file names even if
-they begin with @samp{-}.  You may not use @file{-} as an input file.
-
-@command{sdiff} without @option{-o} (or @option{--output}) produces a
-side-by-side difference.  This usage is obsolete; use the @option{-y}
-or @option{--side-by-side} option of @command{diff} instead.
-
-An exit status of 0 means no differences were found, 1 means some
-differences were found, and 2 means trouble.
-
-@menu
-* sdiff Options:: Summary of options to @command{diff}.
-@end menu
-
-@node sdiff Options
-@section Options to @command{sdiff}
-@cindex @command{sdiff} options
-@cindex options for @command{sdiff}
-
-Below is a summary of all of the options that @acronym{GNU}
-@command{sdiff} accepts.  Each option has two equivalent names, one of
-which is a single letter preceded by @samp{-}, and the other of which
-is a long name preceded by @samp{--}.  Multiple single letter options
-(unless they take an argument) can be combined into a single command
-line argument.  Long named options can be abbreviated to any unique
-prefix of their name.
-
-@table @option
-@item -a
-@itemx --text
-Treat all files as text and compare them line-by-line, even if they
-do not appear to be text.  @xref{Binary}.
-
-@item -b
-@itemx --ignore-space-change
-Ignore changes in amount of white space.  @xref{White Space}.
-
-@item -B
-@itemx --ignore-blank-lines
-Ignore changes that just insert or delete blank lines.  @xref{Blank
-Lines}.
-
-@item -d
-@itemx --minimal
-Change the algorithm to perhaps find a smaller set of changes.  This
-makes @command{sdiff} slower (sometimes much slower).  @xref{diff
-Performance}.
-
-@item --diff-program=@var{program}
-Use the compatible comparison program @var{program} to compare files
-instead of @command{diff}.
-
-@item -E
-@itemx --ignore-tab-expansion
-Ignore changes due to tab expansion.
-@xref{White Space}.
-
-@item --help
-Output a summary of usage and then exit.
-
-@item -i
-@itemx --ignore-case
-Ignore changes in case; consider upper- and lower-case to be the same.
-@xref{Case Folding}.
-
-@item -I @var{regexp}
-@itemx --ignore-matching-lines=@var{regexp}
-Ignore changes that just insert or delete lines that match @var{regexp}.
-@xref{Specified Lines}.
-
-@item -l
-@itemx --left-column
-Print only the left column of two common lines.
-@xref{Side by Side Format}.
-
-@item -o @var{file}
-@itemx --output=@var{file}
-Put merged output into @var{file}.  This option is required for merging.
-
-@item -s
-@itemx --suppress-common-lines
-Do not print common lines.  @xref{Side by Side Format}.
-
-@item --speed-large-files
-Use heuristics to speed handling of large files that have numerous
-scattered small changes.  @xref{diff Performance}.
-
-@item --strip-trailing-cr
-Strip any trailing carriage return at the end of an input line.
-@xref{Binary}.
-
-@item -t
-@itemx --expand-tabs
-Expand tabs to spaces in the output, to preserve the alignment of tabs
-in the input files.  @xref{Tabs}.
-
-@item --tabsize=@var{columns}
-Assume that tab stops are set every @var{columns} (default 8) print
-columns.  @xref{Tabs}.
-
-@item -v
-@itemx --version
-Output version information and then exit.
-
-@item -w @var{columns}
-@itemx --width=@var{columns}
-Output at most @var{columns} (default 130) print columns per line.
-@xref{Side by Side Format}.  Note that for historical reasons, this
-option is @option{-W} in @command{diff}, @option{-w} in @command{sdiff}.
-
-@item -W
-@itemx --ignore-all-space
-Ignore white space when comparing lines.  @xref{White Space}.
-Note that for historical reasons, this option is @option{-w} in @command{diff},
-@option{-W} in @command{sdiff}.
-@end table
-
-@node Standards conformance
-@chapter Standards conformance
-@cindex @acronym{POSIX}
-
-@vindex POSIXLY_CORRECT
-In a few cases, the @acronym{GNU} utilities' default behavior is
-incompatible with the @acronym{POSIX} standard.  To suppress these
-incompatibilities, define the @env{POSIXLY_CORRECT} environment
-variable.  Unless you are checking for @acronym{POSIX} conformance, you
-probably do not need to define @env{POSIXLY_CORRECT}.
-
-Normally options and operands can appear in any order, and programs act
-as if all the options appear before any operands.  For example,
-@samp{diff lao tzu -C 2} acts like @samp{diff -C 2 lao tzu}, since
-@samp{2} is an option-argument of @option{-C}.  However, if the
-@env{POSIXLY_CORRECT} environment variable is set, options must appear
-before operands, unless otherwise specified for a particular command.
-
-Newer versions of @acronym{POSIX} are occasionally incompatible with older
-versions.  For example, older versions of @acronym{POSIX} allowed the
-command @samp{diff -c -10} to have the same meaning as @samp{diff -C
-10}, but @acronym{POSIX} 1003.1-2001 @samp{diff} no longer allows
-digit-string options like @option{-10}.
-
-@vindex _POSIX2_VERSION
-The @acronym{GNU} utilities normally conform to the version of @acronym{POSIX}
-that is standard for your system.  To cause them to conform to a
-different version of @acronym{POSIX}, define the @env{_POSIX2_VERSION}
-environment variable to a value of the form @var{yyyymm} specifying
-the year and month the standard was adopted.  Two values are currently
-supported for @env{_POSIX2_VERSION}: @samp{199209} stands for
-@acronym{POSIX} 1003.2-1992, and @samp{200112} stands for @acronym{POSIX}
-1003.1-2001.  For example, if you are running older software that
-assumes an older version of @acronym{POSIX} and uses @samp{diff -c -10},
-you can work around the compatibility problems by setting
-@samp{_POSIX2_VERSION=199209} in your environment.
-
-@node Projects
-@chapter Future Projects
-
-Here are some ideas for improving @acronym{GNU} @command{diff} and
-@command{patch}.  The @acronym{GNU} project has identified some
-improvements as potential programming projects for volunteers.  You
-can also help by reporting any bugs that you find.
-
-If you are a programmer and would like to contribute something to the
-@acronym{GNU} project, please consider volunteering for one of these
-projects.  If you are seriously contemplating work, please write to
-@email{gvc@@gnu.org} to coordinate with other volunteers.
-
-@menu
-* Shortcomings:: Suggested projects for improvements.
-* Bugs::         Reporting bugs.
-@end menu
-
-@node Shortcomings
-@section Suggested Projects for Improving @acronym{GNU} @command{diff} and @command{patch}
-@cindex projects for directories
-
-One should be able to use @acronym{GNU} @command{diff} to generate a
-patch from any pair of directory trees, and given the patch and a copy
-of one such tree, use @command{patch} to generate a faithful copy of
-the other.  Unfortunately, some changes to directory trees cannot be
-expressed using current patch formats; also, @command{patch} does not
-handle some of the existing formats.  These shortcomings motivate the
-following suggested projects.
-
-@menu
-* Internationalization:: Handling multibyte and varying-width characters.
-* Changing Structure::   Handling changes to the directory structure.
-* Special Files::        Handling symbolic links, device special files, etc.
-* Unusual File Names::   Handling file names that contain unusual characters.
-* Time Stamp Order::     Outputting diffs in time stamp order.
-* Ignoring Changes::     Ignoring certain changes while showing others.
-* Speedups::             Improving performance.
-@end menu
-
-@node Internationalization
-@subsection Handling Multibyte and Varying-Width Characters
-@cindex multibyte characters
-@cindex varying-width characters
-
-@command{diff}, @command{diff3} and @command{sdiff} treat each line of
-input as a string of unibyte characters.  This can mishandle multibyte
-characters in some cases.  For example, when asked to ignore spaces,
-@command{diff} does not properly ignore a multibyte space character.
-
-Also, @command{diff} currently assumes that each byte is one column
-wide, and this assumption is incorrect in some locales, e.g., locales
-that use UTF-8 encoding.  This causes problems with the @option{-y} or
-@option{--side-by-side} option of @command{diff}.
-
-These problems need to be fixed without unduly affecting the
-performance of the utilities in unibyte environments.
-
-The IBM GNU/Linux Technology Center Internationalization Team has
-proposed
-@uref{http://oss.software.ibm.com/developer/opensource/linux/patches/i18n/diffutils-2.7.2-i18n-0.1.patch.gz,patches
-to support internationalized @command{diff}}.
-Unfortunately, these patches are incomplete and are to an older
-version of @command{diff}, so more work needs to be done in this area.
-
-@node Changing Structure
-@subsection Handling Changes to the Directory Structure
-@cindex directory structure changes
-
-@command{diff} and @command{patch} do not handle some changes to directory
-structure.  For example, suppose one directory tree contains a directory
-named @samp{D} with some subsidiary files, and another contains a file
-with the same name @samp{D}.  @samp{diff -r} does not output enough
-information for @command{patch} to transform the directory subtree into
-the file.
-
-There should be a way to specify that a file has been removed without
-having to include its entire contents in the patch file.  There should
-also be a way to tell @command{patch} that a file was renamed, even if
-there is no way for @command{diff} to generate such information.
-There should be a way to tell @command{patch} that a file's time stamp
-has changed, even if its contents have not changed.
-
-These problems can be fixed by extending the @command{diff} output format
-to represent changes in directory structure, and extending @command{patch}
-to understand these extensions.
-
-@node Special Files
-@subsection Files that are Neither Directories Nor Regular Files
-@cindex special files
-
-Some files are neither directories nor regular files: they are unusual
-files like symbolic links, device special files, named pipes, and
-sockets.  Currently, @command{diff} treats symbolic links as if they
-were the pointed-to files, except that a recursive @command{diff}
-reports an error if it detects infinite loops of symbolic links (e.g.,
-symbolic links to @file{..}).  @command{diff} treats other special
-files like regular files if they are specified at the top level, but
-simply reports their presence when comparing directories.  This means
-that @command{patch} cannot represent changes to such files.  For
-example, if you change which file a symbolic link points to,
-@command{diff} outputs the difference between the two files, instead
-of the change to the symbolic link.
-
-@c This might not be a good idea; is it wise for root to install devices
-@c this way?
-@command{diff} should optionally report changes to special files specially,
-and @command{patch} should be extended to understand these extensions.
-
-@node Unusual File Names
-@subsection File Names that Contain Unusual Characters
-@cindex file names with unusual characters
-
-When a file name contains an unusual character like a newline or
-white space, @samp{diff -r} generates a patch that @command{patch} cannot
-parse.  The problem is with format of @command{diff} output, not just with
-@command{patch}, because with odd enough file names one can cause
-@command{diff} to generate a patch that is syntactically correct but
-patches the wrong files.  The format of @command{diff} output should be
-extended to handle all possible file names.
-
-@node Time Stamp Order
-@subsection Outputting Diffs in Time Stamp Order
-
-Applying @command{patch} to a multiple-file diff can result in files
-whose time stamps are out of order.  @acronym{GNU} @command{patch} has
-options to restore the time stamps of the updated files
-(@pxref{Patching Time Stamps}), but sometimes it is useful to generate
-a patch that works even if the recipient does not have @acronym{GNU} patch,
-or does not use these options.  One way to do this would be to
-implement a @command{diff} option to output diffs in time stamp order.
-
-@node Ignoring Changes
-@subsection Ignoring Certain Changes
-
-It would be nice to have a feature for specifying two strings, one in
-@var{from-file} and one in @var{to-file}, which should be considered to
-match.  Thus, if the two strings are @samp{foo} and @samp{bar}, then if
-two lines differ only in that @samp{foo} in file 1 corresponds to
-@samp{bar} in file 2, the lines are treated as identical.
-
-It is not clear how general this feature can or should be, or
-what syntax should be used for it.
-
-A partial substitute is to filter one or both files before comparing,
-e.g.:
-
-@example
-sed 's/foo/bar/g' file1 | diff - file2
-@end example
-
-However, this outputs the filtered text, not the original.
-
-@node Speedups
-@subsection Improving Performance
-
-When comparing two large directory structures, one of which was
-originally copied from the other with time stamps preserved (e.g.,
-with @samp{cp -pR}), it would greatly improve performance if an option
-told @command{diff} to assume that two files with the same size and
-time stamps have the same content.  @xref{diff Performance}.
-
-@node Bugs
-@section Reporting Bugs
-@cindex bug reports
-@cindex reporting bugs
-
-If you think you have found a bug in @acronym{GNU} @command{cmp},
-@command{diff}, @command{diff3}, or @command{sdiff}, please report it
-by electronic mail to the
-@uref{http://mail.gnu.org/mailman/listinfo/bug-gnu-utils,GNU utilities
-bug report mailing list} @email{bug-gnu-utils@@gnu.org}.  Please send
-bug reports for @acronym{GNU} @command{patch} to
-@email{bug-patch@@gnu.org}.  Send as precise a description of the
-problem as you can, including the output of the @option{--version}
-option and sample input files that produce the bug, if applicable.  If
-you have a nontrivial fix for the bug, please send it as well.  If you
-have a patch, please send it too.  It may simplify the maintainer's
-job if the patch is relative to a recent test release, which you can
-find in the directory @uref{ftp://alpha.gnu.org/gnu/diffutils/}.
-
-@node Copying This Manual
-@appendix Copying This Manual
-@include fdl.texi
-
-@node Translations
-@appendix Translations of This Manual
-
-Nishio Futoshi of the GNUjdoc project has prepared a Japanese
-translation of this manual.  Its most recent version can be found at
-@uref{http://openlab.ring.gr.jp/gnujdoc/cvsweb/cvsweb.cgi/gnujdoc/}.
-
-@node Index
-@appendix Index
-
-@printindex cp
-
-@bye
diff --git a/doc/diffutils.texi b/doc/diffutils.texi
new file mode 100644
index 0000000..00403df
--- /dev/null
+++ b/doc/diffutils.texi
@@ -0,0 +1,4706 @@
+\input texinfo @c -*-texinfo-*-
+@comment %**start of header
+@setfilename diffutils.info
+@include version.texi
+@settitle Comparing and Merging Files
+@syncodeindex vr cp
+@setchapternewpage odd
+@comment %**end of header
+@copying
+This manual is for GNU Diffutils
+(version @value{VERSION}, @value{UPDATED}),
+and documents the @acronym{GNU} @command{diff}, @command{diff3},
+@command{sdiff}, and @command{cmp} commands for showing the
+differences between files and the @acronym{GNU} @command{patch} command for
+using their output to update files.
+
+Copyright @copyright{} 1992-1994, 1998, 2001-2002, 2004, 2006, 2009-2012 Free
+Software Foundation, Inc.
+
+@quotation
+Permission is granted to copy, distribute and/or modify this document
+under the terms of the GNU Free Documentation License, Version 1.3 or
+any later version published by the Free Software Foundation; with no
+Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
+A copy of the license is included in the section entitled
+``@acronym{GNU} Free Documentation License.''
+@end quotation
+@end copying
+
+@c Debian install-info (up through at least version 1.9.20) uses only the
+@c first dircategory.  Put this one first, as it is more useful in practice.
+@dircategory Individual utilities
+@direntry
+* cmp: (diffutils)Invoking cmp.                 Compare 2 files byte by byte.
+* diff: (diffutils)Invoking diff.               Compare 2 files line by line.
+* diff3: (diffutils)Invoking diff3.             Compare 3 files line by line.
+* patch: (diffutils)Invoking patch.             Apply a patch to a file.
+* sdiff: (diffutils)Invoking sdiff.             Merge 2 files side-by-side.
+@end direntry
+
+@dircategory Text creation and manipulation
+@direntry
+* Diffutils: (diffutils).       Comparing and merging files.
+@end direntry
+
+@titlepage
+@title Comparing and Merging Files
+@subtitle for Diffutils @value{VERSION} and @code{patch} 2.5.4
+@subtitle @value{UPDATED}
+@author David MacKenzie, Paul Eggert, and Richard Stallman
+@page
+@vskip 0pt plus 1filll
+@insertcopying
+@end titlepage
+
+@shortcontents
+@contents
+
+@ifnottex
+@node Top
+@top Comparing and Merging Files
+
+@insertcopying
+@end ifnottex
+
+@menu
+* Overview::              Preliminary information.
+* Comparison::            What file comparison means.
+
+* Output Formats::        Formats for two-way difference reports.
+* Incomplete Lines::      Lines that lack trailing newlines.
+* Comparing Directories:: Comparing files and directories.
+* Adjusting Output::      Making @command{diff} output prettier.
+* diff Performance::      Making @command{diff} smarter or faster.
+
+* Comparing Three Files:: Formats for three-way difference reports.
+* diff3 Merging::         Merging from a common ancestor.
+
+* Interactive Merging::   Interactive merging with @command{sdiff}.
+
+* Merging with patch::    Using @command{patch} to change old files into new ones.
+* Making Patches::        Tips for making and using patch distributions.
+
+* Invoking cmp::          Compare two files byte by byte.
+* Invoking diff::         Compare two files line by line.
+* Invoking diff3::        Compare three files line by line.
+* Invoking patch::        Apply a diff file to an original.
+* Invoking sdiff::        Side-by-side merge of file differences.
+
+* Standards conformance:: Conformance to the @acronym{POSIX} standard.
+* Projects::              If you've found a bug or other shortcoming.
+
+* Copying This Manual::   How to make copies of this manual.
+* Translations::          Available translations of this manual.
+* Index::                 Index.
+@end menu
+
+@node Overview
+@unnumbered Overview
+@cindex overview of @command{diff} and @command{patch}
+
+Computer users often find occasion to ask how two files differ.  Perhaps
+one file is a newer version of the other file.  Or maybe the two files
+started out as identical copies but were changed by different people.
+
+You can use the @command{diff} command to show differences between two
+files, or each corresponding file in two directories.  @command{diff}
+outputs differences between files line by line in any of several
+formats, selectable by command line options.  This set of differences is
+often called a @dfn{diff} or @dfn{patch}.  For files that are identical,
+@command{diff} normally produces no output; for binary (non-text) files,
+@command{diff} normally reports only that they are different.
+
+You can use the @command{cmp} command to show the byte and line numbers
+where two files differ.  @command{cmp} can also show all the bytes
+that differ between the two files, side by side.  A way to compare
+two files character by character is the Emacs command @kbd{M-x
+compare-windows}.  @xref{Other Window, , Other Window, emacs, The @acronym{GNU}
+Emacs Manual}, for more information on that command.
+
+You can use the @command{diff3} command to show differences among three
+files.  When two people have made independent changes to a common
+original, @command{diff3} can report the differences between the original
+and the two changed versions, and can produce a merged file that
+contains both persons' changes together with warnings about conflicts.
+
+You can use the @command{sdiff} command to merge two files interactively.
+
+You can use the set of differences produced by @command{diff} to distribute
+updates to text files (such as program source code) to other people.
+This method is especially useful when the differences are small compared
+to the complete files.  Given @command{diff} output, you can use the
+@command{patch} program to update, or @dfn{patch}, a copy of the file.  If you
+think of @command{diff} as subtracting one file from another to produce
+their difference, you can think of @command{patch} as adding the difference
+to one file to reproduce the other.
+
+This manual first concentrates on making diffs, and later shows how to
+use diffs to update files.
+
+@acronym{GNU} @command{diff} was written by Paul Eggert, Mike Haertel,
+David Hayes, Richard Stallman, and Len Tower.  Wayne Davison designed and
+implemented the unified output format.  The basic algorithm is described
+by Eugene W. Myers in ``An O(ND) Difference Algorithm and its Variations'',
+@cite{Algorithmica} Vol.@: 1 No.@: 2, 1986, pp.@: 251--266; and in ``A File
+Comparison Program'', Webb Miller and Eugene W. Myers,
+@cite{Software---Practice and Experience} Vol.@: 15 No.@: 11, 1985,
+pp.@: 1025--1040.
+@c From: "Gene Myers" <gene@cs.arizona.edu>
+@c They are about the same basic algorithm; the Algorithmica
+@c paper gives a rigorous treatment and the sub-algorithm for
+@c delivering scripts and should be the primary reference, but
+@c both should be mentioned.
+The algorithm was independently discovered as described by E. Ukkonen in
+``Algorithms for Approximate String Matching'',
+@cite{Information and Control} Vol.@: 64, 1985, pp.@: 100--118.
+@c From: "Gene Myers" <gene@cs.arizona.edu>
+@c Date: Wed, 29 Sep 1993 08:27:55 MST
+@c Ukkonen should be given credit for also discovering the algorithm used
+@c in GNU diff.
+Unless the @option{--minimal} option is used, @command{diff} uses a
+heuristic by Paul Eggert that limits the cost to @math{O(N^1.5 log N)}
+at the price of producing suboptimal output for large inputs with many
+differences.  Related algorithms are surveyed by Alfred V. Aho in
+section 6.3 of ``Algorithms for Finding Patterns in Strings'',
+@cite{Handbook of Theoretical Computer Science} (Jan Van Leeuwen,
+ed.), Vol.@: A, @cite{Algorithms and Complexity}, Elsevier/MIT Press,
+1990, pp.@: 255--300.
+
+@acronym{GNU} @command{diff3} was written by Randy Smith.  @acronym{GNU}
+@command{sdiff} was written by Thomas Lord.  @acronym{GNU} @command{cmp}
+was written by Torbj@"orn Granlund and David MacKenzie.
+
+@acronym{GNU} @command{patch} was written mainly by Larry Wall and Paul Eggert;
+several @acronym{GNU} enhancements were contributed by Wayne Davison and
+David MacKenzie.  Parts of this manual are adapted from a manual page
+written by Larry Wall, with his permission.
+
+@node Comparison
+@chapter What Comparison Means
+@cindex introduction
+
+There are several ways to think about the differences between two files.
+One way to think of the differences is as a series of lines that were
+deleted from, inserted in, or changed in one file to produce the other
+file.  @command{diff} compares two files line by line, finds groups of
+lines that differ, and reports each group of differing lines.  It can
+report the differing lines in several formats, which have different
+purposes.
+
+@acronym{GNU} @command{diff} can show whether files are different
+without detailing the differences.  It also provides ways to suppress
+certain kinds of differences that are not important to you.  Most
+commonly, such differences are changes in the amount of white space
+between words or lines.  @command{diff} also provides ways to suppress
+differences in alphabetic case or in lines that match a regular
+expression that you provide.  These options can accumulate; for
+example, you can ignore changes in both white space and alphabetic
+case.
+
+Another way to think of the differences between two files is as a
+sequence of pairs of bytes that can be either identical or
+different.  @command{cmp} reports the differences between two files
+byte by byte, instead of line by line.  As a result, it is often
+more useful than @command{diff} for comparing binary files.  For text
+files, @command{cmp} is useful mainly when you want to know only whether
+two files are identical, or whether one file is a prefix of the other.
+
+To illustrate the effect that considering changes byte by byte
+can have compared with considering them line by line, think of what
+happens if a single newline character is added to the beginning of a
+file.  If that file is then compared with an otherwise identical file
+that lacks the newline at the beginning, @command{diff} will report that a
+blank line has been added to the file, while @command{cmp} will report that
+almost every byte of the two files differs.
+
+@command{diff3} normally compares three input files line by line, finds
+groups of lines that differ, and reports each group of differing lines.
+Its output is designed to make it easy to inspect two different sets of
+changes to the same file.
+
+@menu
+* Hunks::             Groups of differing lines.
+* White Space::       Suppressing differences in white space.
+* Blank Lines::       Suppressing differences whose lines are all blank.
+* Specified Lines::   Suppressing differences whose lines all match a pattern.
+* Case Folding::      Suppressing differences in alphabetic case.
+* Brief::             Summarizing which files are different.
+* Binary::            Comparing binary files or forcing text comparisons.
+@end menu
+
+@node Hunks
+@section Hunks
+@cindex hunks
+
+When comparing two files, @command{diff} finds sequences of lines common to
+both files, interspersed with groups of differing lines called
+@dfn{hunks}.  Comparing two identical files yields one sequence of
+common lines and no hunks, because no lines differ.  Comparing two
+entirely different files yields no common lines and one large hunk that
+contains all lines of both files.  In general, there are many ways to
+match up lines between two given files.  @command{diff} tries to minimize
+the total hunk size by finding large sequences of common lines
+interspersed with small hunks of differing lines.
+
+For example, suppose the file @file{F} contains the three lines
+@samp{a}, @samp{b}, @samp{c}, and the file @file{G} contains the same
+three lines in reverse order @samp{c}, @samp{b}, @samp{a}.  If
+@command{diff} finds the line @samp{c} as common, then the command
+@samp{diff F G} produces this output:
+
+@example
+1,2d0
+< a
+< b
+3a2,3
+> b
+> a
+@end example
+
+@noindent
+But if @command{diff} notices the common line @samp{b} instead, it produces
+this output:
+
+@example
+1c1
+< a
+---
+> c
+3c3
+< c
+---
+> a
+@end example
+
+@noindent
+It is also possible to find @samp{a} as the common line.  @command{diff}
+does not always find an optimal matching between the files; it takes
+shortcuts to run faster.  But its output is usually close to the
+shortest possible.  You can adjust this tradeoff with the
+@option{--minimal} (@option{-d}) option (@pxref{diff Performance}).
+
+@node White Space
+@section Suppressing Differences in Blank and Tab Spacing
+@cindex blank and tab difference suppression
+@cindex tab and blank difference suppression
+
+The @option{--ignore-tab-expansion} (@option{-E}) option ignores the
+distinction between tabs and spaces on input.  A tab is considered to be
+equivalent to the number of spaces to the next tab stop (@pxref{Tabs}).
+
+The @option{--ignore-trailing-space} (@option{-Z}) option ignores white
+space at line end.
+
+The @option{--ignore-space-change} (@option{-b}) option is stronger than
+@option{-E} and @option{-Z} combined.
+It ignores white space at line end, and considers all other sequences of
+one or more white space characters within a line to be equivalent.  With this
+option, @command{diff} considers the following two lines to be equivalent,
+where @samp{$} denotes the line end:
+
+@example
+Here lyeth  muche rychnesse  in lytell space.   -- John Heywood$
+Here lyeth muche rychnesse in lytell space. -- John Heywood   $
+@end example
+
+The @option{--ignore-all-space} (@option{-w}) option is stronger still.
+It ignores differences even if one line has white space where
+the other line has none.  @dfn{White space} characters include
+tab, vertical tab, form feed, carriage return, and space;
+some locales may define additional characters to be white space.
+With this option, @command{diff} considers the
+following two lines to be equivalent, where @samp{$} denotes the line
+end and @samp{^M} denotes a carriage return:
+
+@example
+Here lyeth  muche  rychnesse in lytell space.--  John Heywood$
+  He relyeth much erychnes  seinly tells pace.  --John Heywood   ^M$
+@end example
+
+For many other programs newline is also a white space character, but
+@command{diff} is a line-oriented program and a newline character
+always ends a line.  Hence the @option{-w} or
+@option{--ignore-all-space} option does not ignore newline-related
+changes; it ignores only other white space changes.
+
+@node Blank Lines
+@section Suppressing Differences Whose Lines Are All Blank
+@cindex blank line difference suppression
+
+The @option{--ignore-blank-lines} (@option{-B}) option ignores changes
+that consist entirely of blank lines.  With this option, for example, a
+file containing
+@example
+1.  A point is that which has no part.
+
+2.  A line is breadthless length.
+-- Euclid, The Elements, I
+@end example
+@noindent
+is considered identical to a file containing
+@example
+1.  A point is that which has no part.
+2.  A line is breadthless length.
+
+
+-- Euclid, The Elements, I
+@end example
+
+Normally this option affects only lines that are completely empty, but
+if you also specify an option that ignores trailing spaces,
+lines are also affected if they look empty but contain white space.
+In other words, @option{-B} is equivalent to @samp{-I '^$'} by
+default, but it is equivalent to @option{-I '^[[:space:]]*$'} if
+@option{-b}, @option{-w} or @option{-Z} is also specified.
+
+@node Specified Lines
+@section Suppressing Differences Whose Lines All Match a Regular Expression
+@cindex regular expression suppression
+
+To ignore insertions and deletions of lines that match a
+@command{grep}-style regular expression, use the
+@option{--ignore-matching-lines=@var{regexp}} (@option{-I @var{regexp}}) option.
+You should escape
+regular expressions that contain shell metacharacters to prevent the
+shell from expanding them.  For example, @samp{diff -I '^[[:digit:]]'} ignores
+all changes to lines beginning with a digit.
+
+However, @option{-I} only ignores the insertion or deletion of lines that
+contain the regular expression if every changed line in the hunk---every
+insertion and every deletion---matches the regular expression.  In other
+words, for each nonignorable change, @command{diff} prints the complete set
+of changes in its vicinity, including the ignorable ones.
+
+You can specify more than one regular expression for lines to ignore by
+using more than one @option{-I} option.  @command{diff} tries to match each
+line against each regular expression.
+
+@node Case Folding
+@section Suppressing Case Differences
+@cindex case difference suppression
+
+@acronym{GNU} @command{diff} can treat lower case letters as
+equivalent to their upper case counterparts, so that, for example, it
+considers @samp{Funky Stuff}, @samp{funky STUFF}, and @samp{fUNKy
+stuFf} to all be the same.  To request this, use the @option{-i} or
+@option{--ignore-case} option.
+
+@node Brief
+@section Summarizing Which Files Differ
+@cindex summarizing which files differ
+@cindex brief difference reports
+
+When you only want to find out whether files are different, and you
+don't care what the differences are, you can use the summary output
+format.  In this format, instead of showing the differences between the
+files, @command{diff} simply reports whether files differ.  The
+@option{--brief} (@option{-q}) option selects this output format.
+
+This format is especially useful when comparing the contents of two
+directories.  It is also much faster than doing the normal line by line
+comparisons, because @command{diff} can stop analyzing the files as soon as
+it knows that there are any differences.
+
+You can also get a brief indication of whether two files differ by using
+@command{cmp}.  For files that are identical, @command{cmp} produces no
+output.  When the files differ, by default, @command{cmp} outputs the byte
+and line number where the first difference occurs, or reports that one
+file is a prefix of the other.  You can use
+the @option{-s}, @option{--quiet}, or @option{--silent} option to
+suppress that information, so that @command{cmp}
+produces no output and reports whether the files differ using only its
+exit status (@pxref{Invoking cmp}).
+
+@c Fix this.
+Unlike @command{diff}, @command{cmp} cannot compare directories; it can only
+compare two files.
+
+@node Binary
+@section Binary Files and Forcing Text Comparisons
+@cindex binary file diff
+@cindex text versus binary diff
+
+If @command{diff} thinks that either of the two files it is comparing is
+binary (a non-text file), it normally treats that pair of files much as
+if the summary output format had been selected (@pxref{Brief}), and
+reports only that the binary files are different.  This is because line
+by line comparisons are usually not meaningful for binary files.
+
+@command{diff} determines whether a file is text or binary by checking the
+first few bytes in the file; the exact number of bytes is system
+dependent, but it is typically several thousand.  If every byte in
+that part of the file is non-null, @command{diff} considers the file to be
+text; otherwise it considers the file to be binary.
+
+Sometimes you might want to force @command{diff} to consider files to be
+text.  For example, you might be comparing text files that contain
+null characters; @command{diff} would erroneously decide that those are
+non-text files.  Or you might be comparing documents that are in a
+format used by a word processing system that uses null characters to
+indicate special formatting.  You can force @command{diff} to consider all
+files to be text files, and compare them line by line, by using the
+@option{--text} (@option{-a}) option.  If the files you compare using this
+option do not in fact contain text, they will probably contain few
+newline characters, and the @command{diff} output will consist of hunks
+showing differences between long lines of whatever characters the files
+contain.
+
+You can also force @command{diff} to report only whether files differ
+(but not how).  Use the @option{--brief} (@option{-q}) option for
+this.
+
+Normally, differing binary files count as trouble because the
+resulting @command{diff} output does not capture all the differences.
+This trouble causes @command{diff} to exit with status 2.  However,
+this trouble cannot occur with the @option{--text} (@option{-a})
+option, or with the @option{--brief} (@option{-q}) option, as these
+options both cause @command{diff} to generate a form of output that
+represents differences as requested.
+
+In operating systems that distinguish between text and binary files,
+@command{diff} normally reads and writes all data as text.  Use the
+@option{--binary} option to force @command{diff} to read and write binary
+data instead.  This option has no effect on a @acronym{POSIX}-compliant system
+like @acronym{GNU} or traditional Unix.  However, many personal computer
+operating systems represent the end of a line with a carriage return
+followed by a newline.  On such systems, @command{diff} normally ignores
+these carriage returns on input and generates them at the end of each
+output line, but with the @option{--binary} option @command{diff} treats
+each carriage return as just another input character, and does not
+generate a carriage return at the end of each output line.  This can be
+useful when dealing with non-text files that are meant to be
+interchanged with @acronym{POSIX}-compliant systems.
+
+The @option{--strip-trailing-cr} causes @command{diff} to treat input
+lines that end in carriage return followed by newline as if they end
+in plain newline.  This can be useful when comparing text that is
+imperfectly imported from many personal computer operating systems.
+This option affects how lines are read, which in turn affects how they
+are compared and output.
+
+If you want to compare two files byte by byte, you can use the
+@command{cmp} program with the @option{--verbose} (@option{-l})
+option to show the values of each differing byte in the two files.
+With @acronym{GNU} @command{cmp}, you can also use the @option{-b} or
+@option{--print-bytes} option to show the @acronym{ASCII} representation of
+those bytes.  @xref{Invoking cmp}, for more information.
+
+If @command{diff3} thinks that any of the files it is comparing is binary
+(a non-text file), it normally reports an error, because such
+comparisons are usually not useful.  @command{diff3} uses the same test as
+@command{diff} to decide whether a file is binary.  As with @command{diff}, if
+the input files contain a few non-text bytes but otherwise are like
+text files, you can force @command{diff3} to consider all files to be text
+files and compare them line by line by using the @option{-a} or
+@option{--text} option.
+
+@node Output Formats
+@chapter @command{diff} Output Formats
+@cindex output formats
+@cindex format of @command{diff} output
+
+@command{diff} has several mutually exclusive options for output format.
+The following sections describe each format, illustrating how
+@command{diff} reports the differences between two sample input files.
+
+@menu
+* Sample diff Input:: Sample @command{diff} input files for examples.
+* Context::           Showing differences with the surrounding text.
+* Side by Side::      Showing differences in two columns.
+* Normal::            Showing differences without surrounding text.
+* Scripts::           Generating scripts for other programs.
+* If-then-else::      Merging files with if-then-else.
+@end menu
+
+@node Sample diff Input
+@section Two Sample Input Files
+@cindex @command{diff} sample input
+@cindex sample input for @command{diff}
+
+Here are two sample files that we will use in numerous examples to
+illustrate the output of @command{diff} and how various options can change
+it.
+
+This is the file @file{lao}:
+
+@example
+The Way that can be told of is not the eternal Way;
+The name that can be named is not the eternal name.
+The Nameless is the origin of Heaven and Earth;
+The Named is the mother of all things.
+Therefore let there always be non-being,
+  so we may see their subtlety,
+And let there always be being,
+  so we may see their outcome.
+The two are the same,
+But after they are produced,
+  they have different names.
+@end example
+
+This is the file @file{tzu}:
+
+@example
+The Nameless is the origin of Heaven and Earth;
+The named is the mother of all things.
+
+Therefore let there always be non-being,
+  so we may see their subtlety,
+And let there always be being,
+  so we may see their outcome.
+The two are the same,
+But after they are produced,
+  they have different names.
+They both may be called deep and profound.
+Deeper and more profound,
+The door of all subtleties!
+@end example
+
+In this example, the first hunk contains just the first two lines of
+@file{lao}, the second hunk contains the fourth line of @file{lao}
+opposing the second and third lines of @file{tzu}, and the last hunk
+contains just the last three lines of @file{tzu}.
+
+@node Context
+@section Showing Differences in Their Context
+@cindex context output format
+@cindex @samp{!} output format
+
+Usually, when you are looking at the differences between files, you will
+also want to see the parts of the files near the lines that differ, to
+help you understand exactly what has changed.  These nearby parts of the
+files are called the @dfn{context}.
+
+@acronym{GNU} @command{diff} provides two output formats that show context
+around the differing lines: @dfn{context format} and @dfn{unified
+format}.  It can optionally show in which function or section of the
+file the differing lines are found.
+
+If you are distributing new versions of files to other people in the
+form of @command{diff} output, you should use one of the output formats
+that show context so that they can apply the diffs even if they have
+made small changes of their own to the files.  @command{patch} can apply
+the diffs in this case by searching in the files for the lines of
+context around the differing lines; if those lines are actually a few
+lines away from where the diff says they are, @command{patch} can adjust
+the line numbers accordingly and still apply the diff correctly.
+@xref{Imperfect}, for more information on using @command{patch} to apply
+imperfect diffs.
+
+@menu
+* Context Format::  An output format that shows surrounding lines.
+* Unified Format::  A more compact output format that shows context.
+* Sections::        Showing which sections of the files differences are in.
+* Alternate Names:: Showing alternate file names in context headers.
+@end menu
+
+@node Context Format
+@subsection Context Format
+
+The context output format shows several lines of context around the
+lines that differ.  It is the standard format for distributing updates
+to source code.
+
+To select this output format, use the
+@option{--context@r{[}=@var{lines}@r{]}} (@option{-C @var{lines}})
+or @option{-c} option.  The
+argument @var{lines} that some of these options take is the number of
+lines of context to show.  If you do not specify @var{lines}, it
+defaults to three.  For proper operation, @command{patch} typically needs
+at least two lines of context.
+
+@menu
+* Example Context::  Sample output in context format.
+* Less Context::     Another sample with less context.
+* Detailed Context:: A detailed description of the context output format.
+@end menu
+
+@node Example Context
+@subsubsection An Example of Context Format
+
+Here is the output of @samp{diff -c lao tzu} (@pxref{Sample diff Input},
+for the complete contents of the two files).  Notice that up to three
+lines that are not different are shown around each line that is
+different; they are the context lines.  Also notice that the first two
+hunks have run together, because their contents overlap.
+
+@example
+*** lao	2002-02-21 23:30:39.942229878 -0800
+--- tzu	2002-02-21 23:30:50.442260588 -0800
+***************
+*** 1,7 ****
+- The Way that can be told of is not the eternal Way;
+- The name that can be named is not the eternal name.
+  The Nameless is the origin of Heaven and Earth;
+! The Named is the mother of all things.
+  Therefore let there always be non-being,
+    so we may see their subtlety,
+  And let there always be being,
+--- 1,6 ----
+  The Nameless is the origin of Heaven and Earth;
+! The named is the mother of all things.
+! @-
+  Therefore let there always be non-being,
+    so we may see their subtlety,
+  And let there always be being,
+***************
+*** 9,11 ****
+--- 8,13 ----
+  The two are the same,
+  But after they are produced,
+    they have different names.
++ They both may be called deep and profound.
++ Deeper and more profound,
++ The door of all subtleties!
+@end example
+
+@node Less Context
+@subsubsection An Example of Context Format with Less Context
+
+Here is the output of @samp{diff -C 1 lao tzu} (@pxref{Sample diff
+Input}, for the complete contents of the two files).  Notice that at
+most one context line is reported here.
+
+@example
+*** lao	2002-02-21 23:30:39.942229878 -0800
+--- tzu	2002-02-21 23:30:50.442260588 -0800
+***************
+*** 1,5 ****
+- The Way that can be told of is not the eternal Way;
+- The name that can be named is not the eternal name.
+  The Nameless is the origin of Heaven and Earth;
+! The Named is the mother of all things.
+  Therefore let there always be non-being,
+--- 1,4 ----
+  The Nameless is the origin of Heaven and Earth;
+! The named is the mother of all things.
+! @-
+  Therefore let there always be non-being,
+***************
+*** 11 ****
+--- 10,13 ----
+    they have different names.
++ They both may be called deep and profound.
++ Deeper and more profound,
++ The door of all subtleties!
+@end example
+
+@node Detailed Context
+@subsubsection Detailed Description of Context Format
+
+The context output format starts with a two-line header, which looks
+like this:
+
+@example
+*** @var{from-file} @var{from-file-modification-time}
+--- @var{to-file} @var{to-file-modification time}
+@end example
+
+@noindent
+@vindex LC_TIME
+@cindex time stamp format, context diffs
+The time stamp normally looks like @samp{2002-02-21 23:30:39.942229878
+-0800} to indicate the date, time with fractional seconds, and time
+zone in @uref{ftp://ftp.isi.edu/in-notes/rfc2822.txt, Internet RFC
+2822 format}.  (The fractional seconds are omitted on hosts that do
+not support fractional time stamps.)  However, a traditional time
+stamp like @samp{Thu Feb 21 23:30:39 2002} is used if the
+@env{LC_TIME} locale category is either @samp{C} or @samp{POSIX}.
+
+You can change the header's content with the
+@option{--label=@var{label}} option; see @ref{Alternate Names}.
+
+Next come one or more hunks of differences; each hunk shows one area
+where the files differ.  Context format hunks look like this:
+
+@example
+***************
+*** @var{from-file-line-numbers} ****
+  @var{from-file-line}
+  @var{from-file-line}@dots{}
+--- @var{to-file-line-numbers} ----
+  @var{to-file-line}
+  @var{to-file-line}@dots{}
+@end example
+
+If a hunk contains two or more lines, its line numbers look like
+@samp{@var{start},@var{end}}.  Otherwise only its end line number
+appears.  An empty hunk is considered to end at the line that precedes
+the hunk.
+
+The lines of context around the lines that differ start with two space
+characters.  The lines that differ between the two files start with one
+of the following indicator characters, followed by a space character:
+
+@table @samp
+@item !
+A line that is part of a group of one or more lines that changed between
+the two files.  There is a corresponding group of lines marked with
+@samp{!} in the part of this hunk for the other file.
+
+@item +
+An ``inserted'' line in the second file that corresponds to nothing in
+the first file.
+
+@item -
+A ``deleted'' line in the first file that corresponds to nothing in the
+second file.
+@end table
+
+If all of the changes in a hunk are insertions, the lines of
+@var{from-file} are omitted.  If all of the changes are deletions, the
+lines of @var{to-file} are omitted.
+
+@node Unified Format
+@subsection Unified Format
+@cindex unified output format
+@cindex @samp{+-} output format
+
+The unified output format is a variation on the context format that is
+more compact because it omits redundant context lines.  To select this
+output format, use the
+@option{--unified@r{[}=@var{lines}@r{]}} (@option{-U @var{lines}}),
+or @option{-u} option.
+The argument @var{lines} is the number of lines of context to show.
+When it is not given, it defaults to three.
+
+At present, only @acronym{GNU} @command{diff} can produce this format and
+only @acronym{GNU} @command{patch} can automatically apply diffs in this
+format.  For proper operation, @command{patch} typically needs at
+least three lines of context.
+
+@menu
+* Example Unified::  Sample output in unified format.
+* Detailed Unified:: A detailed description of unified format.
+@end menu
+
+@node Example Unified
+@subsubsection An Example of Unified Format
+
+Here is the output of the command @samp{diff -u lao tzu}
+(@pxref{Sample diff Input}, for the complete contents of the two files):
+
+@example
+--- lao	2002-02-21 23:30:39.942229878 -0800
++++ tzu	2002-02-21 23:30:50.442260588 -0800
+@@@@ -1,7 +1,6 @@@@
+-The Way that can be told of is not the eternal Way;
+-The name that can be named is not the eternal name.
+ The Nameless is the origin of Heaven and Earth;
+-The Named is the mother of all things.
++The named is the mother of all things.
++
+ Therefore let there always be non-being,
+   so we may see their subtlety,
+ And let there always be being,
+@@@@ -9,3 +8,6 @@@@
+ The two are the same,
+ But after they are produced,
+   they have different names.
++They both may be called deep and profound.
++Deeper and more profound,
++The door of all subtleties!
+@end example
+
+@node Detailed Unified
+@subsubsection Detailed Description of Unified Format
+
+The unified output format starts with a two-line header, which looks
+like this:
+
+@example
+--- @var{from-file} @var{from-file-modification-time}
++++ @var{to-file} @var{to-file-modification-time}
+@end example
+
+@noindent
+@cindex time stamp format, unified diffs
+The time stamp looks like @samp{2002-02-21 23:30:39.942229878 -0800}
+to indicate the date, time with fractional seconds, and time zone.
+The fractional seconds are omitted on hosts that do not support
+fractional time stamps.
+
+You can change the header's content with the
+@option{--label=@var{label}} option; see @xref{Alternate Names}.
+
+Next come one or more hunks of differences; each hunk shows one area
+where the files differ.  Unified format hunks look like this:
+
+@example
+@@@@ @var{from-file-line-numbers} @var{to-file-line-numbers} @@@@
+ @var{line-from-either-file}
+ @var{line-from-either-file}@dots{}
+@end example
+
+If a hunk contains just one line, only its start line number appears.
+Otherwise its line numbers look like @samp{@var{start},@var{count}}.
+An empty hunk is considered to start at the line that follows the hunk.
+
+If a hunk and its context contain two or more lines, its
+line numbers look like @samp{@var{start},@var{count}}.  Otherwise only
+its end line number appears.  An empty hunk is considered to end at
+the line that precedes the hunk.
+
+The lines common to both files begin with a space character.  The lines
+that actually differ between the two files have one of the following
+indicator characters in the left print column:
+
+@table @samp
+@item +
+A line was added here to the first file.
+
+@item -
+A line was removed here from the first file.
+@end table
+
+@node Sections
+@subsection Showing Which Sections Differences Are in
+@cindex headings
+@cindex section headings
+
+Sometimes you might want to know which part of the files each change
+falls in.  If the files are source code, this could mean which
+function was changed.  If the files are documents, it could mean which
+chapter or appendix was changed.  @acronym{GNU} @command{diff} can
+show this by displaying the nearest section heading line that precedes
+the differing lines.  Which lines are ``section headings'' is
+determined by a regular expression.
+
+@menu
+* Specified Headings::  Showing headings that match regular expressions.
+* C Function Headings:: Showing headings of C functions.
+@end menu
+
+@node Specified Headings
+@subsubsection Showing Lines That Match Regular Expressions
+@cindex specified headings
+@cindex regular expression matching headings
+
+To show in which sections differences occur for files that are not
+source code for C or similar languages, use the
+@option{--show-function-line=@var{regexp}} (@option{-F @var{regexp}}) option.
+@command{diff}
+considers lines that match the @command{grep}-style regular expression
+@var{regexp} to be the beginning
+of a section of the file.  Here are suggested regular expressions for
+some common languages:
+
+@c Please add to this list, e.g. Fortran, Pascal, Perl, Python.
+@table @samp
+@item ^[[:alpha:]$_]
+C, C++, Prolog
+@item ^(
+Lisp
+@item ^@@node
+Texinfo
+@end table
+
+This option does not automatically select an output format; in order to
+use it, you must select the context format (@pxref{Context Format}) or
+unified format (@pxref{Unified Format}).  In other output formats it
+has no effect.
+
+The @option{--show-function-line} (@option{-F}) option finds the nearest
+unchanged line that precedes each hunk of differences and matches the
+given regular expression.  Then it adds that line to the end of the
+line of asterisks in the context format, or to the @samp{@@@@} line in
+unified format.  If no matching line exists, this option leaves the output for
+that hunk unchanged.  If that line is more than 40 characters long, it
+outputs only the first 40 characters.  You can specify more than one
+regular expression for such lines; @command{diff} tries to match each line
+against each regular expression, starting with the last one given.  This
+means that you can use @option{-p} and @option{-F} together, if you wish.
+
+@node C Function Headings
+@subsubsection Showing C Function Headings
+@cindex C function headings
+@cindex function headings, C
+
+To show in which functions differences occur for C and similar
+languages, you can use the @option{--show-c-function} (@option{-p}) option.
+This option automatically defaults to the context output format
+(@pxref{Context Format}), with the default number of lines of context.
+You can override that number with @option{-C @var{lines}} elsewhere in the
+command line.  You can override both the format and the number with
+@option{-U @var{lines}} elsewhere in the command line.
+
+The @option{--show-c-function} (@option{-p}) option is equivalent to
+@option{-F '^[[:alpha:]$_]'} if the unified format is specified, otherwise
+@option{-c -F '^[[:alpha:]$_]'} (@pxref{Specified Headings}).  @acronym{GNU}
+@command{diff} provides this option for the sake of convenience.
+
+@node Alternate Names
+@subsection Showing Alternate File Names
+@cindex alternate file names
+@cindex file name alternates
+
+If you are comparing two files that have meaningless or uninformative
+names, you might want @command{diff} to show alternate names in the header
+of the context and unified output formats.  To do this, use the
+@option{--label=@var{label}} option.  The first time
+you give this option, its argument replaces the name and date of the
+first file in the header; the second time, its argument replaces the
+name and date of the second file.  If you give this option more than
+twice, @command{diff} reports an error.  The @option{--label} option does not
+affect the file names in the @command{pr} header when the @option{-l} or
+@option{--paginate} option is used (@pxref{Pagination}).
+
+Here are the first two lines of the output from @samp{diff -C 2
+--label=original --label=modified lao tzu}:
+
+@example
+*** original
+--- modified
+@end example
+
+@node Side by Side
+@section Showing Differences Side by Side
+@cindex side by side
+@cindex two-column output
+@cindex columnar output
+
+@command{diff} can produce a side by side difference listing of two files.
+The files are listed in two columns with a gutter between them.  The
+gutter contains one of the following markers:
+
+@table @asis
+@item white space
+The corresponding lines are in common.  That is, either the lines are
+identical, or the difference is ignored because of one of the
+@option{--ignore} options (@pxref{White Space}).
+
+@item @samp{|}
+The corresponding lines differ, and they are either both complete
+or both incomplete.
+
+@item @samp{<}
+The files differ and only the first file contains the line.
+
+@item @samp{>}
+The files differ and only the second file contains the line.
+
+@item @samp{(}
+Only the first file contains the line, but the difference is ignored.
+
+@item @samp{)}
+Only the second file contains the line, but the difference is ignored.
+
+@item @samp{\}
+The corresponding lines differ, and only the first line is incomplete.
+
+@item @samp{/}
+The corresponding lines differ, and only the second line is incomplete.
+@end table
+
+Normally, an output line is incomplete if and only if the lines that it
+contains are incomplete; @xref{Incomplete Lines}.  However, when an
+output line represents two differing lines, one might be incomplete
+while the other is not.  In this case, the output line is complete,
+but its the gutter is marked @samp{\} if the first line is incomplete,
+@samp{/} if the second line is.
+
+Side by side format is sometimes easiest to read, but it has limitations.
+It generates much wider output than usual, and truncates lines that are
+too long to fit.  Also, it relies on lining up output more heavily than
+usual, so its output looks particularly bad if you use varying
+width fonts, nonstandard tab stops, or nonprinting characters.
+
+You can use the @command{sdiff} command to interactively merge side by side
+differences.  @xref{Interactive Merging}, for more information on merging files.
+
+@menu
+* Side by Side Format::  Controlling side by side output format.
+* Example Side by Side:: Sample side by side output.
+@end menu
+
+@node Side by Side Format
+@subsection Controlling Side by Side Format
+@cindex side by side format
+
+The @option{--side-by-side} (@option{-y}) option selects side by side
+format.  Because side by side output lines contain two input lines, the
+output is wider than usual: normally 130 print columns, which can fit
+onto a traditional printer line.  You can set the width of the output
+with the @option{--width=@var{columns}} (@option{-W @var{columns}})
+option.  The output is split into two halves of equal width, separated by a
+small gutter to mark differences; the right half is aligned to a tab
+stop so that tabs line up.  Input lines that are too long to fit in half
+of an output line are truncated for output.
+
+The @option{--left-column} option prints only the left column of two
+common lines.  The @option{--suppress-common-lines} option suppresses
+common lines entirely.
+
+@node Example Side by Side
+@subsection An Example of Side by Side Format
+
+Here is the output of the command @samp{diff -y -W 72 lao tzu}
+(@pxref{Sample diff Input}, for the complete contents of the two files).
+
+@example
+The Way that can be told of is n   <
+The name that can be named is no   <
+The Nameless is the origin of He        The Nameless is the origin of He
+The Named is the mother of all t   |    The named is the mother of all t
+                                   >
+Therefore let there always be no        Therefore let there always be no
+  so we may see their subtlety,           so we may see their subtlety,
+And let there always be being,          And let there always be being,
+  so we may see their outcome.            so we may see their outcome.
+The two are the same,                   The two are the same,
+But after they are produced,            But after they are produced,
+  they have different names.              they have different names.
+                                   >    They both may be called deep and
+                                   >    Deeper and more profound,
+                                   >    The door of all subtleties!
+@end example
+
+@node Normal
+@section Showing Differences Without Context
+@cindex normal output format
+@cindex @samp{<} output format
+
+The ``normal'' @command{diff} output format shows each hunk of differences
+without any surrounding context.  Sometimes such output is the clearest
+way to see how lines have changed, without the clutter of nearby
+unchanged lines (although you can get similar results with the context
+or unified formats by using 0 lines of context).  However, this format
+is no longer widely used for sending out patches; for that purpose, the
+context format (@pxref{Context Format}) and the unified format
+(@pxref{Unified Format}) are superior.  Normal format is the default for
+compatibility with older versions of @command{diff} and the @acronym{POSIX}
+standard.  Use the @option{--normal} option to select this output
+format explicitly.
+
+@menu
+* Example Normal::  Sample output in the normal format.
+* Detailed Normal:: A detailed description of normal output format.
+@end menu
+
+@node Example Normal
+@subsection An Example of Normal Format
+
+Here is the output of the command @samp{diff lao tzu}
+(@pxref{Sample diff Input}, for the complete contents of the two files).
+Notice that it shows only the lines that are different between the two
+files.
+
+@example
+1,2d0
+< The Way that can be told of is not the eternal Way;
+< The name that can be named is not the eternal name.
+4c2,3
+< The Named is the mother of all things.
+---
+> The named is the mother of all things.
+> @-
+11a11,13
+> They both may be called deep and profound.
+> Deeper and more profound,
+> The door of all subtleties!
+@end example
+
+@node Detailed Normal
+@subsection Detailed Description of Normal Format
+
+The normal output format consists of one or more hunks of differences;
+each hunk shows one area where the files differ.  Normal format hunks
+look like this:
+
+@example
+@var{change-command}
+< @var{from-file-line}
+< @var{from-file-line}@dots{}
+---
+> @var{to-file-line}
+> @var{to-file-line}@dots{}
+@end example
+
+There are three types of change commands.  Each consists of a line
+number or comma-separated range of lines in the first file, a single
+character indicating the kind of change to make, and a line number or
+comma-separated range of lines in the second file.  All line numbers are
+the original line numbers in each file.  The types of change commands
+are:
+
+@table @samp
+@item @var{l}a@var{r}
+Add the lines in range @var{r} of the second file after line @var{l} of
+the first file.  For example, @samp{8a12,15} means append lines 12--15
+of file 2 after line 8 of file 1; or, if changing file 2 into file 1,
+delete lines 12--15 of file 2.
+
+@item @var{f}c@var{t}
+Replace the lines in range @var{f} of the first file with lines in range
+@var{t} of the second file.  This is like a combined add and delete, but
+more compact.  For example, @samp{5,7c8,10} means change lines 5--7 of
+file 1 to read as lines 8--10 of file 2; or, if changing file 2 into
+file 1, change lines 8--10 of file 2 to read as lines 5--7 of file 1.
+
+@item @var{r}d@var{l}
+Delete the lines in range @var{r} from the first file; line @var{l} is where
+they would have appeared in the second file had they not been deleted.
+For example, @samp{5,7d3} means delete lines 5--7 of file 1; or, if
+changing file 2 into file 1, append lines 5--7 of file 1 after line 3 of
+file 2.
+@end table
+
+@node Scripts
+@section Making Edit Scripts
+@cindex script output formats
+
+Several output modes produce command scripts for editing @var{from-file}
+to produce @var{to-file}.
+
+@menu
+* ed Scripts:: Using @command{diff} to produce commands for @command{ed}.
+* Forward ed:: Making forward @command{ed} scripts.
+* RCS::        A special @command{diff} output format used by @acronym{RCS}.
+@end menu
+
+@node ed Scripts
+@subsection @command{ed} Scripts
+@cindex @command{ed} script output format
+
+@command{diff} can produce commands that direct the @command{ed} text editor
+to change the first file into the second file.  Long ago, this was the
+only output mode that was suitable for editing one file into another
+automatically; today, with @command{patch}, it is almost obsolete.  Use the
+@option{--ed} (@option{-e}) option to select this output format.
+
+Like the normal format (@pxref{Normal}), this output format does not
+show any context; unlike the normal format, it does not include the
+information necessary to apply the diff in reverse (to produce the first
+file if all you have is the second file and the diff).
+
+If the file @file{d} contains the output of @samp{diff -e old new}, then
+the command @samp{(cat d && echo w) | ed - old} edits @file{old} to make
+it a copy of @file{new}.  More generally, if @file{d1}, @file{d2},
+@dots{}, @file{dN} contain the outputs of @samp{diff -e old new1},
+@samp{diff -e new1 new2}, @dots{}, @samp{diff -e newN-1 newN},
+respectively, then the command @samp{(cat d1 d2 @dots{} dN && echo w) |
+ed - old} edits @file{old} to make it a copy of @file{newN}.
+
+@menu
+* Example ed::  A sample @command{ed} script.
+* Detailed ed:: A detailed description of @command{ed} format.
+@end menu
+
+@node Example ed
+@subsubsection Example @command{ed} Script
+
+Here is the output of @samp{diff -e lao tzu} (@pxref{Sample
+diff Input}, for the complete contents of the two files):
+
+@example
+11a
+They both may be called deep and profound.
+Deeper and more profound,
+The door of all subtleties!
+.
+4c
+The named is the mother of all things.
+
+.
+1,2d
+@end example
+
+@node Detailed ed
+@subsubsection Detailed Description of @command{ed} Format
+
+The @command{ed} output format consists of one or more hunks of
+differences.  The changes closest to the ends of the files come first so
+that commands that change the number of lines do not affect how
+@command{ed} interprets line numbers in succeeding commands.  @command{ed}
+format hunks look like this:
+
+@example
+@var{change-command}
+@var{to-file-line}
+@var{to-file-line}@dots{}
+.
+@end example
+
+Because @command{ed} uses a single period on a line to indicate the
+end of input, @acronym{GNU} @command{diff} protects lines of changes
+that contain a single period on a line by writing two periods instead,
+then writing a subsequent @command{ed} command to change the two
+periods into one.  The @command{ed} format cannot represent an
+incomplete line, so if the second file ends in a changed incomplete
+line, @command{diff} reports an error and then pretends that a newline
+was appended.
+
+There are three types of change commands.  Each consists of a line
+number or comma-separated range of lines in the first file and a single
+character indicating the kind of change to make.  All line numbers are
+the original line numbers in the file.  The types of change commands
+are:
+
+@table @samp
+@item @var{l}a
+Add text from the second file after line @var{l} in the first file.  For
+example, @samp{8a} means to add the following lines after line 8 of file
+1.
+
+@item @var{r}c
+Replace the lines in range @var{r} in the first file with the following
+lines.  Like a combined add and delete, but more compact.  For example,
+@samp{5,7c} means change lines 5--7 of file 1 to read as the text file
+2.
+
+@item @var{r}d
+Delete the lines in range @var{r} from the first file.  For example,
+@samp{5,7d} means delete lines 5--7 of file 1.
+@end table
+
+@node Forward ed
+@subsection Forward @command{ed} Scripts
+@cindex forward @command{ed} script output format
+
+@command{diff} can produce output that is like an @command{ed} script, but
+with hunks in forward (front to back) order.  The format of the commands
+is also changed slightly: command characters precede the lines they
+modify, spaces separate line numbers in ranges, and no attempt is made
+to disambiguate hunk lines consisting of a single period.  Like
+@command{ed} format, forward @command{ed} format cannot represent incomplete
+lines.
+
+Forward @command{ed} format is not very useful, because neither @command{ed}
+nor @command{patch} can apply diffs in this format.  It exists mainly for
+compatibility with older versions of @command{diff}.  Use the @option{-f} or
+@option{--forward-ed} option to select it.
+
+@node RCS
+@subsection @acronym{RCS} Scripts
+@cindex @acronym{RCS} script output format
+
+The @acronym{RCS} output format is designed specifically for use by
+the Revision Control System, which is a set of free programs used for
+organizing different versions and systems of files.  Use the
+@option{--rcs} (@option{-n}) option to select this output format.  It
+is like the forward @command{ed} format (@pxref{Forward ed}), but it
+can represent arbitrary changes to the contents of a file because it
+avoids the forward @command{ed} format's problems with lines
+consisting of a single period and with incomplete lines.  Instead of
+ending text sections with a line consisting of a single period, each
+command specifies the number of lines it affects; a combination of the
+@samp{a} and @samp{d} commands are used instead of @samp{c}.  Also, if
+the second file ends in a changed incomplete line, then the output
+also ends in an incomplete line.
+
+Here is the output of @samp{diff -n lao tzu} (@pxref{Sample
+diff Input}, for the complete contents of the two files):
+
+@example
+d1 2
+d4 1
+a4 2
+The named is the mother of all things.
+
+a11 3
+They both may be called deep and profound.
+Deeper and more profound,
+The door of all subtleties!
+@end example
+
+@node If-then-else
+@section Merging Files with If-then-else
+@cindex merged output format
+@cindex if-then-else output format
+@cindex C if-then-else output format
+@cindex @command{ifdef} output format
+
+You can use @command{diff} to merge two files of C source code.  The output
+of @command{diff} in this format contains all the lines of both files.
+Lines common to both files are output just once; the differing parts are
+separated by the C preprocessor directives @code{#ifdef @var{name}} or
+@code{#ifndef @var{name}}, @code{#else}, and @code{#endif}.  When
+compiling the output, you select which version to use by either defining
+or leaving undefined the macro @var{name}.
+
+To merge two files, use @command{diff} with the @option{-D @var{name}} or
+@option{--ifdef=@var{name}} option.  The argument @var{name} is the C
+preprocessor identifier to use in the @code{#ifdef} and @code{#ifndef}
+directives.
+
+For example, if you change an instance of @code{wait (&s)} to
+@code{waitpid (-1, &s, 0)} and then merge the old and new files with
+the @option{--ifdef=HAVE_WAITPID} option, then the affected part of your code
+might look like this:
+
+@example
+    do @{
+#ifndef HAVE_WAITPID
+        if ((w = wait (&s)) < 0  &&  errno != EINTR)
+#else /* HAVE_WAITPID */
+        if ((w = waitpid (-1, &s, 0)) < 0  &&  errno != EINTR)
+#endif /* HAVE_WAITPID */
+            return w;
+    @} while (w != child);
+@end example
+
+You can specify formats for languages other than C by using line group
+formats and line formats, as described in the next sections.
+
+@menu
+* Line Group Formats::    Formats for general if-then-else line groups.
+* Line Formats::          Formats for each line in a line group.
+* Example If-then-else::  Sample if-then-else format output.
+* Detailed If-then-else:: A detailed description of if-then-else format.
+@end menu
+
+@node Line Group Formats
+@subsection Line Group Formats
+@cindex line group formats
+@cindex formats for if-then-else line groups
+
+Line group formats let you specify formats suitable for many
+applications that allow if-then-else input, including programming
+languages and text formatting languages.  A line group format specifies
+the output format for a contiguous group of similar lines.
+
+For example, the following command compares the TeX files @file{old}
+and @file{new}, and outputs a merged file in which old regions are
+surrounded by @samp{\begin@{em@}}-@samp{\end@{em@}} lines, and new
+regions are surrounded by @samp{\begin@{bf@}}-@samp{\end@{bf@}} lines.
+
+@example
+diff \
+   --old-group-format='\begin@{em@}
+%<\end@{em@}
+' \
+   --new-group-format='\begin@{bf@}
+%>\end@{bf@}
+' \
+   old new
+@end example
+
+The following command is equivalent to the above example, but it is a
+little more verbose, because it spells out the default line group formats.
+
+@example
+diff \
+   --old-group-format='\begin@{em@}
+%<\end@{em@}
+' \
+   --new-group-format='\begin@{bf@}
+%>\end@{bf@}
+' \
+   --unchanged-group-format='%=' \
+   --changed-group-format='\begin@{em@}
+%<\end@{em@}
+\begin@{bf@}
+%>\end@{bf@}
+' \
+   old new
+@end example
+
+Here is a more advanced example, which outputs a diff listing with
+headers containing line numbers in a ``plain English'' style.
+
+@example
+diff \
+   --unchanged-group-format='' \
+   --old-group-format='-------- %dn line%(n=1?:s) deleted at %df:
+%<' \
+   --new-group-format='-------- %dN line%(N=1?:s) added after %de:
+%>' \
+   --changed-group-format='-------- %dn line%(n=1?:s) changed at %df:
+%<-------- to:
+%>' \
+   old new
+@end example
+
+To specify a line group format, use @command{diff} with one of the options
+listed below.  You can specify up to four line group formats, one for
+each kind of line group.  You should quote @var{format}, because it
+typically contains shell metacharacters.
+
+@table @option
+@item --old-group-format=@var{format}
+These line groups are hunks containing only lines from the first file.
+The default old group format is the same as the changed group format if
+it is specified; otherwise it is a format that outputs the line group as-is.
+
+@item --new-group-format=@var{format}
+These line groups are hunks containing only lines from the second
+file.  The default new group format is same as the changed group
+format if it is specified; otherwise it is a format that outputs the
+line group as-is.
+
+@item --changed-group-format=@var{format}
+These line groups are hunks containing lines from both files.  The
+default changed group format is the concatenation of the old and new
+group formats.
+
+@item --unchanged-group-format=@var{format}
+These line groups contain lines common to both files.  The default
+unchanged group format is a format that outputs the line group as-is.
+@end table
+
+In a line group format, ordinary characters represent themselves;
+conversion specifications start with @samp{%} and have one of the
+following forms.
+
+@table @samp
+@item %<
+stands for the lines from the first file, including the trailing newline.
+Each line is formatted according to the old line format (@pxref{Line Formats}).
+
+@item %>
+stands for the lines from the second file, including the trailing newline.
+Each line is formatted according to the new line format.
+
+@item %=
+stands for the lines common to both files, including the trailing newline.
+Each line is formatted according to the unchanged line format.
+
+@item %%
+stands for @samp{%}.
+
+@item %c'@var{C}'
+where @var{C} is a single character, stands for @var{C}.
+@var{C} may not be a backslash or an apostrophe.
+For example, @samp{%c':'} stands for a colon, even inside
+the then-part of an if-then-else format, which a colon would
+normally terminate.
+
+@item %c'\@var{O}'
+where @var{O} is a string of 1, 2, or 3 octal digits,
+stands for the character with octal code @var{O}.
+For example, @samp{%c'\0'} stands for a null character.
+
+@item @var{F}@var{n}
+where @var{F} is a @code{printf} conversion specification and @var{n} is one
+of the following letters, stands for @var{n}'s value formatted with @var{F}.
+
+@table @samp
+@item e
+The line number of the line just before the group in the old file.
+
+@item f
+The line number of the first line in the group in the old file;
+equals @var{e} + 1.
+
+@item l
+The line number of the last line in the group in the old file.
+
+@item m
+The line number of the line just after the group in the old file;
+equals @var{l} + 1.
+
+@item n
+The number of lines in the group in the old file; equals @var{l} - @var{f} + 1.
+
+@item E, F, L, M, N
+Likewise, for lines in the new file.
+
+@end table
+
+@vindex LC_NUMERIC
+The @code{printf} conversion specification can be @samp{%d},
+@samp{%o}, @samp{%x}, or @samp{%X}, specifying decimal, octal,
+lower case hexadecimal, or upper case hexadecimal output
+respectively.  After the @samp{%} the following options can appear in
+sequence: a series of zero or more flags; an integer
+specifying the minimum field width; and a period followed by an
+optional integer specifying the minimum number of digits.
+The flags are @samp{-} for left-justification, @samp{'} for separating
+the digit into groups as specified by the @env{LC_NUMERIC} locale category,
+and @samp{0} for padding with zeros instead of spaces.
+For example, @samp{%5dN} prints the number of new lines in the group
+in a field of width 5 characters, using the @code{printf} format @code{"%5d"}.
+
+@item (@var{A}=@var{B}?@var{T}:@var{E})
+If @var{A} equals @var{B} then @var{T} else @var{E}.
+@var{A} and @var{B} are each either a decimal constant
+or a single letter interpreted as above.
+This format spec is equivalent to @var{T} if
+@var{A}'s value equals @var{B}'s; otherwise it is equivalent to @var{E}.
+
+For example, @samp{%(N=0?no:%dN) line%(N=1?:s)} is equivalent to
+@samp{no lines} if @var{N} (the number of lines in the group in the
+new file) is 0, to @samp{1 line} if @var{N} is 1, and to @samp{%dN lines}
+otherwise.
+@end table
+
+@node Line Formats
+@subsection Line Formats
+@cindex line formats
+
+Line formats control how each line taken from an input file is
+output as part of a line group in if-then-else format.
+
+For example, the following command outputs text with a one-character
+change indicator to the left of the text.  The first character of output
+is @samp{-} for deleted lines, @samp{|} for added lines, and a space for
+unchanged lines.  The formats contain newline characters where newlines
+are desired on output.
+
+@example
+diff \
+   --old-line-format='-%l
+' \
+   --new-line-format='|%l
+' \
+   --unchanged-line-format=' %l
+' \
+   old new
+@end example
+
+To specify a line format, use one of the following options.  You should
+quote @var{format}, since it often contains shell metacharacters.
+
+@table @option
+@item --old-line-format=@var{format}
+formats lines just from the first file.
+
+@item --new-line-format=@var{format}
+formats lines just from the second file.
+
+@item --unchanged-line-format=@var{format}
+formats lines common to both files.
+
+@item --line-format=@var{format}
+formats all lines; in effect, it sets all three above options simultaneously.
+@end table
+
+In a line format, ordinary characters represent themselves;
+conversion specifications start with @samp{%} and have one of the
+following forms.
+
+@table @samp
+@item %l
+stands for the contents of the line, not counting its trailing
+newline (if any).  This format ignores whether the line is incomplete;
+@xref{Incomplete Lines}.
+
+@item %L
+stands for the contents of the line, including its trailing newline
+(if any).  If a line is incomplete, this format preserves its
+incompleteness.
+
+@item %%
+stands for @samp{%}.
+
+@item %c'@var{C}'
+where @var{C} is a single character, stands for @var{C}.
+@var{C} may not be a backslash or an apostrophe.
+For example, @samp{%c':'} stands for a colon.
+
+@item %c'\@var{O}'
+where @var{O} is a string of 1, 2, or 3 octal digits,
+stands for the character with octal code @var{O}.
+For example, @samp{%c'\0'} stands for a null character.
+
+@item @var{F}n
+where @var{F} is a @code{printf} conversion specification,
+stands for the line number formatted with @var{F}.
+For example, @samp{%.5dn} prints the line number using the
+@code{printf} format @code{"%.5d"}.  @xref{Line Group Formats}, for
+more about printf conversion specifications.
+
+@end table
+
+The default line format is @samp{%l} followed by a newline character.
+
+If the input contains tab characters and it is important that they line
+up on output, you should ensure that @samp{%l} or @samp{%L} in a line
+format is just after a tab stop (e.g.@: by preceding @samp{%l} or
+@samp{%L} with a tab character), or you should use the @option{-t} or
+@option{--expand-tabs} option.
+
+Taken together, the line and line group formats let you specify many
+different formats.  For example, the following command uses a format
+similar to normal @command{diff} format.  You can tailor this command
+to get fine control over @command{diff} output.
+
+@example
+diff \
+   --old-line-format='< %l
+' \
+   --new-line-format='> %l
+' \
+   --old-group-format='%df%(f=l?:,%dl)d%dE
+%<' \
+   --new-group-format='%dea%dF%(F=L?:,%dL)
+%>' \
+   --changed-group-format='%df%(f=l?:,%dl)c%dF%(F=L?:,%dL)
+%<---
+%>' \
+   --unchanged-group-format='' \
+   old new
+@end example
+
+@node Example If-then-else
+@subsection An Example of If-then-else Format
+
+Here is the output of @samp{diff -DTWO lao tzu} (@pxref{Sample
+diff Input}, for the complete contents of the two files):
+
+@example
+#ifndef TWO
+The Way that can be told of is not the eternal Way;
+The name that can be named is not the eternal name.
+#endif /* ! TWO */
+The Nameless is the origin of Heaven and Earth;
+#ifndef TWO
+The Named is the mother of all things.
+#else /* TWO */
+The named is the mother of all things.
+
+#endif /* TWO */
+Therefore let there always be non-being,
+  so we may see their subtlety,
+And let there always be being,
+  so we may see their outcome.
+The two are the same,
+But after they are produced,
+  they have different names.
+#ifdef TWO
+They both may be called deep and profound.
+Deeper and more profound,
+The door of all subtleties!
+#endif /* TWO */
+@end example
+
+@node Detailed If-then-else
+@subsection Detailed Description of If-then-else Format
+
+For lines common to both files, @command{diff} uses the unchanged line
+group format.  For each hunk of differences in the merged output
+format, if the hunk contains only lines from the first file,
+@command{diff} uses the old line group format; if the hunk contains only
+lines from the second file, @command{diff} uses the new group format;
+otherwise, @command{diff} uses the changed group format.
+
+The old, new, and unchanged line formats specify the output format of
+lines from the first file, lines from the second file, and lines common
+to both files, respectively.
+
+The option @option{--ifdef=@var{name}} is equivalent to
+the following sequence of options using shell syntax:
+
+@example
+--old-group-format='#ifndef @var{name}
+%<#endif /* ! @var{name} */
+' \
+--new-group-format='#ifdef @var{name}
+%>#endif /* @var{name} */
+' \
+--unchanged-group-format='%=' \
+--changed-group-format='#ifndef @var{name}
+%<#else /* @var{name} */
+%>#endif /* @var{name} */
+'
+@end example
+
+You should carefully check the @command{diff} output for proper nesting.
+For example, when using the @option{-D @var{name}} or
+@option{--ifdef=@var{name}} option, you should check that if the
+differing lines contain any of the C preprocessor directives
+@samp{#ifdef}, @samp{#ifndef}, @samp{#else}, @samp{#elif}, or
+@samp{#endif}, they are nested properly and match.  If they don't, you
+must make corrections manually.  It is a good idea to carefully check
+the resulting code anyway to make sure that it really does what you
+want it to; depending on how the input files were produced, the output
+might contain duplicate or otherwise incorrect code.
+
+The @command{patch} @option{-D @var{name}} option behaves like
+the @command{diff} @option{-D @var{name}} option, except it operates on
+a file and a diff to produce a merged file; @xref{patch Options}.
+
+@node Incomplete Lines
+@chapter Incomplete Lines
+@cindex incomplete lines
+@cindex full lines
+@cindex newline treatment by @command{diff}
+
+When an input file ends in a non-newline character, its last line is
+called an @dfn{incomplete line} because its last character is not a
+newline.  All other lines are called @dfn{full lines} and end in a
+newline character.  Incomplete lines do not match full lines unless
+differences in white space are ignored (@pxref{White Space}).
+
+An incomplete line is normally distinguished on output from a full
+line by a following line that starts with @samp{\}.  However, the
+@acronym{RCS} format (@pxref{RCS}) outputs the incomplete line as-is,
+without any trailing newline or following line.  The side by side
+format normally represents incomplete lines as-is, but in some cases
+uses a @samp{\} or @samp{/} gutter marker; @xref{Side by Side}.  The
+if-then-else line format preserves a line's incompleteness with
+@samp{%L}, and discards the newline with @samp{%l}; @xref{Line
+Formats}.  Finally, with the @command{ed} and forward @command{ed}
+output formats (@pxref{Output Formats}) @command{diff} cannot
+represent an incomplete line, so it pretends there was a newline and
+reports an error.
+
+For example, suppose @file{F} and @file{G} are one-byte files that
+contain just @samp{f} and @samp{g}, respectively.  Then @samp{diff F G}
+outputs
+
+@example
+1c1
+< f
+\ No newline at end of file
+---
+> g
+\ No newline at end of file
+@end example
+
+@noindent
+(The exact message may differ in non-English locales.)
+@samp{diff -n F G} outputs the following without a trailing newline:
+
+@example
+d1 1
+a1 1
+g
+@end example
+
+@noindent
+@samp{diff -e F G} reports two errors and outputs the following:
+
+@example
+1c
+g
+.
+@end example
+
+@node Comparing Directories
+@chapter Comparing Directories
+
+@vindex LC_COLLATE
+You can use @command{diff} to compare some or all of the files in two
+directory trees.  When both file name arguments to @command{diff} are
+directories, it compares each file that is contained in both
+directories, examining file names in alphabetical order as specified by
+the @env{LC_COLLATE} locale category.  Normally
+@command{diff} is silent about pairs of files that contain no differences,
+but if you use the @option{--report-identical-files} (@option{-s}) option,
+it reports pairs of identical files.  Normally @command{diff} reports
+subdirectories common to both directories without comparing
+subdirectories' files, but if you use the @option{-r} or
+@option{--recursive} option, it compares every corresponding pair of files
+in the directory trees, as many levels deep as they go.
+
+For file names that are in only one of the directories, @command{diff}
+normally does not show the contents of the file that exists; it reports
+only that the file exists in that directory and not in the other.  You
+can make @command{diff} act as though the file existed but was empty in the
+other directory, so that it outputs the entire contents of the file that
+actually exists.  (It is output as either an insertion or a
+deletion, depending on whether it is in the first or the second
+directory given.)  To do this, use the @option{--new-file} (@option{-N})
+option.
+
+If the older directory contains one or more large files that are not in
+the newer directory, you can make the patch smaller by using the
+@option{--unidirectional-new-file} option instead of @option{-N}.
+This option is like @option{-N} except that it only inserts the contents
+of files that appear in the second directory but not the first (that is,
+files that were added).  At the top of the patch, write instructions for
+the user applying the patch to remove the files that were deleted before
+applying the patch.  @xref{Making Patches}, for more discussion of
+making patches for distribution.
+
+To ignore some files while comparing directories, use the
+@option{--exclude=@var{pattern}} (@option{-x @var{pattern}}) option.
+This option
+ignores any files or subdirectories whose base names match the shell
+pattern @var{pattern}.  Unlike in the shell, a period at the start of
+the base of a file name matches a wildcard at the start of a pattern.
+You should enclose @var{pattern} in quotes so that the shell does not
+expand it.  For example, the option @option{-x '*.[ao]'} ignores any file
+whose name ends with @samp{.a} or @samp{.o}.
+
+This option accumulates if you specify it more than once.  For example,
+using the options @option{-x 'RCS' -x '*,v'} ignores any file or
+subdirectory whose base name is @samp{RCS} or ends with @samp{,v}.
+
+If you need to give this option many times, you can instead put the
+patterns in a file, one pattern per line, and use the
+@option{--exclude-from=@var{file}} (@option{-X @var{file}}) option.
+Trailing white space and empty lines are ignored in the pattern file.
+
+If you have been comparing two directories and stopped partway through,
+later you might want to continue where you left off.  You can do this by
+using the @option{--starting-file=@var{file}} (@option{-S @var{file}})
+option.  This compares only the file @var{file} and all alphabetically
+later files in the topmost directory level.
+
+If two directories differ only in that file names are lower case in
+one directory and upper case in the upper, @command{diff} normally
+reports many differences because it compares file names in a
+case sensitive way.  With the @option{--ignore-file-name-case} option,
+@command{diff} ignores case differences in file names, so that for example
+the contents of the file @file{Tao} in one directory are compared to
+the contents of the file @file{TAO} in the other.  The
+@option{--no-ignore-file-name-case} option cancels the effect of the
+@option{--ignore-file-name-case} option, reverting to the default
+behavior.
+
+If an @option{--exclude=@var{pattern}} (@option{-x @var{pattern}}) option,
+or an @option{--exclude-from=@var{file}} (@option{-X @var{file}}) option,
+is specified while the @option{--ignore-file-name-case} option is in
+effect, case is ignored when excluding file names matching the
+specified patterns.
+
+To avoid that @command{diff} follows symbolic links, use the
+@c later: @option{--no-dereference} (@option{-P}).
+@option{--no-dereference}.
+When this option is in use,
+symbolic links will be treated like a special kind of files, rather than
+comparing the target of each symbolic link.
+
+@node Adjusting Output
+@chapter Making @command{diff} Output Prettier
+
+@command{diff} provides several ways to adjust the appearance of its output.
+These adjustments can be applied to any output format.
+
+@menu
+* Tabs::            Preserving the alignment of tab stops.
+* Trailing Blanks:: Suppressing blanks before empty output lines.
+* Pagination::      Page numbering and time-stamping @command{diff} output.
+@end menu
+
+@node Tabs
+@section Preserving Tab Stop Alignment
+@cindex tab stop alignment
+@cindex aligning tab stops
+
+The lines of text in some of the @command{diff} output formats are
+preceded by one or two characters that indicate whether the text is
+inserted, deleted, or changed.  The addition of those characters can
+cause tabs to move to the next tab stop, throwing off the alignment of
+columns in the line.  @acronym{GNU} @command{diff} provides two ways
+to make tab-aligned columns line up correctly.
+
+The first way is to have @command{diff} convert all tabs into the correct
+number of spaces before outputting them; select this method with the
+@option{--expand-tabs} (@option{-t}) option.  To use this form of output with
+@command{patch}, you must give @command{patch} the @option{-l} or
+@option{--ignore-white-space} option (@pxref{Changed White Space}, for more
+information).  @command{diff} normally assumes that tab stops are set
+every 8 print columns, but this can be altered by the
+@option{--tabsize=@var{columns}} option.
+
+The other method for making tabs line up correctly is to add a tab
+character instead of a space after the indicator character at the
+beginning of the line.  This ensures that all following tab characters
+are in the same position relative to tab stops that they were in the
+original files, so that the output is aligned correctly.  Its
+disadvantage is that it can make long lines too long to fit on one line
+of the screen or the paper.  It also does not work with the unified
+output format, which does not have a space character after the change
+type indicator character.  Select this method with the @option{-T} or
+@option{--initial-tab} option.
+
+@node Trailing Blanks
+@section Omitting trailing blanks
+@cindex trailing blanks
+When outputting lines in normal or context format, or outputting an
+unchanged line in unified format, @command{diff} normally outputs a
+blank just before each line.  If the line is empty, the output of
+@command{diff} therefore contains trailing blanks even though the
+input does not contain them.  For example, when outputting an
+unchanged empty line in context format, @command{diff} normally
+outputs a line with two leading spaces.
+
+Some text editors and email agents routinely delete trailing blanks,
+so it can be a problem to deal with diff output files that contain
+them.  You can avoid this problem with the
+@option{--suppress-blank-empty} option.  It causes @command{diff} to
+omit trailing blanks at the end of output lines in normal, context,
+and unified format, unless the trailing blanks were already present in
+the input.  This changes the output format slightly, so that output
+lines are guaranteed to never end in a blank unless an input line ends
+in a blank.  This format is less likely to be munged by text editors
+or by transmission via email.  It is accepted by @acronym{GNU}
+@command{patch} as well.
+
+@node Pagination
+@section Paginating @command{diff} Output
+@cindex paginating @command{diff} output
+
+It can be convenient to have long output page-numbered and time-stamped.
+The @option{--paginate} (@option{-l}) option does this by sending the
+@command{diff} output through the @command{pr} program.  Here is what the page
+header might look like for @samp{diff -lc lao tzu}:
+
+@example
+2002-02-22 14:20                 diff -lc lao tzu                 Page 1
+@end example
+
+@node diff Performance
+@chapter @command{diff} Performance Tradeoffs
+@cindex performance of @command{diff}
+
+@acronym{GNU} @command{diff} runs quite efficiently; however, in some
+circumstances you can cause it to run faster or produce a more compact
+set of changes.
+
+One way to improve @command{diff} performance is to use hard or
+symbolic links to files instead of copies.  This improves performance
+because @command{diff} normally does not need to read two hard or
+symbolic links to the same file, since their contents must be
+identical.  For example, suppose you copy a large directory hierarchy,
+make a few changes to the copy, and then often use @samp{diff -r} to
+compare the original to the copy.  If the original files are
+read-only, you can greatly improve performance by creating the copy
+using hard or symbolic links (e.g., with @acronym{GNU} @samp{cp -lR} or
+@samp{cp -sR}).  Before editing a file in the copy for the first time,
+you should break the link and replace it with a regular copy.
+
+You can also affect the performance of @acronym{GNU} @command{diff} by
+giving it options that change the way it compares files.
+Performance has more than one dimension.  These options improve one
+aspect of performance at the cost of another, or they improve
+performance in some cases while hurting it in others.
+
+The way that @acronym{GNU} @command{diff} determines which lines have
+changed always comes up with a near-minimal set of differences.
+Usually it is good enough for practical purposes.  If the
+@command{diff} output is large, you might want @command{diff} to use a
+modified algorithm that sometimes produces a smaller set of
+differences.  The @option{--minimal} (@option{-d}) option does this;
+however, it can also cause @command{diff} to run more slowly than
+usual, so it is not the default behavior.
+
+When the files you are comparing are large and have small groups of
+changes scattered throughout them, you can use the
+@option{--speed-large-files} option to make a different modification to
+the algorithm that @command{diff} uses.  If the input files have a constant
+small density of changes, this option speeds up the comparisons without
+changing the output.  If not, @command{diff} might produce a larger set of
+differences; however, the output will still be correct.
+
+Normally @command{diff} discards the prefix and suffix that is common to
+both files before it attempts to find a minimal set of differences.
+This makes @command{diff} run faster, but occasionally it may produce
+non-minimal output.  The @option{--horizon-lines=@var{lines}} option
+prevents @command{diff} from discarding the last @var{lines} lines of the
+prefix and the first @var{lines} lines of the suffix.  This gives
+@command{diff} further opportunities to find a minimal output.
+
+Suppose a run of changed lines includes a sequence of lines at one end
+and there is an identical sequence of lines just outside the other end.
+The @command{diff} command is free to choose which identical sequence is
+included in the hunk.  In this case, @command{diff} normally shifts the
+hunk's boundaries when this merges adjacent hunks, or shifts a hunk's
+lines towards the end of the file.  Merging hunks can make the output
+look nicer in some cases.
+
+@node Comparing Three Files
+@chapter Comparing Three Files
+@cindex comparing three files
+@cindex format of @command{diff3} output
+
+Use the program @command{diff3} to compare three files and show any
+differences among them.  (@command{diff3} can also merge files; see
+@ref{diff3 Merging}).
+
+The ``normal'' @command{diff3} output format shows each hunk of
+differences without surrounding context.  Hunks are labeled depending
+on whether they are two-way or three-way, and lines are annotated by
+their location in the input files.
+
+@xref{Invoking diff3}, for more information on how to run @command{diff3}.
+
+@menu
+* Sample diff3 Input::    Sample @command{diff3} input for examples.
+* Example diff3 Normal::  Sample output in the normal format.
+* diff3 Hunks::           The format of normal output format.
+* Detailed diff3 Normal:: A detailed description of normal output format.
+@end menu
+
+@node Sample diff3 Input
+@section A Third Sample Input File
+@cindex @command{diff3} sample input
+@cindex sample input for @command{diff3}
+
+Here is a third sample file that will be used in examples to illustrate
+the output of @command{diff3} and how various options can change it.  The
+first two files are the same that we used for @command{diff} (@pxref{Sample
+diff Input}).  This is the third sample file, called @file{tao}:
+
+@example
+The Way that can be told of is not the eternal Way;
+The name that can be named is not the eternal name.
+The Nameless is the origin of Heaven and Earth;
+The named is the mother of all things.
+
+Therefore let there always be non-being,
+  so we may see their subtlety,
+And let there always be being,
+  so we may see their result.
+The two are the same,
+But after they are produced,
+  they have different names.
+
+  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
+@end example
+
+@node Example diff3 Normal
+@section An Example of @command{diff3} Normal Format
+
+Here is the output of the command @samp{diff3 lao tzu tao}
+(@pxref{Sample diff3 Input}, for the complete contents of the files).
+Notice that it shows only the lines that are different among the three
+files.
+
+@example
+====2
+1:1,2c
+3:1,2c
+  The Way that can be told of is not the eternal Way;
+  The name that can be named is not the eternal name.
+2:0a
+====1
+1:4c
+  The Named is the mother of all things.
+2:2,3c
+3:4,5c
+  The named is the mother of all things.
+  @-
+====3
+1:8c
+2:7c
+    so we may see their outcome.
+3:9c
+    so we may see their result.
+====
+1:11a
+2:11,13c
+  They both may be called deep and profound.
+  Deeper and more profound,
+  The door of all subtleties!
+3:13,14c
+  @-
+    -- The Way of Lao-Tzu, tr. Wing-tsit Chan
+@end example
+
+@node Detailed diff3 Normal
+@section Detailed Description of @command{diff3} Normal Format
+
+Each hunk begins with a line marked @samp{====}.  Three-way hunks have
+plain @samp{====} lines, and two-way hunks have @samp{1}, @samp{2}, or
+@samp{3} appended to specify which of the three input files differ in
+that hunk.  The hunks contain copies of two or three sets of input
+lines each preceded by one or two commands identifying where the lines
+came from.
+
+Normally, two spaces precede each copy of an input line to distinguish
+it from the commands.  But with the @option{--initial-tab} (@option{-T})
+option, @command{diff3} uses a tab instead of two spaces; this lines up
+tabs correctly.  @xref{Tabs}, for more information.
+
+Commands take the following forms:
+
+@table @samp
+@item @var{file}:@var{l}a
+This hunk appears after line @var{l} of file @var{file}, and
+contains no lines in that file.  To edit this file to yield the other
+files, one must append hunk lines taken from the other files.  For
+example, @samp{1:11a} means that the hunk follows line 11 in the first
+file and contains no lines from that file.
+
+@item @var{file}:@var{r}c
+This hunk contains the lines in the range @var{r} of file @var{file}.
+The range @var{r} is a comma-separated pair of line numbers, or just one
+number if there is only one line.  To edit this file to yield the
+other files, one must change the specified lines to be the lines taken
+from the other files.  For example, @samp{2:11,13c} means that the hunk
+contains lines 11 through 13 from the second file.
+@end table
+
+If the last line in a set of input lines is incomplete
+(@pxref{Incomplete Lines}), it is distinguished on output from a full
+line by a following line that starts with @samp{\}.
+
+@node diff3 Hunks
+@section @command{diff3} Hunks
+@cindex hunks for @command{diff3}
+@cindex @command{diff3} hunks
+
+Groups of lines that differ in two or three of the input files are
+called @dfn{diff3 hunks}, by analogy with @command{diff} hunks
+(@pxref{Hunks}).  If all three input files differ in a @command{diff3}
+hunk, the hunk is called a @dfn{three-way hunk}; if just two input files
+differ, it is a @dfn{two-way hunk}.
+
+As with @command{diff}, several solutions are possible.  When comparing the
+files @samp{A}, @samp{B}, and @samp{C}, @command{diff3} normally finds
+@command{diff3} hunks by merging the two-way hunks output by the two
+commands @samp{diff A B} and @samp{diff A C}.  This does not necessarily
+minimize the size of the output, but exceptions should be rare.
+
+For example, suppose @file{F} contains the three lines @samp{a},
+@samp{b}, @samp{f}, @file{G} contains the lines @samp{g}, @samp{b},
+@samp{g}, and @file{H} contains the lines @samp{a}, @samp{b},
+@samp{h}.  @samp{diff3 F G H} might output the following:
+
+@example
+====2
+1:1c
+3:1c
+  a
+2:1c
+  g
+====
+1:3c
+  f
+2:3c
+  g
+3:3c
+  h
+@end example
+
+@noindent
+because it found a two-way hunk containing @samp{a} in the first and
+third files and @samp{g} in the second file, then the single line
+@samp{b} common to all three files, then a three-way hunk containing
+the last line of each file.
+
+@node diff3 Merging
+@chapter Merging From a Common Ancestor
+@cindex merging from a common ancestor
+
+When two people have made changes to copies of the same file,
+@command{diff3} can produce a merged output that contains both sets of
+changes together with warnings about conflicts.
+
+One might imagine programs with names like @command{diff4} and @command{diff5}
+to compare more than three files simultaneously, but in practice the
+need rarely arises.  You can use @command{diff3} to merge three or more
+sets of changes to a file by merging two change sets at a time.
+
+@command{diff3} can incorporate changes from two modified versions into a
+common preceding version.  This lets you merge the sets of changes
+represented by the two newer files.  Specify the common ancestor version
+as the second argument and the two newer versions as the first and third
+arguments, like this:
+
+@example
+diff3 @var{mine} @var{older} @var{yours}
+@end example
+
+@noindent
+You can remember the order of the arguments by noting that they are in
+alphabetical order.
+
+@cindex conflict
+@cindex overlap
+You can think of this as subtracting @var{older} from @var{yours} and
+adding the result to @var{mine}, or as merging into @var{mine} the
+changes that would turn @var{older} into @var{yours}.  This merging is
+well-defined as long as @var{mine} and @var{older} match in the
+neighborhood of each such change.  This fails to be true when all three
+input files differ or when only @var{older} differs; we call this
+a @dfn{conflict}.  When all three input files differ, we call the
+conflict an @dfn{overlap}.
+
+@command{diff3} gives you several ways to handle overlaps and conflicts.
+You can omit overlaps or conflicts, or select only overlaps,
+or mark conflicts with special @samp{<<<<<<<} and @samp{>>>>>>>} lines.
+
+@command{diff3} can output the merge results as an @command{ed} script that
+that can be applied to the first file to yield the merged output.
+However, it is usually better to have @command{diff3} generate the merged
+output directly; this bypasses some problems with @command{ed}.
+
+@menu
+* Which Changes::            Selecting changes to incorporate.
+* Marking Conflicts::        Marking conflicts.
+* Bypassing ed::             Generating merged output directly.
+* Merging Incomplete Lines:: How @command{diff3} merges incomplete lines.
+* Saving the Changed File::  Emulating System V behavior.
+@end menu
+
+@node Which Changes
+@section Selecting Which Changes to Incorporate
+@cindex overlapping change, selection of
+@cindex unmerged change
+
+You can select all unmerged changes from @var{older} to @var{yours} for merging
+into @var{mine} with the @option{--ed} (@option{-e}) option.  You can
+select only the nonoverlapping unmerged changes with
+@option{--easy-only} (@option{-3}),
+and you can select only the overlapping changes with
+@option{--overlap-only} (@option{-x}).
+
+The @option{-e}, @option{-3} and @option{-x} options select only
+@dfn{unmerged changes}, i.e.@: changes where @var{mine} and @var{yours}
+differ; they ignore changes from @var{older} to @var{yours} where
+@var{mine} and @var{yours} are identical, because they assume that such
+changes have already been merged.  If this assumption is not a safe
+one, you can use the @option{--show-all} (@option{-A}) option
+(@pxref{Marking Conflicts}).
+
+Here is the output of the command @command{diff3} with each of these three
+options (@pxref{Sample diff3 Input}, for the complete contents of the files).
+Notice that @option{-e} outputs the union of the disjoint sets of changes
+output by @option{-3} and @option{-x}.
+
+Output of @samp{diff3 -e lao tzu tao}:
+@example
+11a
+
+  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
+.
+8c
+  so we may see their result.
+.
+@end example
+
+Output of @samp{diff3 -3 lao tzu tao}:
+@example
+8c
+  so we may see their result.
+.
+@end example
+
+Output of @samp{diff3 -x lao tzu tao}:
+@example
+11a
+
+  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
+.
+@end example
+
+@node Marking Conflicts
+@section Marking Conflicts
+@cindex conflict marking
+@cindex @samp{<<<<<<<} for marking conflicts
+
+@command{diff3} can mark conflicts in the merged output by
+bracketing them with special marker lines.  A conflict
+that comes from two files @var{A} and @var{B} is marked as follows:
+
+@example
+<<<<<<< @var{A}
+@r{lines from @var{A}}
+=======
+@r{lines from @var{B}}
+>>>>>>> @var{B}
+@end example
+
+A conflict that comes from three files @var{A}, @var{B} and @var{C} is
+marked as follows:
+
+@example
+<<<<<<< @var{A}
+@r{lines from @var{A}}
+||||||| @var{B}
+@r{lines from @var{B}}
+=======
+@r{lines from @var{C}}
+>>>>>>> @var{C}
+@end example
+
+The @option{--show-all} (@option{-A}) option acts like the @option{-e}
+option, except that it brackets conflicts, and it outputs all changes
+from @var{older} to @var{yours}, not just the unmerged changes.  Thus,
+given the sample input files (@pxref{Sample diff3 Input}), @samp{diff3
+-A lao tzu tao} puts brackets around the conflict where only @file{tzu}
+differs:
+
+@example
+<<<<<<< tzu
+=======
+The Way that can be told of is not the eternal Way;
+The name that can be named is not the eternal name.
+>>>>>>> tao
+@end example
+
+And it outputs the three-way conflict as follows:
+
+@example
+<<<<<<< lao
+||||||| tzu
+They both may be called deep and profound.
+Deeper and more profound,
+The door of all subtleties!
+=======
+
+  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
+>>>>>>> tao
+@end example
+
+The @option{--show-overlap} (@option{-E}) option outputs less information
+than the @option{--show-all} (@option{-A}) option, because it outputs only
+unmerged changes, and it never outputs the contents of the second
+file.  Thus the @option{-E} option acts like the @option{-e} option,
+except that it brackets the first and third files from three-way
+overlapping changes.  Similarly, @option{-X} acts like @option{-x}, except
+it brackets all its (necessarily overlapping) changes.  For example,
+for the three-way overlapping change above, the @option{-E} and @option{-X}
+options output the following:
+
+@example
+<<<<<<< lao
+=======
+
+  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
+>>>>>>> tao
+@end example
+
+If you are comparing files that have meaningless or uninformative names,
+you can use the @option{--label=@var{label}}
+option to show alternate names in the @samp{<<<<<<<}, @samp{|||||||}
+and @samp{>>>>>>>} brackets.  This option can be given up to three
+times, once for each input file.  Thus @samp{diff3 -A --label X
+--label Y --label Z A
+B C} acts like @samp{diff3 -A A B C}, except that the output looks like
+it came from files named @samp{X}, @samp{Y} and @samp{Z} rather than
+from files named @samp{A}, @samp{B} and @samp{C}.
+
+@node Bypassing ed
+@section Generating the Merged Output Directly
+@cindex merged @command{diff3} format
+
+With the @option{--merge} (@option{-m}) option, @command{diff3} outputs the
+merged file directly.  This is more efficient than using @command{ed} to
+generate it, and works even with non-text files that @command{ed} would
+reject.  If you specify @option{-m} without an @command{ed} script option,
+@option{-A} is assumed.
+
+For example, the command @samp{diff3 -m lao tzu tao}
+(@pxref{Sample diff3 Input} for a copy of the input files) would output
+the following:
+
+@example
+<<<<<<< tzu
+=======
+The Way that can be told of is not the eternal Way;
+The name that can be named is not the eternal name.
+>>>>>>> tao
+The Nameless is the origin of Heaven and Earth;
+The Named is the mother of all things.
+Therefore let there always be non-being,
+  so we may see their subtlety,
+And let there always be being,
+  so we may see their result.
+The two are the same,
+But after they are produced,
+  they have different names.
+<<<<<<< lao
+||||||| tzu
+They both may be called deep and profound.
+Deeper and more profound,
+The door of all subtleties!
+=======
+
+  -- The Way of Lao-Tzu, tr. Wing-tsit Chan
+>>>>>>> tao
+@end example
+
+@node Merging Incomplete Lines
+@section How @command{diff3} Merges Incomplete Lines
+@cindex incomplete line merging
+
+With @option{-m}, incomplete lines (@pxref{Incomplete Lines}) are simply
+copied to the output as they are found; if the merged output ends in an
+conflict and one of the input files ends in an incomplete
+line, succeeding @samp{|||||||}, @samp{=======} or @samp{>>>>>>>}
+brackets appear somewhere other than the start of a line because
+they are appended to the incomplete line.
+
+Without @option{-m}, if an @command{ed} script option is specified and an
+incomplete line is found, @command{diff3} generates a warning and acts as
+if a newline had been present.
+
+@node Saving the Changed File
+@section Saving the Changed File
+@cindex System V @command{diff3} compatibility
+
+Traditional Unix @command{diff3} generates an @command{ed} script without the
+trailing @samp{w} and @samp{q} commands that save the changes.
+System V @command{diff3} generates these extra commands.  @acronym{GNU}
+@command{diff3} normally behaves like traditional Unix
+@command{diff3}, but with the @option{-i} option it behaves like
+System V @command{diff3} and appends the @samp{w} and @samp{q}
+commands.
+
+The @option{-i} option requires one of the @command{ed} script options
+@option{-AeExX3}, and is incompatible with the merged output option
+@option{-m}.
+
+@node Interactive Merging
+@chapter Interactive Merging with @command{sdiff}
+@cindex diff merging
+@cindex interactive merging
+
+With @command{sdiff}, you can merge two files interactively based on a
+side-by-side @option{-y} format comparison (@pxref{Side by Side}).  Use
+@option{--output=@var{file}} (@option{-o @var{file}}) to specify where to
+put the merged text.  @xref{Invoking sdiff}, for more details on the
+options to @command{sdiff}.
+
+Another way to merge files interactively is to use the Emacs Lisp
+package @command{emerge}.  @xref{emerge, , emerge, emacs, The
+@acronym{GNU} Emacs Manual}, for more information.
+
+@menu
+* sdiff Option Summary:: Summary of @command{sdiff} options.
+* Merge Commands::       Merging two files interactively.
+@end menu
+
+@node sdiff Option Summary
+@section Specifying @command{diff} Options to @command{sdiff}
+@cindex @command{sdiff} output format
+
+The following @command{sdiff} options have the same meaning as for
+@command{diff}.  @xref{diff Options}, for the use of these options.
+
+@example
+-a -b -d -i -t -v
+-B -E -I @var{regexp} -Z
+
+--expand-tabs
+--ignore-blank-lines  --ignore-case
+--ignore-matching-lines=@var{regexp}  --ignore-space-change
+--ignore-tab-expansion  --ignore-trailing-space
+--left-column  --minimal  --speed-large-files
+--strip-trailing-cr  --suppress-common-lines
+--tabsize=@var{columns}  --text  --version  --width=@var{columns}
+@end example
+
+For historical reasons, @command{sdiff} has alternate names for some
+options.  The @option{-l} option is equivalent to the
+@option{--left-column} option, and similarly @option{-s} is equivalent
+to @option{--suppress-common-lines}.  The meaning of the @command{sdiff}
+@option{-w} and @option{-W} options is interchanged from that of
+@command{diff}: with @command{sdiff}, @option{-w @var{columns}} is
+equivalent to @option{--width=@var{columns}}, and @option{-W} is
+equivalent to @option{--ignore-all-space}.  @command{sdiff} without the
+@option{-o} option is equivalent to @command{diff} with the
+@option{--side-by-side} (@option{-y}) option (@pxref{Side by Side}).
+
+@node Merge Commands
+@section Merge Commands
+@cindex merge commands
+@cindex merging interactively
+
+Groups of common lines, with a blank gutter, are copied from the first
+file to the output.  After each group of differing lines, @command{sdiff}
+prompts with @samp{%} and pauses, waiting for one of the following
+commands.  Follow each command with @key{RET}.
+
+@table @samp
+@item e
+Discard both versions.
+Invoke a text editor on an empty temporary file,
+then copy the resulting file to the output.
+
+@item eb
+Concatenate the two versions, edit the result in a temporary file,
+then copy the edited result to the output.
+
+@item ed
+Like @samp{eb}, except precede each version with a header that
+shows what file and lines the version came from.
+
+@item el
+@itemx e1
+Edit a copy of the left version, then copy the result to the output.
+
+@item er
+@itemx e2
+Edit a copy of the right version, then copy the result to the output.
+
+@item l
+@itemx 1
+Copy the left version to the output.
+
+@item q
+Quit.
+
+@item r
+@itemx 2
+Copy the right version to the output.
+
+@item s
+Silently copy common lines.
+
+@item v
+Verbosely copy common lines.  This is the default.
+@end table
+
+@vindex EDITOR
+The text editor invoked is specified by the @env{EDITOR} environment
+variable if it is set.  The default is system-dependent.
+
+@node Merging with patch
+@chapter Merging with @command{patch}
+
+@command{patch} takes comparison output produced by @command{diff} and applies
+the differences to a copy of the original file, producing a patched
+version.  With @command{patch}, you can distribute just the changes to a
+set of files instead of distributing the entire file set; your
+correspondents can apply @command{patch} to update their copy of the files
+with your changes.  @command{patch} automatically determines the diff
+format, skips any leading or trailing headers, and uses the headers to
+determine which file to patch.  This lets your correspondents feed a
+mail message containing a difference listing directly to
+@command{patch}.
+
+@command{patch} detects and warns about common problems like forward
+patches.  It saves any patches that it could not apply.  It can also maintain a
+@code{patchlevel.h} file to ensure that your correspondents apply
+diffs in the proper order.
+
+@command{patch} accepts a series of diffs in its standard input, usually
+separated by headers that specify which file to patch.  It applies
+@command{diff} hunks (@pxref{Hunks}) one by one.  If a hunk does not
+exactly match the original file, @command{patch} uses heuristics to try to
+patch the file as well as it can.  If no approximate match can be found,
+@command{patch} rejects the hunk and skips to the next hunk.  @command{patch}
+normally replaces each file @var{f} with its new version, putting reject
+hunks (if any) into @samp{@var{f}.rej}.
+
+@xref{Invoking patch}, for detailed information on the options to
+@command{patch}.
+
+@menu
+* patch Input::            Selecting the type of @command{patch} input.
+* Revision Control::       Getting files from @acronym{RCS}, @acronym{SCCS}, etc.
+* Imperfect::              Dealing with imperfect patches.
+* Creating and Removing::  Creating and removing files with a patch.
+* Patching Time Stamps::   Updating time stamps on patched files.
+* Multiple Patches::       Handling multiple patches in a file.
+* patch Directories::      Changing directory and stripping directories.
+* Backups::                Whether backup files are made.
+* Backup Names::           Backup file names.
+* Reject Names::           Reject file names.
+* patch Messages::         Messages and questions @command{patch} can produce.
+* patch and POSIX::        Conformance to the @acronym{POSIX} standard.
+* patch and Tradition::    @acronym{GNU} versus traditional @command{patch}.
+@end menu
+
+@node patch Input
+@section Selecting the @command{patch} Input Format
+@cindex @command{patch} input format
+
+@command{patch} normally determines which @command{diff} format the patch
+file uses by examining its contents.  For patch files that contain
+particularly confusing leading text, you might need to use one of the
+following options to force @command{patch} to interpret the patch file as a
+certain format of diff.  The output formats listed here are the only
+ones that @command{patch} can understand.
+
+@table @option
+@item -c
+@itemx --context
+context diff.
+
+@item -e
+@itemx --ed
+@command{ed} script.
+
+@item -n
+@itemx --normal
+normal diff.
+
+@item -u
+@itemx --unified
+unified diff.
+@end table
+
+@node Revision Control
+@section Revision Control
+@cindex revision control
+@cindex version control
+@cindex @acronym{RCS}
+@cindex ClearCase
+@cindex @acronym{SCCS}
+
+If a nonexistent input file is under a revision control system
+supported by @command{patch}, @command{patch} normally asks the user
+whether to get (or check out) the file from the revision control
+system.  Patch currently supports @acronym{RCS}, ClearCase and
+@acronym{SCCS}.  Under @acronym{RCS} and @acronym{SCCS},
+@command{patch} also asks when the input file is read-only and matches
+the default version in the revision control system.
+
+@vindex PATCH_GET
+The @option{--get=@var{num}} (@option{-g @var{num}}) option affects access
+to files under supported revision control systems.  If @var{num} is
+positive, @command{patch} gets the file without asking the user; if
+zero, @command{patch} neither asks the user nor gets the file; and if
+negative, @command{patch} asks the user before getting the file.  The
+default value of @var{num} is given by the value of the
+@env{PATCH_GET} environment variable if it is set; if not, the default
+value is zero if @command{patch} is conforming to @acronym{POSIX}, negative
+otherwise.  @xref{patch and POSIX}.
+
+@vindex VERSION_CONTROL
+The choice of revision control system is unaffected by the
+@env{VERSION_CONTROL} environment variable (@pxref{Backup Names}).
+
+@node Imperfect
+@section Applying Imperfect Patches
+@cindex imperfect patch application
+
+@command{patch} tries to skip any leading text in the patch file,
+apply the diff, and then skip any trailing text.  Thus you can feed a
+mail message directly to @command{patch}, and it should work.  If the
+entire diff is indented by a constant amount of white space,
+@command{patch} automatically ignores the indentation.  If a context
+diff contains trailing carriage return on each line, @command{patch}
+automatically ignores the carriage return.  If a context diff has been
+encapsulated by prepending @w{@samp{- }} to lines beginning with @samp{-}
+as per @uref{ftp://ftp.isi.edu/in-notes/rfc934.txt, Internet RFC 934},
+@command{patch} automatically unencapsulates the input.
+
+However, certain other types of imperfect input require user
+intervention or testing.
+
+@menu
+* Changed White Space:: When tabs and spaces don't match exactly.
+* Reversed Patches::    Applying reversed patches correctly.
+* Inexact::             Helping @command{patch} find close matches.
+* Dry Runs::            Predicting what @command{patch} will do.
+@end menu
+
+@node Changed White Space
+@subsection Applying Patches with Changed White Space
+@cindex white space in patches
+
+Sometimes mailers, editors, or other programs change spaces into tabs,
+or vice versa.  If this happens to a patch file or an input file, the
+files might look the same, but @command{patch} will not be able to match
+them properly.  If this problem occurs, use the @option{-l} or
+@option{--ignore-white-space} option, which makes @command{patch} compare
+blank characters (i.e.@: spaces and tabs) loosely so that any nonempty
+sequence of blanks in the patch file matches any nonempty sequence of
+blanks in the input files.  Non-blank
+characters must still match exactly.  Each line of the context must
+still match a line in the input file.
+
+@node Reversed Patches
+@subsection Applying Reversed Patches
+@cindex reversed patches
+
+Sometimes people run @command{diff} with the new file first instead of
+second.  This creates a diff that is ``reversed''.  To apply such
+patches, give @command{patch} the @option{--reverse} (@option{-R}) option.
+@command{patch} then attempts to swap each hunk around before applying it.
+Rejects come out in the swapped format.
+
+Often @command{patch} can guess that the patch is reversed.  If the first
+hunk of a patch fails, @command{patch} reverses the hunk to see if it can
+apply it that way.  If it can, @command{patch} asks you if you want to have
+the @option{-R} option set; if it can't, @command{patch} continues to apply
+the patch normally.  This method cannot detect a reversed patch if it is
+a normal diff and the first command is an append (which should have been
+a delete) since appends always succeed, because a null context matches
+anywhere.  But most patches add or change lines rather than delete them,
+so most reversed normal diffs begin with a delete, which fails, and
+@command{patch} notices.
+
+If you apply a patch that you have already applied, @command{patch} thinks
+it is a reversed patch and offers to un-apply the patch.  This could be
+construed as a feature.  If you did this inadvertently and you don't
+want to un-apply the patch, just answer @samp{n} to this offer and to
+the subsequent ``apply anyway'' question---or type @kbd{C-c} to kill the
+@command{patch} process.
+
+@node Inexact
+@subsection Helping @command{patch} Find Inexact Matches
+@cindex inexact patches
+@cindex fuzz factor when patching
+
+For context diffs, and to a lesser extent normal diffs, @command{patch} can
+detect when the line numbers mentioned in the patch are incorrect, and
+it attempts to find the correct place to apply each hunk of the patch.
+As a first guess, it takes the line number mentioned in the hunk, plus
+or minus any offset used in applying the previous hunk.  If that is not
+the correct place, @command{patch} scans both forward and backward for a
+set of lines matching the context given in the hunk.
+
+First @command{patch} looks for a place where all lines of the context
+match.  If it cannot find such a place, and it is reading a context or
+unified diff, and the maximum fuzz factor is set to 1 or more, then
+@command{patch} makes another scan, ignoring the first and last line of
+context.  If that fails, and the maximum fuzz factor is set to 2 or
+more, it makes another scan, ignoring the first two and last two lines
+of context are ignored.  It continues similarly if the maximum fuzz
+factor is larger.
+
+The @option{--fuzz=@var{lines}} (@option{-F @var{lines}}) option sets the
+maximum fuzz factor to @var{lines}.  This option only applies to context
+and unified diffs; it ignores up to @var{lines} lines while looking for
+the place to install a hunk.  Note that a larger fuzz factor increases
+the odds of making a faulty patch.  The default fuzz factor is 2; there
+is no point to setting it to more than the number of lines of context
+in the diff, ordinarily 3.
+
+If @command{patch} cannot find a place to install a hunk of the patch, it
+writes the hunk out to a reject file (@pxref{Reject Names}, for information
+on how reject files are named).  It writes out rejected hunks in context
+format no matter what form the input patch is in.  If the input is a
+normal or @command{ed} diff, many of the contexts are simply null.  The
+line numbers on the hunks in the reject file may be different from those
+in the patch file: they show the approximate location where @command{patch}
+thinks the failed hunks belong in the new file rather than in the old
+one.
+
+If the @option{--verbose} option is given, then
+as it completes each hunk @command{patch} tells you whether the hunk
+succeeded or failed, and if it failed, on which line (in the new file)
+@command{patch} thinks the hunk should go.  If this is different from the
+line number specified in the diff, it tells you the offset.  A single
+large offset @emph{may} indicate that @command{patch} installed a hunk in
+the wrong place.  @command{patch} also tells you if it used a fuzz factor
+to make the match, in which case you should also be slightly suspicious.
+
+@command{patch} cannot tell if the line numbers are off in an @command{ed}
+script, and can only detect wrong line numbers in a normal diff when it
+finds a change or delete command.  It may have the same problem with a
+context diff using a fuzz factor equal to or greater than the number of
+lines of context shown in the diff (typically 3).  In these cases, you
+should probably look at a context diff between your original and patched
+input files to see if the changes make sense.  Compiling without errors
+is a pretty good indication that the patch worked, but not a guarantee.
+
+A patch against an empty file applies to a nonexistent file, and vice
+versa.  @xref{Creating and Removing}.
+
+@command{patch} usually produces the correct results, even when it must
+make many guesses.  However, the results are guaranteed only when
+the patch is applied to an exact copy of the file that the patch was
+generated from.
+
+@node Dry Runs
+@subsection Predicting what @command{patch} will do
+@cindex testing @command{patch}
+@cindex dry runs for @command{patch}
+
+It may not be obvious in advance what @command{patch} will do with a
+complicated or poorly formatted patch.  If you are concerned that the
+input might cause @command{patch} to modify the wrong files, you can
+use the @option{--dry-run} option, which causes @command{patch} to
+print the results of applying patches without actually changing any
+files.  You can then inspect the diagnostics generated by the dry run
+to see whether @command{patch} will modify the files that you expect.
+If the patch does not do what you want, you can modify the patch (or
+the other options to @command{patch}) and try another dry run.  Once
+you are satisfied with the proposed patch you can apply it by invoking
+@command{patch} as before, but this time without the
+@option{--dry-run} option.
+
+@node Creating and Removing
+@section Creating and Removing Files
+@cindex creating files
+@cindex empty files, removing
+@cindex removing empty files
+
+Sometimes when comparing two directories, a file may exist in one
+directory but not the other.  If you give @command{diff} the
+@option{--new-file} (@option{-N}) option, or if you supply an old or
+new file that is named @file{/dev/null} or is empty and is dated the
+Epoch (1970-01-01 00:00:00 UTC), @command{diff} outputs a patch that
+adds or deletes the contents of this file.  When given such a patch,
+@command{patch} normally creates a new file or removes the old file.
+However, when conforming to @acronym{POSIX} (@pxref{patch and POSIX}),
+@command{patch} does not remove the old file, but leaves it empty.
+The @option{--remove-empty-files} (@option{-E}) option causes
+@command{patch} to remove output files that are empty after applying a
+patch, even if the patch does not appear to be one that removed the
+file.
+
+If the patch appears to create a file that already exists,
+@command{patch} asks for confirmation before applying the patch.
+
+@node Patching Time Stamps
+@section Updating Time Stamps on Patched Files
+@cindex time stamps on patched files
+
+When @command{patch} updates a file, it normally sets the file's
+last-modified time stamp to the current time of day.  If you are using
+@command{patch} to track a software distribution, this can cause
+@command{make} to incorrectly conclude that a patched file is out of
+date.  For example, if @file{syntax.c} depends on @file{syntax.y}, and
+@command{patch} updates @file{syntax.c} and then @file{syntax.y}, then
+@file{syntax.c} will normally appear to be out of date with respect to
+@file{syntax.y} even though its contents are actually up to date.
+
+The @option{--set-utc} (@option{-Z}) option causes @command{patch} to
+set a patched file's modification and access times to the time stamps
+given in context diff headers.  If the context diff headers do not
+specify a time zone, they are assumed to use Coordinated Universal
+Time (@acronym{UTC}, often known as @acronym{GMT}).
+
+The @option{--set-time} (@option{-T}) option acts like @option{-Z} or
+@option{--set-utc}, except that it assumes that the context diff
+headers' time stamps use local time instead of @acronym{UTC}.  This option
+is not recommended, because patches using local time cannot easily be
+used by people in other time zones, and because local time stamps are
+ambiguous when local clocks move backwards during daylight-saving time
+adjustments.  If the context diff headers specify a time zone, this
+option is equivalent to @option{--set-utc} (@option{-Z}).
+
+@command{patch} normally refrains from setting a file's time stamps if
+the file's original last-modified time stamp does not match the time
+given in the diff header, of if the file's contents do not exactly
+match the patch.  However, if the @option{--force} (@option{-f})
+option is given, the file's time stamps are set regardless.
+
+Due to the limitations of the current @command{diff} format,
+@command{patch} cannot update the times of files whose contents have
+not changed.  Also, if you set file time stamps to values other than
+the current time of day, you should also remove (e.g., with @samp{make
+clean}) all files that depend on the patched files, so that later
+invocations of @command{make} do not get confused by the patched
+files' times.
+
+@node Multiple Patches
+@section Multiple Patches in a File
+@cindex multiple patches
+@cindex intuiting file names from patches
+
+If the patch file contains more than one patch, and if you do not
+specify an input file on the command line, @command{patch} tries to
+apply each patch as if they came from separate patch files.  This
+means that it determines the name of the file to patch for each patch,
+and that it examines the leading text before each patch for file names
+and prerequisite revision level (@pxref{Making Patches}, for more on
+that topic).
+
+@command{patch} uses the following rules to intuit a file name from
+the leading text before a patch.  First, @command{patch} takes an
+ordered list of candidate file names as follows:
+
+@itemize @bullet
+@item
+If the header is that of a context diff, @command{patch} takes the old
+and new file names in the header.  A name is ignored if it does not
+have enough slashes to satisfy the @option{-p@var{num}} or
+@option{--strip=@var{num}} option.  The name @file{/dev/null} is also
+ignored.
+
+@item
+If there is an @samp{Index:} line in the leading garbage and if either
+the old and new names are both absent or if @command{patch} is
+conforming to @acronym{POSIX}, @command{patch} takes the name in the
+@samp{Index:} line.
+
+@item
+For the purpose of the following rules, the candidate file names are
+considered to be in the order (old, new, index), regardless of the
+order that they appear in the header.
+@end itemize
+
+@noindent
+Then @command{patch} selects a file name from the candidate list as
+follows:
+
+@itemize @bullet
+@item
+If some of the named files exist, @command{patch} selects the first
+name if conforming to @acronym{POSIX}, and the best name otherwise.
+
+@item
+If @command{patch} is not ignoring @acronym{RCS}, ClearCase, and @acronym{SCCS}
+(@pxref{Revision Control}), and no named files exist but an @acronym{RCS},
+ClearCase, or @acronym{SCCS} master is found, @command{patch} selects the
+first named file with an @acronym{RCS}, ClearCase, or @acronym{SCCS} master.
+
+@item
+If no named files exist, no @acronym{RCS}, ClearCase, or @acronym{SCCS} master
+was found, some names are given, @command{patch} is not conforming to
+@acronym{POSIX}, and the patch appears to create a file, @command{patch}
+selects the best name requiring the creation of the fewest
+directories.
+
+@item
+If no file name results from the above heuristics, you are asked for
+the name of the file to patch, and @command{patch} selects that name.
+@end itemize
+
+To determine the @dfn{best} of a nonempty list of file names,
+@command{patch} first takes all the names with the fewest path name
+components; of those, it then takes all the names with the shortest
+basename; of those, it then takes all the shortest names; finally, it
+takes the first remaining name.
+
+@xref{patch and POSIX}, to see whether @command{patch} is conforming
+to @acronym{POSIX}.
+
+@node patch Directories
+@section Applying Patches in Other Directories
+@cindex directories and patch
+@cindex patching directories
+
+The @option{--directory=@var{directory}} (@option{-d @var{directory}})
+option to @command{patch} makes directory @var{directory} the current
+directory for interpreting both file names in the patch file, and file
+names given as arguments to other options (such as @option{-B} and
+@option{-o}).  For example, while in a mail reading program, you can patch
+a file in the @file{/usr/src/emacs} directory directly from a message
+containing the patch like this:
+
+@example
+| patch -d /usr/src/emacs
+@end example
+
+Sometimes the file names given in a patch contain leading directories,
+but you keep your files in a directory different from the one given in
+the patch.  In those cases, you can use the
+@option{--strip=@var{number}} (@option{-p@var{number}})
+option to set the file name strip count to @var{number}.  The strip
+count tells @command{patch} how many slashes, along with the directory
+names between them, to strip from the front of file names.  A sequence
+of one or more adjacent slashes is counted as a single slash.  By
+default, @command{patch} strips off all leading directories, leaving
+just the base file names.
+
+For example, suppose the file name in the patch file is
+@file{/gnu/src/emacs/etc/NEWS}.  Using @option{-p0} gives the
+entire file name unmodified, @option{-p1} gives
+@file{gnu/src/emacs/etc/NEWS} (no leading slash), @option{-p4} gives
+@file{etc/NEWS}, and not specifying @option{-p} at all gives @file{NEWS}.
+
+@command{patch} looks for each file (after any slashes have been stripped)
+in the current directory, or if you used the @option{-d @var{directory}}
+option, in that directory.
+
+@node Backups
+@section Backup Files
+@cindex backup file strategy
+
+Normally, @command{patch} creates a backup file if the patch does not
+exactly match the original input file, because in that case the
+original data might not be recovered if you undo the patch with
+@samp{patch -R} (@pxref{Reversed Patches}).  However, when conforming
+to @acronym{POSIX}, @command{patch} does not create backup files by
+default.  @xref{patch and POSIX}.
+
+The @option{--backup} (@option{-b}) option causes @command{patch} to
+make a backup file regardless of whether the patch matches the
+original input.  The @option{--backup-if-mismatch} option causes
+@command{patch} to create backup files for mismatches files; this is
+the default when not conforming to @acronym{POSIX}.  The
+@option{--no-backup-if-mismatch} option causes @command{patch} to not
+create backup files, even for mismatched patches; this is the default
+when conforming to @acronym{POSIX}.
+
+When backing up a file that does not exist, an empty, unreadable
+backup file is created as a placeholder to represent the nonexistent
+file.
+
+@node Backup Names
+@section Backup File Names
+@cindex backup file names
+
+Normally, @command{patch} renames an original input file into a backup
+file by appending to its name the extension @samp{.orig}, or @samp{~}
+if using @samp{.orig} would make the backup file name too
+long.@footnote{A coding error in @acronym{GNU} @command{patch} version
+2.5.4 causes it to always use @samp{~}, but this should be fixed in
+the next release.}  The @option{-z @var{backup-suffix}} or
+@option{--suffix=@var{backup-suffix}} option causes @command{patch} to
+use @var{backup-suffix} as the backup extension instead.
+
+@vindex SIMPLE_BACKUP_SUFFIX
+Alternately, you can specify the extension for backup files with the
+@env{SIMPLE_BACKUP_SUFFIX} environment variable, which the options
+override.
+
+@command{patch} can also create numbered backup files the way
+@acronym{GNU} Emacs does.  With this method, instead of having a
+single backup of each file, @command{patch} makes a new backup file
+name each time it patches a file.  For example, the backups of a file
+named @file{sink} would be called, successively, @file{sink.~1~},
+@file{sink.~2~}, @file{sink.~3~}, etc.
+
+@vindex PATCH_VERSION_CONTROL
+@vindex VERSION_CONTROL
+The @option{-V @var{backup-style}} or
+@option{--version-control=@var{backup-style}} option takes as an
+argument a method for creating backup file names.  You can alternately
+control the type of backups that @command{patch} makes with the
+@env{PATCH_VERSION_CONTROL} environment variable, which the
+@option{-V} option overrides.  If @env{PATCH_VERSION_CONTROL} is not
+set, the @env{VERSION_CONTROL} environment variable is used instead.
+Please note that these options and variables control backup file
+names; they do not affect the choice of revision control system
+(@pxref{Revision Control}).
+
+The values of these environment variables and the argument to the
+@option{-V} option are like the @acronym{GNU} Emacs @code{version-control}
+variable (@pxref{Backup Names, , , emacs, The @acronym{GNU} Emacs Manual},
+for more information on backup versions in Emacs).  They also
+recognize synonyms that are more descriptive.  The valid values are
+listed below; unique abbreviations are acceptable.
+
+@table @option
+@item t
+@itemx numbered
+Always make numbered backups.
+
+@item nil
+@itemx existing
+Make numbered backups of files that already have them, simple backups of
+the others.  This is the default.
+
+@item never
+@itemx simple
+Always make simple backups.
+@end table
+
+You can also tell @command{patch} to prepend a prefix, such as a
+directory name, to produce backup file names.  The
+@option{--prefix=@var{prefix}} (@option{-B @var{prefix}}) option makes backup
+files by prepending @var{prefix} to them.  The
+@option{--basename-prefix=@var{prefix}} (@option{-Y @var{prefix}}) prepends
+@var{prefix} to the last file name component of backup file names
+instead; for example, @option{-Y ~} causes the backup name for
+@file{dir/file.c} to be @file{dir/~file.c}.  If you use either of
+these prefix options, the suffix-based options are ignored.
+
+If you specify the output file with the @option{-o} option, that file is
+the one that is backed up, not the input file.
+
+Options that affect the names of backup files do not affect whether
+backups are made.  For example, if you specify the
+@option{--no-backup-if-mismatch} option, none of the options described
+in this section have any affect, because no backups are made.
+
+@node Reject Names
+@section Reject File Names
+@cindex reject file names
+
+The names for reject files (files containing patches that
+@command{patch} could not find a place to apply) are normally the name
+of the output file with @samp{.rej} appended (or @samp{#} if using
+@samp{.rej} would make the backup file name too long).
+
+Alternatively, you can tell @command{patch} to place all of the rejected
+patches in a single file.  The @option{-r @var{reject-file}} or
+@option{--reject-file=@var{reject-file}} option uses @var{reject-file} as
+the reject file name.
+
+@node patch Messages
+@section Messages and Questions from @command{patch}
+@cindex @command{patch} messages and questions
+@cindex diagnostics from @command{patch}
+@cindex messages from @command{patch}
+
+@command{patch} can produce a variety of messages, especially if it
+has trouble decoding its input.  In a few situations where it's not
+sure how to proceed, @command{patch} normally prompts you for more
+information from the keyboard.  There are options to produce more or
+fewer messages, to have it not ask for keyboard input, and to
+affect the way that file names are quoted in messages.
+
+@menu
+* More or Fewer Messages::    Controlling the verbosity of @command{patch}.
+* patch and Keyboard Input::  Inhibiting keyboard input.
+* patch Quoting Style::       Quoting file names in diagnostics.
+@end menu
+
+@command{patch} exits with status 0 if all hunks are applied successfully,
+1 if some hunks cannot be applied, and 2 if there is more serious trouble.
+When applying a set of patches in a loop, you should check the
+exit status, so you don't apply a later patch to a partially patched
+file.
+
+@node More or Fewer Messages
+@subsection Controlling the Verbosity of @command{patch}
+@cindex verbose messages from @command{patch}
+@cindex inhibit messages from @command{patch}
+
+You can cause @command{patch} to produce more messages by using the
+@option{--verbose} option.  For example, when you give this option,
+the message @samp{Hmm...} indicates that @command{patch} is reading text in
+the patch file, attempting to determine whether there is a patch in that
+text, and if so, what kind of patch it is.
+
+You can inhibit all terminal output from @command{patch}, unless an error
+occurs, by using the @option{-s}, @option{--quiet}, or @option{--silent}
+option.
+
+@node patch and Keyboard Input
+@subsection Inhibiting Keyboard Input
+@cindex keyboard input to @command{patch}
+
+There are two ways you can prevent @command{patch} from asking you any
+questions.  The @option{--force} (@option{-f}) option assumes that you know
+what you are doing.  It causes @command{patch} to do the following:
+
+@itemize @bullet
+@item
+Skip patches that do not contain file names in their headers.
+
+@item
+Patch files even though they have the wrong version for the
+@samp{Prereq:} line in the patch;
+
+@item
+Assume that patches are not reversed even if they look like they are.
+@end itemize
+
+@noindent
+The @option{--batch} (@option{-t}) option is similar to @option{-f}, in that
+it suppresses questions, but it makes somewhat different assumptions:
+
+@itemize @bullet
+@item
+Skip patches that do not contain file names in their headers
+(the same as @option{-f}).
+
+@item
+Skip patches for which the file has the wrong version for the
+@samp{Prereq:} line in the patch;
+
+@item
+Assume that patches are reversed if they look like they are.
+@end itemize
+
+@node patch Quoting Style
+@subsection @command{patch} Quoting Style
+@cindex quoting style
+
+When @command{patch} outputs a file name in a diagnostic message, it
+can format the name in any of several ways.  This can be useful to
+output file names unambiguously, even if they contain punctuation or
+special characters like newlines.  The
+@option{--quoting-style=@var{word}} option controls how names are
+output.  The @var{word} should be one of the following:
+
+@table @samp
+@item literal
+Output names as-is.
+@item shell
+Quote names for the shell if they contain shell metacharacters or would
+cause ambiguous output.
+@item shell-always
+Quote names for the shell, even if they would normally not require quoting.
+@item c
+Quote names as for a C language string.
+@item escape
+Quote as with @samp{c} except omit the surrounding double-quote
+characters.
+@c The following are not yet implemented in patch 2.5.4.
+@c @item clocale
+@c Quote as with @samp{c} except use quotation marks appropriate for the
+@c locale.
+@c @item locale
+@c @c Use @t instead of @samp to avoid duplicate quoting in some output styles.
+@c Like @samp{clocale}, but quote @t{'like this'} instead of @t{"like
+@c this"} in the default C locale.  This looks nicer on many displays.
+@end table
+
+@vindex QUOTING_STYLE
+You can specify the default value of the @option{--quoting-style}
+option with the environment variable @env{QUOTING_STYLE}.  If that
+environment variable is not set, the default value is @samp{shell},
+but this default may change in a future version of @command{patch}.
+
+@node patch and POSIX
+@section @command{patch} and the @acronym{POSIX} Standard
+@cindex @acronym{POSIX}
+
+@vindex POSIXLY_CORRECT
+If you specify the @option{--posix} option, or set the
+@env{POSIXLY_CORRECT} environment variable, @command{patch} conforms
+more strictly to the @acronym{POSIX} standard, as follows:
+
+@itemize @bullet
+@item
+Take the first existing file from the list (old, new, index)
+when intuiting file names from diff headers.  @xref{Multiple Patches}.
+
+@item
+Do not remove files that are removed by a diff.
+@xref{Creating and Removing}.
+
+@item
+Do not ask whether to get files from @acronym{RCS}, ClearCase, or
+@acronym{SCCS}.  @xref{Revision Control}.
+
+@item
+Require that all options precede the files in the command line.
+
+@item
+Do not backup files, even when there is a mismatch.  @xref{Backups}.
+
+@end itemize
+
+@node patch and Tradition
+@section @acronym{GNU} @command{patch} and Traditional @command{patch}
+@cindex traditional @command{patch}
+
+The current version of @acronym{GNU} @command{patch} normally follows the
+@acronym{POSIX} standard.  @xref{patch and POSIX}, for the few exceptions
+to this general rule.
+
+Unfortunately, @acronym{POSIX} redefined the behavior of @command{patch} in
+several important ways.  You should be aware of the following
+differences if you must interoperate with traditional @command{patch},
+or with @acronym{GNU} @command{patch} version 2.1 and earlier.
+
+@itemize @bullet
+@item
+In traditional @command{patch}, the @option{-p} option's operand was
+optional, and a bare @option{-p} was equivalent to @option{-p0}.  The
+@option{-p} option now requires an operand, and @option{-p@ 0} is now
+equivalent to @option{-p0}.  For maximum compatibility, use options
+like @option{-p0} and @option{-p1}.
+
+Also, traditional @command{patch} simply counted slashes when
+stripping path prefixes; @command{patch} now counts pathname
+components.  That is, a sequence of one or more adjacent slashes now
+counts as a single slash.  For maximum portability, avoid sending
+patches containing @file{//} in file names.
+
+@item
+In traditional @command{patch}, backups were enabled by default.  This
+behavior is now enabled with the @option{--backup} (@option{-b})
+option.
+
+Conversely, in @acronym{POSIX} @command{patch}, backups are never made,
+even when there is a mismatch.  In @acronym{GNU} @command{patch}, this
+behavior is enabled with the @option{--no-backup-if-mismatch} option,
+or by conforming to @acronym{POSIX}.
+
+The @option{-b@ @var{suffix}} option of traditional @command{patch} is
+equivalent to the @samp{-b -z@ @var{suffix}} options of @acronym{GNU}
+@command{patch}.
+
+@item
+Traditional @command{patch} used a complicated (and incompletely
+documented) method to intuit the name of the file to be patched from
+the patch header.  This method did not conform to @acronym{POSIX}, and had
+a few gotchas.  Now @command{patch} uses a different, equally
+complicated (but better documented) method that is optionally
+@acronym{POSIX}-conforming; we hope it has fewer gotchas.  The two methods
+are compatible if the file names in the context diff header and the
+@samp{Index:} line are all identical after prefix-stripping.  Your
+patch is normally compatible if each header's file names all contain
+the same number of slashes.
+
+@item
+When traditional @command{patch} asked the user a question, it sent
+the question to standard error and looked for an answer from the first
+file in the following list that was a terminal: standard error,
+standard output, @file{/dev/tty}, and standard input.  Now
+@command{patch} sends questions to standard output and gets answers
+from @file{/dev/tty}.  Defaults for some answers have been changed so
+that @command{patch} never goes into an infinite loop when using
+default answers.
+
+@item
+Traditional @command{patch} exited with a status value that counted
+the number of bad hunks, or with status 1 if there was real trouble.
+Now @command{patch} exits with status 1 if some hunks failed, or with
+2 if there was real trouble.
+
+@item
+Limit yourself to the following options when sending instructions
+meant to be executed by anyone running @acronym{GNU} @command{patch},
+traditional @command{patch}, or a @command{patch} that conforms to
+@acronym{POSIX}.  Spaces are significant in the following list, and
+operands are required.
+
+@example
+@option{-c}
+@option{-d @var{dir}}
+@option{-D @var{define}}
+@option{-e}
+@option{-l}
+@option{-n}
+@option{-N}
+@option{-o @var{outfile}}
+@option{-p@var{num}}
+@option{-R}
+@option{-r @var{rejectfile}}
+@end example
+
+@end itemize
+
+@node Making Patches
+@chapter Tips for Making and Using Patches
+
+Use some common sense when making and using patches.  For example,
+when sending bug fixes to a program's maintainer, send several small
+patches, one per independent subject, instead of one large,
+harder-to-digest patch that covers all the subjects.
+
+Here are some other things you should keep in mind if you are going to
+distribute patches for updating a software package.
+
+@menu
+* Tips for Patch Producers::    Advice for making patches.
+* Tips for Patch Consumers::    Advice for using patches.
+* Avoiding Common Mistakes::    Avoiding common mistakes when using @command{patch}.
+* Generating Smaller Patches::  How to generate smaller patches.
+@end menu
+
+@node Tips for Patch Producers
+@section Tips for Patch Producers
+@cindex patch producer tips
+
+To create a patch that changes an older version of a package into a
+newer version, first make a copy of the older and newer versions in
+adjacent subdirectories.  It is common to do that by unpacking
+@command{tar} archives of the two versions.
+
+To generate the patch, use the command @samp{diff -Naur @var{old}
+@var{new}} where @var{old} and @var{new} identify the old and new
+directories.  The names @var{old} and @var{new} should not contain any
+slashes.  The @option{-N} option lets the patch create and remove
+files; @option{-a} lets the patch update non-text files; @option{-u}
+generates useful time stamps and enough context; and @option{-r} lets
+the patch update subdirectories.  Here is an example command, using
+Bourne shell syntax:
+
+@example
+diff -Naur gcc-3.0.3 gcc-3.0.4
+@end example
+
+Tell your recipients how to apply the patches.  This should include
+which working directory to use, and which @command{patch} options to
+use; the option @samp{-p1} is recommended.  Test your procedure by
+pretending to be a recipient and applying your patches to a copy of
+the original files.
+
+@xref{Avoiding Common Mistakes}, for how to avoid common mistakes when
+generating a patch.
+
+@node Tips for Patch Consumers
+@section Tips for Patch Consumers
+@cindex patch consumer tips
+
+A patch producer should tell recipients how to apply the patches, so
+the first rule of thumb for a patch consumer is to follow the
+instructions supplied with the patch.
+
+@acronym{GNU} @command{diff} can analyze files with arbitrarily long lines
+and files that end in incomplete lines.  However, older versions of
+@command{patch} cannot patch such files.  If you are having trouble
+applying such patches, try upgrading to a recent version of @acronym{GNU}
+@command{patch}.
+
+@node Avoiding Common Mistakes
+@section Avoiding Common Mistakes
+@cindex common mistakes with patches
+@cindex patch, common mistakes
+
+When producing a patch for multiple files, apply @command{diff} to
+directories whose names do not have slashes.  This reduces confusion
+when the patch consumer specifies the @option{-p@var{number}} option,
+since this option can have surprising results when the old and new
+file names have different numbers of slashes.  For example, do not
+send a patch with a header that looks like this:
+
+@example
+diff -Naur v2.0.29/prog/README prog/README
+--- v2.0.29/prog/README	2002-03-10 23:30:39.942229878 -0800
++++ prog/README	2002-03-17 20:49:32.442260588 -0800
+@end example
+
+@noindent
+because the two file names have different numbers of slashes, and
+different versions of @command{patch} interpret the file names
+differently.  To avoid confusion, send output that looks like this
+instead:
+
+@example
+diff -Naur v2.0.29/prog/README v2.0.30/prog/README
+--- v2.0.29/prog/README	2002-03-10 23:30:39.942229878 -0800
++++ v2.0.30/prog/README	2002-03-17 20:49:32.442260588 -0800
+@end example
+
+Make sure you have specified the file names correctly, either in a
+context diff header or with an @samp{Index:} line.  Take care to not send out
+reversed patches, since these make people wonder whether they have
+already applied the patch.
+
+Avoid sending patches that compare backup file names like
+@file{README.orig} or @file{README~}, since this might confuse
+@command{patch} into patching a backup file instead of the real file.
+Instead, send patches that compare the same base file names in
+different directories, e.g.@: @file{old/README} and @file{new/README}.
+
+To save people from partially applying a patch before other patches that
+should have gone before it, you can make the first patch in the patch
+file update a file with a name like @file{patchlevel.h} or
+@file{version.c}, which contains a patch level or version number.  If
+the input file contains the wrong version number, @command{patch} will
+complain immediately.
+
+An even clearer way to prevent this problem is to put a @samp{Prereq:}
+line before the patch.  If the leading text in the patch file contains a
+line that starts with @samp{Prereq:}, @command{patch} takes the next word
+from that line (normally a version number) and checks whether the next
+input file contains that word, preceded and followed by either
+white space or a newline.  If not, @command{patch} prompts you for
+confirmation before proceeding.  This makes it difficult to accidentally
+apply patches in the wrong order.
+
+@node Generating Smaller Patches
+@section Generating Smaller Patches
+@cindex patches, shrinking
+
+The simplest way to generate a patch is to use @samp{diff -Naur}
+(@pxref{Tips for Patch Producers}), but you might be able to reduce
+the size of the patch by renaming or removing some files before making
+the patch.  If the older version of the package contains any files
+that the newer version does not, or if any files have been renamed
+between the two versions, make a list of @command{rm} and @command{mv}
+commands for the user to execute in the old version directory before
+applying the patch.  Then run those commands yourself in the scratch
+directory.
+
+If there are any files that you don't need to include in the patch
+because they can easily be rebuilt from other files (for example,
+@file{TAGS} and output from @command{yacc} and @command{makeinfo}),
+exclude them from the patch by giving @command{diff} the @option{-x
+@var{pattern}} option (@pxref{Comparing Directories}).  If you want
+your patch to modify a derived file because your recipients lack tools
+to build it, make sure that the patch for the derived file follows any
+patches for files that it depends on, so that the recipients' time
+stamps will not confuse @command{make}.
+
+Now you can create the patch using @samp{diff -Naur}.  Make sure to
+specify the scratch directory first and the newer directory second.
+
+Add to the top of the patch a note telling the user any @command{rm} and
+@command{mv} commands to run before applying the patch.  Then you can
+remove the scratch directory.
+
+You can also shrink the patch size by using fewer lines of context,
+but bear in mind that @command{patch} typically needs at least two
+lines for proper operation when patches do not exactly match the input
+files.
+
+@node Invoking cmp
+@chapter Invoking @command{cmp}
+@cindex invoking @command{cmp}
+@cindex @command{cmp} invocation
+
+The @command{cmp} command compares two files, and if they differ,
+tells the first byte and line number where they differ or reports
+that one file is a prefix of the other.  Bytes and
+lines are numbered starting with 1.  The arguments of @command{cmp}
+are as follows:
+
+@example
+cmp @var{options}@dots{} @var{from-file} @r{[}@var{to-file} @r{[}@var{from-skip} @r{[}@var{to-skip}@r{]}@r{]}@r{]}
+@end example
+
+The file name @file{-} is always the standard input.  @command{cmp}
+also uses the standard input if one file name is omitted.  The
+@var{from-skip} and @var{to-skip} operands specify how many bytes to
+ignore at the start of each file; they are equivalent to the
+@option{--ignore-initial=@var{from-skip}:@var{to-skip}} option.
+
+By default, @command{cmp} outputs nothing if the two files have the
+same contents.  If one file is a prefix of the other, @command{cmp}
+prints to standard error a message of the following form:
+
+@example
+cmp: EOF on @var{shorter-file}
+@end example
+
+Otherwise, @command{cmp} prints to standard output a message of the
+following form:
+
+@example
+@var{from-file} @var{to-file} differ: char @var{byte-number}, line @var{line-number}
+@end example
+
+The message formats can differ outside the @acronym{POSIX} locale.
+Also, @acronym{POSIX} allows the @acronym{EOF} message to be followed
+by a blank and some additional information.
+
+An exit status of 0 means no differences were found, 1 means some
+differences were found, and 2 means trouble.
+
+@menu
+* cmp Options:: Summary of options to @command{cmp}.
+@end menu
+
+@node cmp Options
+@section Options to @command{cmp}
+@cindex @command{cmp} options
+@cindex options for @command{cmp}
+
+Below is a summary of all of the options that @acronym{GNU}
+@command{cmp} accepts.  Most options have two equivalent names, one of
+which is a single letter preceded by @samp{-}, and the other of which
+is a long name preceded by @samp{--}.  Multiple single letter options
+(unless they take an argument) can be combined into a single command
+line word: @option{-bl} is equivalent to @option{-b -l}.
+
+@table @option
+@item -b
+@itemx --print-bytes
+Print the differing bytes.  Display control bytes as a
+@samp{^} followed by a letter of the alphabet and precede bytes
+that have the high bit set with @samp{M-} (which stands for ``meta'').
+
+@item --help
+Output a summary of usage and then exit.
+
+@item -i @var{skip}
+@itemx --ignore-initial=@var{skip}
+Ignore any differences in the first @var{skip} bytes of the input
+files.  Treat files with fewer than @var{skip} bytes as if they are
+empty.  If @var{skip} is of the form
+@option{@var{from-skip}:@var{to-skip}}, skip the first @var{from-skip}
+bytes of the first input file and the first @var{to-skip} bytes of the
+second.
+
+@item -l
+@itemx --verbose
+Output the (decimal) byte numbers and (octal) values of all differing bytes,
+instead of the default standard output.
+Also, output the @acronym{EOF} message if one file is shorter than the other.
+
+@item -n @var{count}
+@itemx --bytes=@var{count}
+Compare at most @var{count} input bytes.
+
+@item -s
+@itemx --quiet
+@itemx --silent
+Do not print anything; only return an exit status indicating whether
+the files differ.
+
+@item -v
+@itemx --version
+Output version information and then exit.
+@end table
+
+In the above table, operands that are byte counts are normally
+decimal, but may be preceded by @samp{0} for octal and @samp{0x} for
+hexadecimal.
+
+A byte count can be followed by a suffix to specify a multiple of that
+count; in this case an omitted integer is understood to be 1.  A bare
+size letter, or one followed by @samp{iB}, specifies a multiple using
+powers of 1024.  A size letter followed by @samp{B} specifies powers
+of 1000 instead.  For example, @option{-n 4M} and @option{-n 4MiB} are
+equivalent to @option{-n 4194304}, whereas @option{-n 4MB} is
+equivalent to @option{-n 4000000}.  This notation is upward compatible
+with the @uref{http://www.bipm.fr/enus/3_SI/si-prefixes.html, SI
+prefixes} for decimal multiples and with the
+@uref{http://physics.nist.gov/cuu/Units/binary.html, IEC 60027-2
+prefixes for binary multiples}.
+
+The following suffixes are defined.  Large sizes like @code{1Y} may be
+rejected by your computer due to limitations of its arithmetic.
+
+@table @samp
+@item kB
+@cindex kilobyte, definition of
+kilobyte: @math{10^3 = 1000}.
+@item k
+@itemx K
+@itemx KiB
+@cindex kibibyte, definition of
+kibibyte: @math{2^10 = 1024}.  @samp{K} is special: the SI prefix is
+@samp{k} and the IEC 60027-2 prefix is @samp{Ki}, but tradition and
+@acronym{POSIX} use @samp{k} to mean @samp{KiB}.
+@item MB
+@cindex megabyte, definition of
+megabyte: @math{10^6 = 1,000,000}.
+@item M
+@itemx MiB
+@cindex mebibyte, definition of
+mebibyte: @math{2^20 = 1,048,576}.
+@item GB
+@cindex gigabyte, definition of
+gigabyte: @math{10^9 = 1,000,000,000}.
+@item G
+@itemx GiB
+@cindex gibibyte, definition of
+gibibyte: @math{2^30 = 1,073,741,824}.
+@item TB
+@cindex terabyte, definition of
+terabyte:  @math{10^12 = 1,000,000,000,000}.
+@item T
+@itemx TiB
+@cindex tebibyte, definition of
+tebibyte: @math{2^40 = 1,099,511,627,776}.
+@item PB
+@cindex petabyte, definition of
+petabyte: @math{10^15 = 1,000,000,000,000,000}.
+@item P
+@itemx PiB
+@cindex pebibyte, definition of
+pebibyte: @math{2^50 = 1,125,899,906,842,624}.
+@item EB
+@cindex exabyte, definition of
+exabyte: @math{10^18 = 1,000,000,000,000,000,000}.
+@item E
+@itemx EiB
+@cindex exbibyte, definition of
+exbibyte: @math{2^60 = 1,152,921,504,606,846,976}.
+@item ZB
+@cindex zettabyte, definition of
+zettabyte: @math{10^21 = 1,000,000,000,000,000,000,000}
+@item Z
+@itemx ZiB
+@math{2^70 = 1,180,591,620,717,411,303,424}.
+(@samp{Zi} is a GNU extension to IEC 60027-2.)
+@item YB
+@cindex yottabyte, definition of
+yottabyte: @math{10^24 = 1,000,000,000,000,000,000,000,000}.
+@item Y
+@itemx YiB
+@math{2^80 = 1,208,925,819,614,629,174,706,176}.
+(@samp{Yi} is a GNU extension to IEC 60027-2.)
+@end table
+
+@node Invoking diff
+@chapter Invoking @command{diff}
+@cindex invoking @command{diff}
+@cindex @command{diff} invocation
+
+The format for running the @command{diff} command is:
+
+@example
+diff @var{options}@dots{} @var{files}@dots{}
+@end example
+
+In the simplest case, two file names @var{from-file} and
+@var{to-file} are given, and @command{diff} compares the contents of
+@var{from-file} and @var{to-file}.  A file name of @file{-} stands for
+text read from the standard input.  As a special case, @samp{diff - -}
+compares a copy of standard input to itself.
+
+If one file is a directory and the other is not, @command{diff} compares
+the file in the directory whose name is that of the non-directory.
+The non-directory file must not be @file{-}.
+
+If two file names are given and both are directories,
+@command{diff} compares corresponding files in both directories, in
+alphabetical order; this comparison is not recursive unless the
+@option{--recursive} (@option{-r}) option is given.  @command{diff} never
+compares the actual contents of a directory as if it were a file.  The
+file that is fully specified may not be standard input, because standard
+input is nameless and the notion of ``file with the same name'' does not
+apply.
+
+If the @option{--from-file=@var{file}} option is given, the number of
+file names is arbitrary, and @var{file} is compared to each named file.
+Similarly, if the @option{--to-file=@var{file}} option is given, each
+named file is compared to @var{file}.
+
+@command{diff} options begin with @samp{-}, so normally file names
+may not begin with @samp{-}.  However, @option{--} as an
+argument by itself treats the remaining arguments as file names even if
+they begin with @samp{-}.
+
+An exit status of 0 means no differences were found, 1 means some
+differences were found, and 2 means trouble.  Normally, differing
+binary files count as trouble, but this can be altered by using the
+@option{--text} (@option{-a}) option, or the @option{-q} or
+@option{--brief} option.
+
+@menu
+* diff Options:: Summary of options to @command{diff}.
+@end menu
+
+@node diff Options
+@section Options to @command{diff}
+@cindex @command{diff} options
+@cindex options for @command{diff}
+
+Below is a summary of all of the options that @acronym{GNU}
+@command{diff} accepts.  Most options have two equivalent names, one
+of which is a single letter preceded by @samp{-}, and the other of
+which is a long name preceded by @samp{--}.  Multiple single letter
+options (unless they take an argument) can be combined into a single
+command line word: @option{-ac} is equivalent to @option{-a -c}.  Long
+named options can be abbreviated to any unique prefix of their name.
+Brackets ([ and ]) indicate that an option takes an optional argument.
+
+@table @option
+@item -a
+@itemx --text
+Treat all files as text and compare them line-by-line, even if they
+do not seem to be text.  @xref{Binary}.
+
+@item -b
+@itemx --ignore-space-change
+Ignore changes in amount of white space.  @xref{White Space}.
+
+@item -B
+@itemx --ignore-blank-lines
+Ignore changes that just insert or delete blank lines.  @xref{Blank
+Lines}.
+
+@item --binary
+Read and write data in binary mode.  @xref{Binary}.
+
+@item -c
+Use the context output format, showing three lines of context.
+@xref{Context Format}.
+
+@item -C @var{lines}
+@itemx --context@r{[}=@var{lines}@r{]}
+Use the context output format, showing @var{lines} (an integer) lines of
+context, or three if @var{lines} is not given.  @xref{Context Format}.
+For proper operation, @command{patch} typically needs at least two lines of
+context.
+
+For compatibility @command{diff} also supports an obsolete option
+syntax @option{-@var{lines}} that has effect when combined with
+@option{-c}, @option{-p}, or @option{-u}.  New scripts should use
+@option{-U @var{lines}} (@option{-C @var{lines}}) instead.
+
+@item --changed-group-format=@var{format}
+Use @var{format} to output a line group containing differing lines from
+both files in if-then-else format.  @xref{Line Group Formats}.
+
+@item -d
+@itemx --minimal
+Change the algorithm perhaps find a smaller set of changes.  This makes
+@command{diff} slower (sometimes much slower).  @xref{diff Performance}.
+
+@item -D @var{name}
+@itemx --ifdef=@var{name}
+Make merged @samp{#ifdef} format output, conditional on the preprocessor
+macro @var{name}.  @xref{If-then-else}.
+
+@item -e
+@itemx --ed
+Make output that is a valid @command{ed} script.  @xref{ed Scripts}.
+
+@item -E
+@itemx --ignore-tab-expansion
+Ignore changes due to tab expansion.
+@xref{White Space}.
+
+@item -f
+@itemx --forward-ed
+Make output that looks vaguely like an @command{ed} script but has changes
+in the order they appear in the file.  @xref{Forward ed}.
+
+@item -F @var{regexp}
+@itemx --show-function-line=@var{regexp}
+In context and unified format, for each hunk of differences, show some
+of the last preceding line that matches @var{regexp}.  @xref{Specified
+Headings}.
+
+@item --from-file=@var{file}
+Compare @var{file} to each operand; @var{file} may be a directory.
+
+@item --help
+Output a summary of usage and then exit.
+
+@item --horizon-lines=@var{lines}
+Do not discard the last @var{lines} lines of the common prefix
+and the first @var{lines} lines of the common suffix.
+@xref{diff Performance}.
+
+@item -i
+@itemx --ignore-case
+Ignore changes in case; consider upper- and lower-case letters
+equivalent.  @xref{Case Folding}.
+
+@item -I @var{regexp}
+@itemx --ignore-matching-lines=@var{regexp}
+Ignore changes that just insert or delete lines that match @var{regexp}.
+@xref{Specified Lines}.
+
+@item --ignore-file-name-case
+Ignore case when comparing file names.  For example, recursive
+comparison of @file{d} to @file{e} might compare the contents of
+@file{d/Init} and @file{e/inIt}.  At the top level, @samp{diff d inIt}
+might compare the contents of @file{d/Init} and @file{inIt}.
+@xref{Comparing Directories}.
+
+@item -l
+@itemx --paginate
+Pass the output through @command{pr} to paginate it.  @xref{Pagination}.
+
+@item -L @var{label}
+@itemx --label=@var{label}
+Use @var{label} instead of the file name in the context format
+(@pxref{Context Format}) and unified format (@pxref{Unified Format})
+headers.  @xref{RCS}.
+
+@item --left-column
+Print only the left column of two common lines in side by side format.
+@xref{Side by Side Format}.
+
+@item --line-format=@var{format}
+Use @var{format} to output all input lines in if-then-else format.
+@xref{Line Formats}.
+
+@item -n
+@itemx --rcs
+Output @acronym{RCS}-format diffs; like @option{-f} except that each command
+specifies the number of lines affected.  @xref{RCS}.
+
+@item -N
+@itemx --new-file
+In directory comparison, if a file is found in only one directory,
+treat it as present but empty in the other directory.  @xref{Comparing
+Directories}.
+
+@item --new-group-format=@var{format}
+Use @var{format} to output a group of lines taken from just the second
+file in if-then-else format.  @xref{Line Group Formats}.
+
+@item --new-line-format=@var{format}
+Use @var{format} to output a line taken from just the second file in
+if-then-else format.  @xref{Line Formats}.
+
+@item --no-dereference
+Act on symbolic links themselves instead of what they point to.
+
+@item --old-group-format=@var{format}
+Use @var{format} to output a group of lines taken from just the first
+file in if-then-else format.  @xref{Line Group Formats}.
+
+@item --old-line-format=@var{format}
+Use @var{format} to output a line taken from just the first file in
+if-then-else format.  @xref{Line Formats}.
+
+@item -p
+@itemx --show-c-function
+Show which C function each change is in.  @xref{C Function Headings}.
+
+@item -q
+@itemx --brief
+Report only whether the files differ, not the details of the
+differences.  @xref{Brief}.
+
+@item -r
+@itemx --recursive
+When comparing directories, recursively compare any subdirectories
+found.  @xref{Comparing Directories}.
+
+@item -s
+@itemx --report-identical-files
+Report when two files are the same.  @xref{Comparing Directories}.
+
+@item -S @var{file}
+@itemx --starting-file=@var{file}
+When comparing directories, start with the file @var{file}.  This is
+used for resuming an aborted comparison.  @xref{Comparing Directories}.
+
+@item --speed-large-files
+Use heuristics to speed handling of large files that have numerous
+scattered small changes.  @xref{diff Performance}.
+
+@item --strip-trailing-cr
+Strip any trailing carriage return at the end of an input line.
+@xref{Binary}.
+
+@item --suppress-common-lines
+Do not print common lines in side by side format.
+@xref{Side by Side Format}.
+
+@item -t
+@itemx --expand-tabs
+Expand tabs to spaces in the output, to preserve the alignment of tabs
+in the input files.  @xref{Tabs}.
+
+@item -T
+@itemx --initial-tab
+Output a tab rather than a space before the text of a line in normal or
+context format.  This causes the alignment of tabs in the line to look
+normal.  @xref{Tabs}.
+
+@item --tabsize=@var{columns}
+Assume that tab stops are set every @var{columns} (default 8) print
+columns.  @xref{Tabs}.
+
+@item --suppress-blank-empty
+Suppress any blanks before newlines when printing the representation
+of an empty line, when outputting normal, context, or unified format.
+@xref{Trailing Blanks}.
+
+@item --to-file=@var{file}
+Compare each operand to @var{file}; @var{file} may be a directory.
+
+@item -u
+Use the unified output format, showing three lines of context.
+@xref{Unified Format}.
+
+@item --unchanged-group-format=@var{format}
+Use @var{format} to output a group of common lines taken from both files
+in if-then-else format.  @xref{Line Group Formats}.
+
+@item --unchanged-line-format=@var{format}
+Use @var{format} to output a line common to both files in if-then-else
+format.  @xref{Line Formats}.
+
+@item --unidirectional-new-file
+When comparing directories, if a file appears only in the second
+directory of the two, treat it as present but empty in the other.
+@xref{Comparing Directories}.
+
+@item -U @var{lines}
+@itemx --unified@r{[}=@var{lines}@r{]}
+Use the unified output format, showing @var{lines} (an integer) lines of
+context, or three if @var{lines} is not given.  @xref{Unified Format}.
+For proper operation, @command{patch} typically needs at least two lines of
+context.
+
+On older systems, @command{diff} supports an obsolete option
+@option{-@var{lines}} that has effect when combined with @option{-u}.
+@acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance}) does not allow
+this; use @option{-U @var{lines}} instead.
+
+@item -v
+@itemx --version
+Output version information and then exit.
+
+@item -w
+@itemx --ignore-all-space
+Ignore white space when comparing lines.  @xref{White Space}.
+
+@item -W @var{columns}
+@itemx --width=@var{columns}
+Output at most @var{columns} (default 130) print columns per line in
+side by side format.  @xref{Side by Side Format}.
+
+@item -x @var{pattern}
+@itemx --exclude=@var{pattern}
+When comparing directories, ignore files and subdirectories whose basenames
+match @var{pattern}.  @xref{Comparing Directories}.
+
+@item -X @var{file}
+@itemx --exclude-from=@var{file}
+When comparing directories, ignore files and subdirectories whose basenames
+match any pattern contained in @var{file}.  @xref{Comparing Directories}.
+
+@item -y
+@itemx --side-by-side
+Use the side by side output format.  @xref{Side by Side Format}.
+
+@item -Z
+@itemx --ignore-trailing-space
+Ignore white space at line end.  @xref{White Space}.
+@end table
+
+@node Invoking diff3
+@chapter Invoking @command{diff3}
+@cindex invoking @command{diff3}
+@cindex @command{diff3} invocation
+
+The @command{diff3} command compares three files and outputs descriptions
+of their differences.  Its arguments are as follows:
+
+@example
+diff3 @var{options}@dots{} @var{mine} @var{older} @var{yours}
+@end example
+
+The files to compare are @var{mine}, @var{older}, and @var{yours}.
+At most one of these three file names may be @file{-},
+which tells @command{diff3} to read the standard input for that file.
+
+An exit status of 0 means @command{diff3} was successful, 1 means some
+conflicts were found, and 2 means trouble.
+
+@menu
+* diff3 Options:: Summary of options to @command{diff3}.
+@end menu
+
+@node diff3 Options
+@section Options to @command{diff3}
+@cindex @command{diff3} options
+@cindex options for @command{diff3}
+
+Below is a summary of all of the options that @acronym{GNU} @command{diff3}
+accepts.  Multiple single letter options (unless they take an argument)
+can be combined into a single command line argument.
+
+@table @option
+@item -a
+@itemx --text
+Treat all files as text and compare them line-by-line, even if they
+do not appear to be text.  @xref{Binary}.
+
+@item -A
+@itemx --show-all
+Incorporate all unmerged changes from @var{older} to @var{yours} into
+@var{mine}, surrounding conflicts with bracket lines.
+@xref{Marking Conflicts}.
+
+@item --diff-program=@var{program}
+Use the compatible comparison program @var{program} to compare files
+instead of @command{diff}.
+
+@item -e
+@itemx --ed
+Generate an @command{ed} script that incorporates all the changes from
+@var{older} to @var{yours} into @var{mine}.  @xref{Which Changes}.
+
+@item -E
+@itemx --show-overlap
+Like @option{-e}, except bracket lines from overlapping changes' first
+and third files.
+@xref{Marking Conflicts}.
+With @option{-E}, an overlapping change looks like this:
+
+@example
+<<<<<<< @var{mine}
+@r{lines from @var{mine}}
+=======
+@r{lines from @var{yours}}
+>>>>>>> @var{yours}
+@end example
+
+@item --help
+Output a summary of usage and then exit.
+
+@item -i
+Generate @samp{w} and @samp{q} commands at the end of the @command{ed}
+script for System V compatibility.  This option must be combined with
+one of the @option{-AeExX3} options, and may not be combined with @option{-m}.
+@xref{Saving the Changed File}.
+
+@item --label=@var{label}
+Use the label @var{label} for the brackets output by the @option{-A},
+@option{-E} and @option{-X} options.  This option may be given up to three
+times, one for each input file.  The default labels are the names of
+the input files.  Thus @samp{diff3 --label X --label Y --label Z -m A
+B C} acts like
+@samp{diff3 -m A B C}, except that the output looks like it came from
+files named @samp{X}, @samp{Y} and @samp{Z} rather than from files
+named @samp{A}, @samp{B} and @samp{C}.  @xref{Marking Conflicts}.
+
+@item -m
+@itemx --merge
+Apply the edit script to the first file and send the result to standard
+output.  Unlike piping the output from @command{diff3} to @command{ed}, this
+works even for binary files and incomplete lines.  @option{-A} is assumed
+if no edit script option is specified.  @xref{Bypassing ed}.
+
+@item --strip-trailing-cr
+Strip any trailing carriage return at the end of an input line.
+@xref{Binary}.
+
+@item -T
+@itemx --initial-tab
+Output a tab rather than two spaces before the text of a line in normal format.
+This causes the alignment of tabs in the line to look normal.  @xref{Tabs}.
+
+@item -v
+@itemx --version
+Output version information and then exit.
+
+@item -x
+@itemx --overlap-only
+Like @option{-e}, except output only the overlapping changes.
+@xref{Which Changes}.
+
+@item -X
+Like @option{-E}, except output only the overlapping changes.
+In other words, like @option{-x}, except bracket changes as in @option{-E}.
+@xref{Marking Conflicts}.
+
+@item -3
+@itemx --easy-only
+Like @option{-e}, except output only the nonoverlapping changes.
+@xref{Which Changes}.
+@end table
+
+@node Invoking patch
+@chapter Invoking @command{patch}
+@cindex invoking @command{patch}
+@cindex @command{patch} invocation
+
+Normally @command{patch} is invoked like this:
+
+@example
+patch <@var{patchfile}
+@end example
+
+The full format for invoking @command{patch} is:
+
+@example
+patch @var{options}@dots{} @r{[}@var{origfile} @r{[}@var{patchfile}@r{]}@r{]}
+@end example
+
+You can also specify where to read the patch from with the @option{-i
+@var{patchfile}} or @option{--input=@var{patchfile}} option.
+If you do not specify @var{patchfile}, or if @var{patchfile} is
+@file{-}, @command{patch} reads the patch (that is, the @command{diff} output)
+from the standard input.
+
+If you do not specify an input file on the command line, @command{patch}
+tries to intuit from the @dfn{leading text} (any text in the patch
+that comes before the @command{diff} output) which file to edit.
+@xref{Multiple Patches}.
+
+By default, @command{patch} replaces the original input file with the
+patched version, possibly after renaming the original file into a
+backup file (@pxref{Backup Names}, for a description of how
+@command{patch} names backup files).  You can also specify where to
+put the output with the @option{-o @var{file}} or
+@option{--output=@var{file}} option; however, do not use this option
+if @var{file} is one of the input files.
+
+@menu
+* patch Options::     Summary table of options to @command{patch}.
+@end menu
+
+@node patch Options
+@section Options to @command{patch}
+@cindex @command{patch} options
+@cindex options for @command{patch}
+
+Here is a summary of all of the options that @acronym{GNU} @command{patch}
+accepts.  @xref{patch and Tradition}, for which of these options are
+safe to use in older versions of @command{patch}.
+
+Multiple single-letter options that do not take an argument can be
+combined into a single command line argument with only one dash.
+
+@table @option
+@item -b
+@itemx --backup
+Back up the original contents of each file, even if backups would
+normally not be made.  @xref{Backups}.
+
+@item -B @var{prefix}
+@itemx --prefix=@var{prefix}
+Prepend @var{prefix} to backup file names.  @xref{Backup Names}.
+
+@item --backup-if-mismatch
+Back up the original contents of each file if the patch does not
+exactly match the file.  This is the default behavior when not
+conforming to @acronym{POSIX}.  @xref{Backups}.
+
+@item --binary
+Read and write all files in binary mode, except for standard output
+and @file{/dev/tty}.  This option has no effect on
+@acronym{POSIX}-conforming systems like @acronym{GNU}/Linux.  On systems where
+this option makes a difference, the patch should be generated by
+@samp{diff -a --binary}.  @xref{Binary}.
+
+@item -c
+@itemx --context
+Interpret the patch file as a context diff.  @xref{patch Input}.
+
+@item -d @var{directory}
+@itemx --directory=@var{directory}
+Make directory @var{directory} the current directory for interpreting
+both file names in the patch file, and file names given as arguments to
+other options.  @xref{patch Directories}.
+
+@item -D @var{name}
+@itemx --ifdef=@var{name}
+Make merged if-then-else output using @var{name}.  @xref{If-then-else}.
+
+@item --dry-run
+Print the results of applying the patches without actually changing
+any files.  @xref{Dry Runs}.
+
+@item -e
+@itemx --ed
+Interpret the patch file as an @command{ed} script.  @xref{patch Input}.
+
+@item -E
+@itemx --remove-empty-files
+Remove output files that are empty after the patches have been applied.
+@xref{Creating and Removing}.
+
+@item -f
+@itemx --force
+Assume that the user knows exactly what he or she is doing, and do not
+ask any questions.  @xref{patch Messages}.
+
+@item -F @var{lines}
+@itemx --fuzz=@var{lines}
+Set the maximum fuzz factor to @var{lines}.  @xref{Inexact}.
+
+@item -g @var{num}
+@itemx --get=@var{num}
+If @var{num} is positive, get input files from a revision control
+system as necessary; if zero, do not get the files; if negative, ask
+the user whether to get the files.  @xref{Revision Control}.
+
+@item --help
+Output a summary of usage and then exit.
+
+@item -i @var{patchfile}
+@itemx --input=@var{patchfile}
+Read the patch from @var{patchfile} rather than from standard input.
+@xref{patch Options}.
+
+@item -l
+@itemx --ignore-white-space
+Let any sequence of blanks (spaces or tabs) in the patch file match
+any sequence of blanks in the input file.  @xref{Changed White Space}.
+
+@item -n
+@itemx --normal
+Interpret the patch file as a normal diff.  @xref{patch Input}.
+
+@item -N
+@itemx --forward
+Ignore patches that @command{patch} thinks are reversed or already applied.
+See also @option{-R}.  @xref{Reversed Patches}.
+
+@item --no-backup-if-mismatch
+Do not back up the original contents of files.  This is the default
+behavior when conforming to @acronym{POSIX}.  @xref{Backups}.
+
+@item -o @var{file}
+@itemx --output=@var{file}
+Use @var{file} as the output file name.  @xref{patch Options}.
+
+@item -p@var{number}
+@itemx --strip=@var{number}
+Set the file name strip count to @var{number}.  @xref{patch Directories}.
+
+@item --posix
+Conform to @acronym{POSIX}, as if the @env{POSIXLY_CORRECT} environment
+variable had been set.  @xref{patch and POSIX}.
+
+@item --quoting-style=@var{word}
+Use style @var{word} to quote names in diagnostics, as if the
+@env{QUOTING_STYLE} environment variable had been set to @var{word}.
+@xref{patch Quoting Style}.
+
+@item -r @var{reject-file}
+@itemx --reject-file=@var{reject-file}
+Use @var{reject-file} as the reject file name.  @xref{Reject Names}.
+
+@item -R
+@itemx --reverse
+Assume that this patch was created with the old and new files swapped.
+@xref{Reversed Patches}.
+
+@item -s
+@itemx --quiet
+@itemx --silent
+Work silently unless an error occurs.  @xref{patch Messages}.
+
+@item -t
+@itemx --batch
+Do not ask any questions.  @xref{patch Messages}.
+
+@item -T
+@itemx --set-time
+Set the modification and access times of patched files from time
+stamps given in context diff headers, assuming that the context diff
+headers use local time.  @xref{Patching Time Stamps}.
+
+@item -u
+@itemx --unified
+Interpret the patch file as a unified diff.  @xref{patch Input}.
+
+@item -v
+@itemx --version
+Output version information and then exit.
+
+@item -V @var{backup-style}
+@itemx --version=control=@var{backup-style}
+Select the naming convention for backup file names.  @xref{Backup Names}.
+
+@item --verbose
+Print more diagnostics than usual.  @xref{patch Messages}.
+
+@item -x @var{number}
+@itemx --debug=@var{number}
+Set internal debugging flags.  Of interest only to @command{patch}
+patchers.
+
+@item -Y @var{prefix}
+@itemx --basename-prefix=@var{prefix}
+Prepend @var{prefix} to base names of backup files.  @xref{Backup Names}.
+
+@item -z @var{suffix}
+@itemx --suffix=@var{suffix}
+Use @var{suffix} as the backup extension instead of @samp{.orig} or
+@samp{~}.  @xref{Backup Names}.
+
+@item -Z
+@itemx --set-utc
+Set the modification and access times of patched files from time
+stamps given in context diff headers, assuming that the context diff
+headers use @acronym{UTC}.  @xref{Patching Time Stamps}.
+
+@end table
+
+@node Invoking sdiff
+@chapter Invoking @command{sdiff}
+@cindex invoking @command{sdiff}
+@cindex @command{sdiff} invocation
+
+The @command{sdiff} command merges two files and interactively outputs the
+results.  Its arguments are as follows:
+
+@example
+sdiff -o @var{outfile} @var{options}@dots{} @var{from-file} @var{to-file}
+@end example
+
+This merges @var{from-file} with @var{to-file}, with output to @var{outfile}.
+If @var{from-file} is a directory and @var{to-file} is not, @command{sdiff}
+compares the file in @var{from-file} whose file name is that of @var{to-file},
+and vice versa.  @var{from-file} and @var{to-file} may not both be
+directories.
+
+@command{sdiff} options begin with @samp{-}, so normally @var{from-file}
+and @var{to-file} may not begin with @samp{-}.  However, @option{--} as an
+argument by itself treats the remaining arguments as file names even if
+they begin with @samp{-}.  You may not use @file{-} as an input file.
+
+@command{sdiff} without @option{--output} (@option{-o}) produces a
+side-by-side difference.  This usage is obsolete; use the
+@option{--side-by-side} (@option{-y}) option of @command{diff} instead.
+
+An exit status of 0 means no differences were found, 1 means some
+differences were found, and 2 means trouble.
+
+@menu
+* sdiff Options:: Summary of options to @command{diff}.
+@end menu
+
+@node sdiff Options
+@section Options to @command{sdiff}
+@cindex @command{sdiff} options
+@cindex options for @command{sdiff}
+
+Below is a summary of all of the options that @acronym{GNU}
+@command{sdiff} accepts.  Each option has two equivalent names, one of
+which is a single letter preceded by @samp{-}, and the other of which
+is a long name preceded by @samp{--}.  Multiple single letter options
+(unless they take an argument) can be combined into a single command
+line argument.  Long named options can be abbreviated to any unique
+prefix of their name.
+
+@table @option
+@item -a
+@itemx --text
+Treat all files as text and compare them line-by-line, even if they
+do not appear to be text.  @xref{Binary}.
+
+@item -b
+@itemx --ignore-space-change
+Ignore changes in amount of white space.  @xref{White Space}.
+
+@item -B
+@itemx --ignore-blank-lines
+Ignore changes that just insert or delete blank lines.  @xref{Blank
+Lines}.
+
+@item -d
+@itemx --minimal
+Change the algorithm to perhaps find a smaller set of changes.  This
+makes @command{sdiff} slower (sometimes much slower).  @xref{diff
+Performance}.
+
+@item --diff-program=@var{program}
+Use the compatible comparison program @var{program} to compare files
+instead of @command{diff}.
+
+@item -E
+@itemx --ignore-tab-expansion
+Ignore changes due to tab expansion.
+@xref{White Space}.
+
+@item --help
+Output a summary of usage and then exit.
+
+@item -i
+@itemx --ignore-case
+Ignore changes in case; consider upper- and lower-case to be the same.
+@xref{Case Folding}.
+
+@item -I @var{regexp}
+@itemx --ignore-matching-lines=@var{regexp}
+Ignore changes that just insert or delete lines that match @var{regexp}.
+@xref{Specified Lines}.
+
+@item -l
+@itemx --left-column
+Print only the left column of two common lines.
+@xref{Side by Side Format}.
+
+@item -o @var{file}
+@itemx --output=@var{file}
+Put merged output into @var{file}.  This option is required for merging.
+
+@item -s
+@itemx --suppress-common-lines
+Do not print common lines.  @xref{Side by Side Format}.
+
+@item --speed-large-files
+Use heuristics to speed handling of large files that have numerous
+scattered small changes.  @xref{diff Performance}.
+
+@item --strip-trailing-cr
+Strip any trailing carriage return at the end of an input line.
+@xref{Binary}.
+
+@item -t
+@itemx --expand-tabs
+Expand tabs to spaces in the output, to preserve the alignment of tabs
+in the input files.  @xref{Tabs}.
+
+@item --tabsize=@var{columns}
+Assume that tab stops are set every @var{columns} (default 8) print
+columns.  @xref{Tabs}.
+
+@item -v
+@itemx --version
+Output version information and then exit.
+
+@item -w @var{columns}
+@itemx --width=@var{columns}
+Output at most @var{columns} (default 130) print columns per line.
+@xref{Side by Side Format}.  Note that for historical reasons, this
+option is @option{-W} in @command{diff}, @option{-w} in @command{sdiff}.
+
+@item -W
+@itemx --ignore-all-space
+Ignore white space when comparing lines.  @xref{White Space}.
+Note that for historical reasons, this option is @option{-w} in @command{diff},
+@option{-W} in @command{sdiff}.
+
+@item -Z
+@itemx --ignore-trailing-space
+Ignore white space at line end.  @xref{White Space}.
+@end table
+
+@node Standards conformance
+@chapter Standards conformance
+@cindex @acronym{POSIX}
+
+@vindex POSIXLY_CORRECT
+In a few cases, the @acronym{GNU} utilities' default behavior is
+incompatible with the @acronym{POSIX} standard.  To suppress these
+incompatibilities, define the @env{POSIXLY_CORRECT} environment
+variable.  Unless you are checking for @acronym{POSIX} conformance, you
+probably do not need to define @env{POSIXLY_CORRECT}.
+
+Normally options and operands can appear in any order, and programs act
+as if all the options appear before any operands.  For example,
+@samp{diff lao tzu -C 2} acts like @samp{diff -C 2 lao tzu}, since
+@samp{2} is an option-argument of @option{-C}.  However, if the
+@env{POSIXLY_CORRECT} environment variable is set, options must appear
+before operands, unless otherwise specified for a particular command.
+
+Newer versions of @acronym{POSIX} are occasionally incompatible with older
+versions.  For example, older versions of @acronym{POSIX} allowed the
+command @samp{diff -c -10} to have the same meaning as @samp{diff -C
+10}, but @acronym{POSIX} 1003.1-2001 @samp{diff} no longer allows
+digit-string options like @option{-10}.
+
+@vindex _POSIX2_VERSION
+The @acronym{GNU} utilities normally conform to the version of @acronym{POSIX}
+that is standard for your system.  To cause them to conform to a
+different version of @acronym{POSIX}, define the @env{_POSIX2_VERSION}
+environment variable to a value of the form @var{yyyymm} specifying
+the year and month the standard was adopted.  Two values are currently
+supported for @env{_POSIX2_VERSION}: @samp{199209} stands for
+@acronym{POSIX} 1003.2-1992, and @samp{200112} stands for @acronym{POSIX}
+1003.1-2001.  For example, if you are running older software that
+assumes an older version of @acronym{POSIX} and uses @samp{diff -c -10},
+you can work around the compatibility problems by setting
+@samp{_POSIX2_VERSION=199209} in your environment.
+
+@node Projects
+@chapter Future Projects
+
+Here are some ideas for improving @acronym{GNU} @command{diff} and
+@command{patch}.  The @acronym{GNU} project has identified some
+improvements as potential programming projects for volunteers.  You
+can also help by reporting any bugs that you find.
+
+If you are a programmer and would like to contribute something to the
+@acronym{GNU} project, please consider volunteering for one of these
+projects.  If you are seriously contemplating work, please write to
+@email{gvc@@gnu.org} to coordinate with other volunteers.
+
+@menu
+* Shortcomings:: Suggested projects for improvements.
+* Bugs::         Reporting bugs.
+@end menu
+
+@node Shortcomings
+@section Suggested Projects for Improving @acronym{GNU} @command{diff} and @command{patch}
+@cindex projects for directories
+
+One should be able to use @acronym{GNU} @command{diff} to generate a
+patch from any pair of directory trees, and given the patch and a copy
+of one such tree, use @command{patch} to generate a faithful copy of
+the other.  Unfortunately, some changes to directory trees cannot be
+expressed using current patch formats; also, @command{patch} does not
+handle some of the existing formats.  These shortcomings motivate the
+following suggested projects.
+
+@menu
+* Internationalization:: Handling multibyte and varying-width characters.
+* Changing Structure::   Handling changes to the directory structure.
+* Special Files::        Handling symbolic links, device special files, etc.
+* Unusual File Names::   Handling file names that contain unusual characters.
+* Time Stamp Order::     Outputting diffs in time stamp order.
+* Ignoring Changes::     Ignoring certain changes while showing others.
+* Speedups::             Improving performance.
+@end menu
+
+@node Internationalization
+@subsection Handling Multibyte and Varying-Width Characters
+@cindex multibyte characters
+@cindex varying-width characters
+
+@command{diff}, @command{diff3} and @command{sdiff} treat each line of
+input as a string of unibyte characters.  This can mishandle multibyte
+characters in some cases.  For example, when asked to ignore spaces,
+@command{diff} does not properly ignore a multibyte space character.
+
+Also, @command{diff} currently assumes that each byte is one column
+wide, and this assumption is incorrect in some locales, e.g., locales
+that use UTF-8 encoding.  This causes problems with the @option{-y} or
+@option{--side-by-side} option of @command{diff}.
+
+These problems need to be fixed without unduly affecting the
+performance of the utilities in unibyte environments.
+
+The IBM GNU/Linux Technology Center Internationalization Team has
+proposed
+@uref{http://oss.software.ibm.com/developer/opensource/linux/patches/i18n/diffutils-2.7.2-i18n-0.1.patch.gz,patches
+to support internationalized @command{diff}}.
+Unfortunately, these patches are incomplete and are to an older
+version of @command{diff}, so more work needs to be done in this area.
+
+@node Changing Structure
+@subsection Handling Changes to the Directory Structure
+@cindex directory structure changes
+
+@command{diff} and @command{patch} do not handle some changes to directory
+structure.  For example, suppose one directory tree contains a directory
+named @samp{D} with some subsidiary files, and another contains a file
+with the same name @samp{D}.  @samp{diff -r} does not output enough
+information for @command{patch} to transform the directory subtree into
+the file.
+
+There should be a way to specify that a file has been removed without
+having to include its entire contents in the patch file.  There should
+also be a way to tell @command{patch} that a file was renamed, even if
+there is no way for @command{diff} to generate such information.
+There should be a way to tell @command{patch} that a file's time stamp
+has changed, even if its contents have not changed.
+
+These problems can be fixed by extending the @command{diff} output format
+to represent changes in directory structure, and extending @command{patch}
+to understand these extensions.
+
+@node Special Files
+@subsection Files that are Neither Directories Nor Regular Files
+@cindex special files
+
+Some files are neither directories nor regular files: they are unusual
+files like symbolic links, device special files, named pipes, and
+sockets.  Currently, @command{diff} treats symbolic links as if they
+were the pointed-to files, except that a recursive @command{diff}
+reports an error if it detects infinite loops of symbolic links (e.g.,
+symbolic links to @file{..}).  @command{diff} treats other special
+files like regular files if they are specified at the top level, but
+simply reports their presence when comparing directories.  This means
+that @command{patch} cannot represent changes to such files.  For
+example, if you change which file a symbolic link points to,
+@command{diff} outputs the difference between the two files, instead
+of the change to the symbolic link.
+
+@c This might not be a good idea; is it wise for root to install devices
+@c this way?
+@command{diff} should optionally report changes to special files specially,
+and @command{patch} should be extended to understand these extensions.
+
+@node Unusual File Names
+@subsection File Names that Contain Unusual Characters
+@cindex file names with unusual characters
+
+When a file name contains an unusual character like a newline or
+white space, @samp{diff -r} generates a patch that @command{patch} cannot
+parse.  The problem is with format of @command{diff} output, not just with
+@command{patch}, because with odd enough file names one can cause
+@command{diff} to generate a patch that is syntactically correct but
+patches the wrong files.  The format of @command{diff} output should be
+extended to handle all possible file names.
+
+@node Time Stamp Order
+@subsection Outputting Diffs in Time Stamp Order
+
+Applying @command{patch} to a multiple-file diff can result in files
+whose time stamps are out of order.  @acronym{GNU} @command{patch} has
+options to restore the time stamps of the updated files
+(@pxref{Patching Time Stamps}), but sometimes it is useful to generate
+a patch that works even if the recipient does not have @acronym{GNU} patch,
+or does not use these options.  One way to do this would be to
+implement a @command{diff} option to output diffs in time stamp order.
+
+@node Ignoring Changes
+@subsection Ignoring Certain Changes
+
+It would be nice to have a feature for specifying two strings, one in
+@var{from-file} and one in @var{to-file}, which should be considered to
+match.  Thus, if the two strings are @samp{foo} and @samp{bar}, then if
+two lines differ only in that @samp{foo} in file 1 corresponds to
+@samp{bar} in file 2, the lines are treated as identical.
+
+It is not clear how general this feature can or should be, or
+what syntax should be used for it.
+
+A partial substitute is to filter one or both files before comparing,
+e.g.:
+
+@example
+sed 's/foo/bar/g' file1 | diff - file2
+@end example
+
+However, this outputs the filtered text, not the original.
+
+@node Speedups
+@subsection Improving Performance
+
+When comparing two large directory structures, one of which was
+originally copied from the other with time stamps preserved (e.g.,
+with @samp{cp -pR}), it would greatly improve performance if an option
+told @command{diff} to assume that two files with the same size and
+time stamps have the same content.  @xref{diff Performance}.
+
+@node Bugs
+@section Reporting Bugs
+@cindex bug reports
+@cindex reporting bugs
+
+If you think you have found a bug in @acronym{GNU} @command{cmp},
+@command{diff}, @command{diff3}, or @command{sdiff}, please report it
+by electronic mail to the
+@uref{http://mail.gnu.org/mailman/listinfo/bug-gnu-utils,GNU utilities
+bug report mailing list} @email{bug-gnu-utils@@gnu.org}.  Please send
+bug reports for @acronym{GNU} @command{patch} to
+@email{bug-patch@@gnu.org}.  Send as precise a description of the
+problem as you can, including the output of the @option{--version}
+option and sample input files that produce the bug, if applicable.  If
+you have a nontrivial fix for the bug, please send it as well.  If you
+have a patch, please send it too.  It may simplify the maintainer's
+job if the patch is relative to a recent test release, which you can
+find in the directory @uref{ftp://alpha.gnu.org/gnu/diffutils/}.
+
+@node Copying This Manual
+@appendix Copying This Manual
+@include fdl.texi
+
+@node Translations
+@appendix Translations of This Manual
+
+Nishio Futoshi of the GNUjdoc project has prepared a Japanese
+translation of this manual.  Its most recent version can be found at
+@uref{http://openlab.ring.gr.jp/gnujdoc/cvsweb/cvsweb.cgi/gnujdoc/}.
+
+@node Index
+@appendix Index
+
+@printindex cp
+
+@bye
diff --git a/exgettext b/exgettext
index 1b2c8f4..44652c3 100755
--- a/exgettext
+++ b/exgettext
@@ -1,7 +1,7 @@
 #! /bin/sh
 # Wrapper around gettext for programs using the msgid convention.
 
-# Copyright (C) 1998, 2001, 2004, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 1998, 2001, 2004, 2009-2012 Free Software Foundation, Inc.
 
 # Written by Paul Eggert <eggert@twinsun.com>.
 
diff --git a/gnulib b/gnulib
index d3d059c..55b0a0b 160000
--- a/gnulib
+++ b/gnulib
@@ -1 +1 @@
-Subproject commit d3d059cf53625ddfe2ff4f64759131e846f83b94
+Subproject commit 55b0a0b1dd267ef48971e4bb84768244ff58b340
diff --git a/lib/Makefile.am b/lib/Makefile.am
index 0e31a45..c120366 100644
--- a/lib/Makefile.am
+++ b/lib/Makefile.am
@@ -1,6 +1,6 @@
 # Automakefile for GNU Diffutils library.
 
-# Copyright (C) 2001-2002, 2004, 2006, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001-2002, 2004, 2006, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -15,6 +15,17 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
+AM_CFLAGS =
+BUILT_SOURCES =
+CLEANFILES =
+EXTRA_DIST =
+MOSTLYCLEANDIRS =
+MOSTLYCLEANFILES =
+MAINTAINERCLEANFILES =
+SUFFIXES =
+noinst_LIBRARIES =
+noinst_HEADERS =
+
 include gnulib.mk
 
 noinst_HEADERS += cmpbuf.h prepargs.h
diff --git a/lib/cmpbuf.c b/lib/cmpbuf.c
index 7413210..cb6a339 100644
--- a/lib/cmpbuf.c
+++ b/lib/cmpbuf.c
@@ -1,6 +1,6 @@
 /* Buffer primitives for comparison operations.
 
-   Copyright (C) 1993, 1995, 1998, 2001-2002, 2006, 2009-2010 Free Software
+   Copyright (C) 1993, 1995, 1998, 2001-2002, 2006, 2009-2012 Free Software
    Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
@@ -20,28 +20,14 @@
 
 #include <errno.h>
 #include <limits.h>
-
 #include <signal.h>
-#ifndef SA_RESTART
-# ifdef SA_INTERRUPT /* e.g. SunOS 4.1.x */
-#  define SA_RESTART SA_INTERRUPT
-# else
-#  define SA_RESTART 0
-# endif
-#endif
-
 #include <unistd.h>
+#include <stdint.h>
 #include <inttypes.h>
 #include <sys/types.h>
 #include "cmpbuf.h"
 #include "intprops.h"
 
-#ifndef PTRDIFF_MAX
-# define PTRDIFF_MAX TYPE_MAXIMUM (ptrdiff_t)
-#endif
-#ifndef SIZE_MAX
-# define SIZE_MAX TYPE_MAXIMUM (size_t)
-#endif
 #ifndef SSIZE_MAX
 # define SSIZE_MAX TYPE_MAXIMUM (ssize_t)
 #endif
diff --git a/lib/cmpbuf.h b/lib/cmpbuf.h
index 9d155f4..196edb6 100644
--- a/lib/cmpbuf.h
+++ b/lib/cmpbuf.h
@@ -1,6 +1,6 @@
 /* Buffer primitives for comparison operations.
 
-   Copyright (C) 2002, 2009-2010 Free Software Foundation, Inc.
+   Copyright (C) 2002, 2009-2012 Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -16,4 +16,4 @@
    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 size_t block_read (int, char *, size_t);
-size_t buffer_lcm (size_t, size_t, size_t);
+size_t buffer_lcm (size_t, size_t, size_t) _GL_ATTRIBUTE_CONST;
diff --git a/lib/prepargs.c b/lib/prepargs.c
index 7819d04..f4cf0c5 100644
--- a/lib/prepargs.c
+++ b/lib/prepargs.c
@@ -1,6 +1,6 @@
 /* Parse arguments from a string and prepend them to an argv.
 
-   Copyright (C) 1999-2002, 2006, 2009-2010 Free Software Foundation, Inc.
+   Copyright (C) 1999-2002, 2006, 2009-2012 Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
diff --git a/m4/vararrays.m4 b/m4/vararrays.m4
index 786bf33..c387d39 100644
--- a/m4/vararrays.m4
+++ b/m4/vararrays.m4
@@ -4,7 +4,7 @@
 
 # From Paul Eggert
 
-# Copyright (C) 2001, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
diff --git a/man/Makefile.am b/man/Makefile.am
index a2dc7af..ae5886e 100644
--- a/man/Makefile.am
+++ b/man/Makefile.am
@@ -1,6 +1,6 @@
 # Automakefile for GNU diffutils man pages
 
-# Copyright (C) 2002, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2002, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -16,17 +16,19 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 dist_man1_MANS = cmp.1 diff.1 diff3.1 sdiff.1
+EXTRA_DIST = $(dist_man1_MANS:%.1=%.x) help2man
 MAINTAINERCLEANFILES = $(dist_man1_MANS)
 
 S = $(top_srcdir)/src
-cmp.1: $S/cmp.c
-diff.1: $S/diff.c
-diff3.1: $S/diff3.c
-sdiff.1: $S/sdiff.c
+cmp.1: $S/cmp.c cmp.x
+diff.1: $S/diff.c diff.x
+diff3.1: $S/diff3.c diff3.x
+sdiff.1: $S/sdiff.c sdiff.x
 
-# Depend on configure.ac to get version number changes.
-$(dist_man1_MANS): $(top_srcdir)/configure.ac
-	$(AM_V_GEN)base=`expr $@ : '\(.*\).1'` && \
-	  (echo '[NAME]' && sed 's@/\* *@@; s/-/\\-/; q' $S/$$base.c) | \
-	  $(HELP2MAN) -i - -S '$(PACKAGE) $(VERSION)' ../src/$$base | \
-	  sed 's/^\.B info .*/.B info diff/' >$@
+# Depend on the former to get version number changes.
+$(dist_man1_MANS): $(SRC_VERSION_C) help2man
+	$(AM_V_GEN)base=`expr $@ : '\(.*\).1'`				\
+	  && (echo '[NAME]' && sed 's@/\* *@@; s/-/\\-/; q' $S/$$base.c) \
+	     | PATH=..$(PATH_SEPARATOR)$$PATH				\
+	       $(srcdir)/help2man -i - -i $(srcdir)/$$base.x		\
+		 -S '$(PACKAGE) $(VERSION)' $$base > $@-t && mv $@-t $@
diff --git a/man/cmp.x b/man/cmp.x
new file mode 100644
index 0000000..5c9ef82
--- /dev/null
+++ b/man/cmp.x
@@ -0,0 +1,2 @@
+[SEE ALSO]
+diff(1), diff3(1), sdiff(1)
diff --git a/man/diff.x b/man/diff.x
new file mode 100644
index 0000000..fdb69d2
--- /dev/null
+++ b/man/diff.x
@@ -0,0 +1,2 @@
+[SEE ALSO]
+wdiff(1), cmp(1), diff3(1), sdiff(1), patch(1)
diff --git a/man/diff3.x b/man/diff3.x
new file mode 100644
index 0000000..0751208
--- /dev/null
+++ b/man/diff3.x
@@ -0,0 +1,2 @@
+[SEE ALSO]
+cmp(1), diff(1), sdiff(1)
diff --git a/man/help2man b/man/help2man
new file mode 100755
index 0000000..8bc961c
--- /dev/null
+++ b/man/help2man
@@ -0,0 +1,671 @@
+#!/usr/bin/perl -w
+
+# Generate a short man page from --help and --version output.
+# Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2009, 2010,
+# 2011 Free Software Foundation, Inc.
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3, or (at your option)
+# any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software Foundation,
+# Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+
+# Written by Brendan O'Dea <bod@debian.org>
+# Available from ftp://ftp.gnu.org/gnu/help2man/
+
+use 5.008;
+use strict;
+use Getopt::Long;
+use Text::Tabs qw(expand);
+use POSIX qw(strftime setlocale LC_ALL);
+
+my $this_program = 'help2man';
+my $this_version = '1.40.4';
+
+sub _ { $_[0] }
+sub configure_locale
+{
+    my $locale = shift;
+    die "$this_program: no locale support (Locale::gettext required)\n"
+	unless $locale eq 'C';
+}
+
+sub dec { $_[0] }
+sub enc { $_[0] }
+sub enc_user { $_[0] }
+sub kark { die +(sprintf shift, @_), "\n" }
+sub N_ { $_[0] }
+
+my $version_info = enc_user sprintf _(<<'EOT'), $this_program, $this_version;
+GNU %s %s
+
+Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2009, 2010,
+2011 Free Software Foundation, Inc.
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+Written by Brendan O'Dea <bod@debian.org>
+EOT
+
+my $help_info = enc_user sprintf _(<<'EOT'), $this_program, $this_program;
+'%s' generates a man page out of '--help' and '--version' output.
+
+Usage: %s [OPTION]... EXECUTABLE
+
+ -n, --name=STRING       description for the NAME paragraph
+ -s, --section=SECTION   section number for manual page (1, 6, 8)
+ -m, --manual=TEXT       name of manual (User Commands, ...)
+ -S, --source=TEXT       source of program (FSF, Debian, ...)
+ -L, --locale=STRING     select locale (default "C")
+ -i, --include=FILE      include material from 'FILE'
+ -I, --opt-include=FILE  include material from 'FILE' if it exists
+ -o, --output=FILE       send output to 'FILE'
+ -p, --info-page=TEXT    name of Texinfo manual
+ -N, --no-info           suppress pointer to Texinfo manual
+ -l, --libtool           exclude the 'lt-' from the program name
+     --help              print this help, then exit
+     --version           print version number, then exit
+
+EXECUTABLE should accept '--help' and '--version' options and produce output on
+stdout although alternatives may be specified using:
+
+ -h, --help-option=STRING     help option string
+ -v, --version-option=STRING  version option string
+ --version-string=STRING      version string
+ --no-discard-stderr          include stderr when parsing option output
+
+Report bugs to <bug-help2man@gnu.org>.
+EOT
+
+my $section = 1;
+my $manual = '';
+my $source = '';
+my $help_option = '--help';
+my $version_option = '--version';
+my $discard_stderr = 1;
+my ($opt_name, @opt_include, $opt_output, $opt_info, $opt_no_info, $opt_libtool,
+    $version_text);
+
+my %opt_def = (
+    'n|name=s'		 => \$opt_name,
+    's|section=s'	 => \$section,
+    'm|manual=s'	 => \$manual,
+    'S|source=s'	 => \$source,
+    'L|locale=s'	 => sub { configure_locale pop },
+    'i|include=s'	 => sub { push @opt_include, [ pop, 1 ] },
+    'I|opt-include=s'	 => sub { push @opt_include, [ pop, 0 ] },
+    'o|output=s'	 => \$opt_output,
+    'p|info-page=s'	 => \$opt_info,
+    'N|no-info'		 => \$opt_no_info,
+    'l|libtool'		 => \$opt_libtool,
+    'help'		 => sub { print $help_info; exit },
+    'version'		 => sub { print $version_info; exit },
+    'h|help-option=s'	 => \$help_option,
+    'v|version-option=s' => \$version_option,
+    'version-string=s'	 => \$version_text,
+    'discard-stderr!'	 => \$discard_stderr,
+);
+
+# Parse options.
+Getopt::Long::config('bundling');
+die $help_info unless GetOptions %opt_def and @ARGV == 1;
+
+my %include = ();
+my %append = ();
+my @include = (); # retain order given in include file
+
+# Process include file (if given).  Format is:
+#
+#   [section name]
+#   verbatim text
+#
+# or
+#
+#   /pattern/
+#   verbatim text
+#
+
+while (@opt_include)
+{
+    my ($inc, $required) = @{shift @opt_include};
+
+    next unless -f $inc or $required;
+    kark N_("%s: can't open '%s' (%s)"), $this_program, $inc, $!
+	unless open INC, $inc;
+
+    my $key;
+    my $hash = \%include;
+
+    while (<INC>)
+    {
+	# Convert input to internal Perl format, so that multibyte
+	# sequences are treated as single characters.
+	$_ = dec $_;
+
+	# [section]
+	if (/^\[([^]]+)\]\s*$/)
+	{
+	    $key = uc $1;
+	    $key =~ s/^\s+//;
+	    $key =~ s/\s+$//;
+	    $hash = \%include;
+	    push @include, $key unless $include{$key};
+	    next;
+	}
+
+	# /pattern/
+	if (m!^/(.*)/([ims]*)\s*$!)
+	{
+	    my $pat = $2 ? "(?$2)$1" : $1;
+
+	    # Check pattern.
+	    eval { $key = qr($pat) };
+	    if ($@)
+	    {
+		$@ =~ s/ at .*? line \d.*//;
+		die "$inc:$.:$@";
+	    }
+
+	    $hash = \%append;
+	    next;
+	}
+
+	# Check for options before the first section--anything else is
+	# silently ignored, allowing the first for comments and
+	# revision info.
+	unless ($key)
+	{
+	    # handle options
+	    if (/^-/)
+	    {
+		local @ARGV = split;
+		GetOptions %opt_def;
+	    }
+
+	    next;
+	}
+
+	$hash->{$key} ||= '';
+	$hash->{$key} .= $_;
+    }
+
+    close INC;
+
+    kark N_("%s: no valid information found in '%s'"), $this_program, $inc
+	unless $key;
+}
+
+# Compress trailing blank lines.
+for my $hash (\(%include, %append))
+{
+    for (keys %$hash) { $hash->{$_} =~ s/\n+$/\n/ }
+}
+
+sub get_option_value;
+
+# Grab help and version info from executable.
+my $help_text   = get_option_value $ARGV[0], $help_option;
+$version_text ||= get_option_value $ARGV[0], $version_option;
+
+# Translators: the following message is a strftime(3) format string, which in
+# the English version expands to the month as a word and the full year.  It
+# is used on the footer of the generated manual pages.  If in doubt, you may
+# just use %x as the value (which should be the full locale-specific date).
+my $date = enc strftime _("%B %Y"), localtime;
+(my $program = $ARGV[0]) =~ s!.*/!!;
+my $package = $program;
+my $version;
+
+if ($opt_output)
+{
+    unlink $opt_output or kark N_("%s: can't unlink %s (%s)"),
+	$this_program, $opt_output, $! if -e $opt_output;
+
+    open STDOUT, ">$opt_output"
+	or kark N_("%s: can't create %s (%s)"), $this_program, $opt_output, $!;
+}
+
+# The first line of the --version information is assumed to be in one
+# of the following formats:
+#
+#   <version>
+#   <program> <version>
+#   {GNU,Free} <program> <version>
+#   <program> ({GNU,Free} <package>) <version>
+#   <program> - {GNU,Free} <package> <version>
+#
+# and separated from any copyright/author details by a blank line.
+
+($_, $version_text) = ((split /\n+/, $version_text, 2), '');
+
+if (/^(\S+) +\(((?:GNU|Free) +[^)]+)\) +(.*)/ or
+    /^(\S+) +- *((?:GNU|Free) +\S+) +(.*)/)
+{
+    $program = $1;
+    $package = $2;
+    $version = $3;
+}
+elsif (/^((?:GNU|Free) +)?(\S+) +(.*)/)
+{
+    $program = $2;
+    $package = $1 ? "$1$2" : $2;
+    $version = $3;
+}
+else
+{
+    $version = $_;
+}
+
+$program =~ s!.*/!!;
+
+# No info for 'info' itself.
+$opt_no_info = 1 if $program eq 'info';
+
+# Translators: "NAME", "SYNOPSIS" and other one or two word strings in all
+# upper case are manual page section headings.  The man(1) manual page in your
+# language, if available should provide the conventional translations.
+for ($include{_('NAME')})
+{
+    if ($opt_name) # --name overrides --include contents.
+    {
+	$_ = "$program \\- $opt_name\n";
+    }
+    elsif ($_) # Use first name given as $program
+    {
+	$program = $1 if /^([^\s,]+)(?:,?\s*[^\s,\\-]+)*\s+\\?-/;
+    }
+    else # Set a default (useless) NAME paragraph.
+    {
+	$_ = sprintf _("%s \\- manual page for %s %s") . "\n", $program,
+	    $program, $version;
+    }
+}
+
+# Man pages traditionally have the page title in caps.
+my $PROGRAM = uc $program;
+
+# Set default page head/footers
+$source ||= "$program $version";
+unless ($manual)
+{
+    for ($section)
+    {
+	if (/^(1[Mm]|8)/) { $manual = enc _('System Administration Utilities') }
+	elsif (/^6/)	  { $manual = enc _('Games') }
+	else		  { $manual = enc _('User Commands') }
+    }
+}
+
+# Extract usage clause(s) [if any] for SYNOPSIS.
+# Translators: "Usage" and "or" here are patterns (regular expressions) which
+# are used to match the usage synopsis in program output.  An example from cp
+# (GNU coreutils) which contains both strings:
+#  Usage: cp [OPTION]... [-T] SOURCE DEST
+#    or:  cp [OPTION]... SOURCE... DIRECTORY
+#    or:  cp [OPTION]... -t DIRECTORY SOURCE...
+my $PAT_USAGE = _('Usage');
+my $PAT_USAGE_CONT = _('or');
+if ($help_text =~ s/^($PAT_USAGE):( +(\S+))(.*)((?:\n(?: {6}\1| *($PAT_USAGE_CONT): +\S).*)*)//om)
+{
+    my @syn = $3 . $4;
+
+    if ($_ = $5)
+    {
+	s/^\n//;
+	for (split /\n/) { s/^ *(($PAT_USAGE_CONT): +)?//o; push @syn, $_ }
+    }
+
+    my $synopsis = '';
+    for (@syn)
+    {
+	$synopsis .= ".br\n" if $synopsis;
+	s!^\S*/!!;
+	s/^lt-// if $opt_libtool;
+	s/^(\S+) *//;
+	$synopsis .= ".B $1\n";
+	s/\s+$//;
+	s/(([][]|\.\.+)+)/\\fR$1\\fI/g;
+	s/^/\\fI/ unless s/^\\fR//;
+	$_ .= '\fR';
+	s/(\\fI)( *)/$2$1/g;
+	s/\\fI\\fR//g;
+	s/^\\fR//;
+	s/\\fI$//;
+	s/^\./\\&./;
+
+	$synopsis .= "$_\n";
+    }
+
+    $include{_('SYNOPSIS')} ||= $synopsis;
+}
+
+# Process text, initial section is DESCRIPTION.
+my $sect = _('DESCRIPTION');
+$_ = "$help_text\n\n$version_text";
+
+# Normalise paragraph breaks.
+s/^\n+//;
+s/\n*$/\n/;
+s/\n\n+/\n\n/g;
+
+# Join hyphenated lines.
+s/([A-Za-z])-\n *([A-Za-z])/$1$2/g;
+
+# Temporarily exchange leading dots, apostrophes and backslashes for
+# tokens.
+s/^\./\x80/mg;
+s/^'/\x81/mg;
+s/\\/\x82/g;
+
+# Translators: patterns are used to match common program output. In the source
+# these strings are all of the form of "my $PAT_something = _('...');" and are
+# regular expressions.  If there is more than one commonly used string, you
+# may separate alternatives with "|".  Spaces in these expressions are written
+# as " +" to indicate that more than one space may be matched.  The string
+# "(?:[\\w-]+ +)?" in the bug reporting pattern is used to indicate an
+# optional word, so that either "Report bugs" or "Report _program_ bugs" will
+# be matched.
+my $PAT_BUGS		= _('Report +(?:[\w-]+ +)?bugs|Email +bug +reports +to');
+my $PAT_AUTHOR		= _('Written +by');
+my $PAT_OPTIONS		= _('Options');
+my $PAT_ENVIRONMENT	= _('Environment');
+my $PAT_FILES		= _('Files');
+my $PAT_EXAMPLES	= _('Examples');
+my $PAT_FREE_SOFTWARE	= _('This +is +free +software');
+
+# Start a new paragraph (if required) for these.
+s/([^\n])\n($PAT_BUGS|$PAT_AUTHOR) /$1\n\n$2 /og;
+
+# Convert iso-8859-1 copyright symbol or (c) to nroff
+# character.
+s/^Copyright +(?:\xa9|\([Cc]\))/Copyright \\(co/mg;
+
+sub convert_option;
+
+while (length)
+{
+    # Convert some standard paragraph names.
+    if (s/^($PAT_OPTIONS): *\n//o)
+    {
+	$sect = _('OPTIONS');
+	next;
+    }
+    if (s/^($PAT_ENVIRONMENT): *\n//o)
+    {
+	$sect = _('ENVIRONMENT');
+	next;
+    }
+    if (s/^($PAT_FILES): *\n//o)
+    {
+	$sect = _('FILES');
+	next;
+    }
+    elsif (s/^($PAT_EXAMPLES): *\n//o)
+    {
+	$sect = _('EXAMPLES');
+	next;
+    }
+
+    # Copyright section
+    if (/^Copyright /)
+    {
+	$sect = _('COPYRIGHT');
+    }
+
+    # Bug reporting section.
+    elsif (/^($PAT_BUGS) /o)
+    {
+	$sect = _('REPORTING BUGS');
+    }
+
+    # Author section.
+    elsif (/^($PAT_AUTHOR)/o)
+    {
+	$sect = _('AUTHOR');
+    }
+
+    # Examples, indicated by an indented leading $, % or > are
+    # rendered in a constant width font.
+    if (/^( +)([\$\%>] )\S/)
+    {
+	my $indent = $1;
+	my $prefix = $2;
+	my $break = '.IP';
+	$include{$sect} ||= '';
+	while (s/^$indent\Q$prefix\E(\S.*)\n*//)
+	{
+	    $include{$sect} .= "$break\n\\f(CW$prefix$1\\fR\n";
+	    $break = '.br';
+	}
+
+	next;
+    }
+
+    my $matched = '';
+    $include{$sect} ||= '';
+
+    # Sub-sections have a trailing colon and the second line indented.
+    if (s/^(\S.*:) *\n / /)
+    {
+	$matched .= $& if %append;
+	$include{$sect} .= qq(.SS "$1"\n);
+    }
+
+    my $indent = 0;
+    my $content = '';
+
+    # Option with description.
+    if (s/^( {1,10}([+-]\S.*?))(?:(  +(?!-))|\n( {20,}))(\S.*)\n//)
+    {
+	$matched .= $& if %append;
+	$indent = length ($4 || "$1$3");
+	$content = ".TP\n\x84$2\n\x84$5\n";
+	unless ($4)
+	{
+	    # Indent may be different on second line.
+	    $indent = length $& if /^ {20,}/;
+	}
+    }
+
+    # Option without description.
+    elsif (s/^ {1,10}([+-]\S.*)\n//)
+    {
+	$matched .= $& if %append;
+	$content = ".HP\n\x84$1\n";
+	$indent = 80; # not continued
+    }
+
+    # Indented paragraph with tag.
+    elsif (s/^( +(\S.*?)  +)(\S.*)\n//)
+    {
+	$matched .= $& if %append;
+	$indent = length $1;
+	$content = ".TP\n\x84$2\n\x84$3\n";
+    }
+
+    # Indented paragraph.
+    elsif (s/^( +)(\S.*)\n//)
+    {
+	$matched .= $& if %append;
+	$indent = length $1;
+	$content = ".IP\n\x84$2\n";
+    }
+
+    # Left justified paragraph.
+    else
+    {
+	s/(.*)\n//;
+	$matched .= $& if %append;
+	$content = ".PP\n" if $include{$sect};
+	$content .= "$1\n";
+    }
+
+    # Append continuations.
+    while ($indent ? s/^ {$indent}(\S.*)\n// : s/^(\S.*)\n//)
+    {
+	$matched .= $& if %append;
+	$content .= "\x84$1\n";
+    }
+
+    # Move to next paragraph.
+    s/^\n+//;
+
+    for ($content)
+    {
+	# Leading dot and apostrophe protection.
+	s/\x84\./\x80/g;
+	s/\x84'/\x81/g;
+	s/\x84//g;
+
+	# Convert options.
+	s/(^| |\()(-[][\w=-]+)/$1 . convert_option $2/mge;
+
+	# Escape remaining hyphens
+	s/-/\x83/g;
+
+	if ($sect eq 'COPYRIGHT')
+	{
+	    # Insert line breaks before additional copyright messages
+	    # and the disclaimer.
+	    s/\n(Copyright |$PAT_FREE_SOFTWARE)/\n.br\n$1/og;
+	}
+	elsif ($sect eq 'REPORTING BUGS')
+	{
+	    # Handle multi-line bug reporting sections of the form:
+	    #
+	    #   Report <program> bugs to <addr>
+	    #   GNU <package> home page: <url>
+	    #   ...
+	    s/\n([[:upper:]])/\n.br\n$1/g;
+	}
+    }
+
+    # Check if matched paragraph contains /pat/.
+    if (%append)
+    {
+	for my $pat (keys %append)
+	{
+	    if ($matched =~ $pat)
+	    {
+		$content .= ".PP\n" unless $append{$pat} =~ /^\./;
+		$content .= $append{$pat};
+	    }
+	}
+    }
+
+    $include{$sect} .= $content;
+}
+
+# Refer to the real documentation.
+unless ($opt_no_info)
+{
+    my $info_page = $opt_info || $program;
+
+    $sect = _('SEE ALSO');
+    $include{$sect} ||= '';
+    $include{$sect} .= ".PP\n" if $include{$sect};
+    $include{$sect} .= sprintf _(<<'EOT'), $program, $program, $info_page;
+The full documentation for
+.B %s
+is maintained as a Texinfo manual.  If the
+.B info
+and
+.B %s
+programs are properly installed at your site, the command
+.IP
+.B info %s
+.PP
+should give you access to the complete manual.
+EOT
+}
+
+# Output header.
+print <<EOT;
+.\\" DO NOT MODIFY THIS FILE!  It was generated by $this_program $this_version.
+.TH $PROGRAM "$section" "$date" "$source" "$manual"
+EOT
+
+# Section ordering.
+my @pre = (_('NAME'), _('SYNOPSIS'), _('DESCRIPTION'), _('OPTIONS'),
+    _('ENVIRONMENT'), _('FILES'), _('EXAMPLES'));
+
+my @post = (_('AUTHOR'), _('REPORTING BUGS'), _('COPYRIGHT'), _('SEE ALSO'));
+my $filter = join '|', @pre, @post;
+
+# Output content.
+for my $sect (@pre, (grep ! /^($filter)$/o, @include), @post)
+{
+    if ($include{$sect})
+    {
+	my $quote = $sect =~ /\W/ ? '"' : '';
+	print enc ".SH $quote$sect$quote\n";
+
+	for ($include{$sect})
+	{
+	    # Replace leading dot, apostrophe, backslash and hyphen
+	    # tokens.
+	    s/\x80/\\&./g;
+	    s/\x81/\\&'/g;
+	    s/\x82/\\e/g;
+	    s/\x83/\\-/g;
+
+	    # Convert some latin1 chars to troff equivalents
+	    s/\xa0/\\ /g; # non-breaking space
+
+	    print enc $_;
+	}
+    }
+}
+
+close STDOUT or kark N_("%s: error writing to %s (%s)"), $this_program,
+    $opt_output || 'stdout', $!;
+
+exit;
+
+# Call program with given option and return results.
+sub get_option_value
+{
+    my ($prog, $opt) = @_;
+    my $stderr = $discard_stderr ? '/dev/null' : '&1';
+    my $value = join '',
+	map { s/ +$//; expand $_ }
+	map { dec $_ }
+	`$prog $opt 2>$stderr`;
+
+    unless ($value)
+    {
+	my $err = N_("%s: can't get '%s' info from %s%s");
+	my $extra = $discard_stderr
+	    ? "\n" . N_("Try '--no-discard-stderr' if option outputs to stderr")
+	    : '';
+
+	kark $err, $this_program, $opt, $prog, $extra;
+    }
+
+    return $value;
+}
+
+# Convert option dashes to \- to stop nroff from hyphenating 'em, and
+# embolden.  Option arguments get italicised.
+sub convert_option
+{
+    local $_ = '\fB' . shift;
+
+    s/-/\x83/g;
+    unless (s/\[=(.*)\]$/\\fR[=\\fI$1\\fR]/)
+    {
+	s/=(.)/\\fR=\\fI$1/;
+	s/ (.)/ \\fI$1/;
+	$_ .= '\fR';
+    }
+
+    $_;
+}
diff --git a/man/sdiff.x b/man/sdiff.x
new file mode 100644
index 0000000..fdc9c3e
--- /dev/null
+++ b/man/sdiff.x
@@ -0,0 +1,2 @@
+[SEE ALSO]
+cmp(1), diff(1), diff3(1)
diff --git a/ms/Makefile.am b/ms/Makefile.am
index 1929215..2296d6a 100644
--- a/ms/Makefile.am
+++ b/ms/Makefile.am
@@ -1,6 +1,6 @@
 # Makefile for GNU diffutils sources used on Microsoft operating systems.
 
-# Copyright (C) 2001-2002, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001-2002, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
diff --git a/ms/README b/ms/README
index e30846b..93a9074 100644
--- a/ms/README
+++ b/ms/README
@@ -46,7 +46,7 @@ To install the package, type "make install".
 That's it!
 
 -----
-Copyright (C) 2001, 2009-2010 Free Software Foundation, Inc.
+Copyright (C) 2001, 2009-2012 Free Software Foundation, Inc.
 
 This file is part of GNU DIFF.
 
diff --git a/ms/config.bat b/ms/config.bat
index 7f057a0..57d5f3f 100644
--- a/ms/config.bat
+++ b/ms/config.bat
@@ -2,7 +2,7 @@
 
 echo Configuring GNU Diffutils for DJGPP v2.x...
 
-Rem Copyright (C) 2001, 2009-2010 Free Software Foundation, Inc.
+Rem Copyright (C) 2001, 2009-2012 Free Software Foundation, Inc.
 
 Rem This program is free software: you can redistribute it and/or modify
 Rem it under the terms of the GNU General Public License as published by
@@ -134,7 +134,7 @@ if not errorlevel 1 mv -f %XSRC%/m4/Makefile.am.in %XSRC%/m4/Makefile.am-in
 
 Rem This is required because DOS/Windows are case-insensitive
 Rem to file names, and "make install" will do nothing if Make
-Rem finds a file called `install'.
+Rem finds a file called 'install'.
 if exist INSTALL ren INSTALL INSTALL.txt
 
 Rem Set HOME to a sane default so configure stops complaining.
diff --git a/ms/config.sed b/ms/config.sed
index e017691..0d40421 100644
--- a/ms/config.sed
+++ b/ms/config.sed
@@ -1,6 +1,6 @@
 # Additional editing of Makefiles and of config.status
 
-# Copyright (C) 2001-2002, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001-2002, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
diff --git a/ms/config.site b/ms/config.site
index c89b062..c863616 100644
--- a/ms/config.site
+++ b/ms/config.site
@@ -1,7 +1,7 @@
 #! /bin/sh
 # Site defaults for the DJGPP configuration
 
-# Copyright (C) 2001, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -73,7 +73,6 @@ MAKEINFO=${MAKEINFO='makeinfo'}
 # Force the test for 'ln -s' to report 'cp -pf'.
 ac_cv_prog_LN_S='cp -pf'
 
-# We have `fork', but it always fails.  Don't trust Autoconf to be
+# We have 'fork', but it always fails.  Don't trust Autoconf to be
 # smart enough to detect that...
 ac_cv_func_fork=no
-ac_cv_func_vfork=no
diff --git a/po/POTFILES.in b/po/POTFILES.in
index 6ffcf61..866fa44 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -1,6 +1,6 @@
 # List of files that contain translatable strings.
 
-# Copyright (C) 2001-2002, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001-2002, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
diff --git a/po/en.po b/po/en.po
index 8e2f54d..ad59232 100644
--- a/po/en.po
+++ b/po/en.po
@@ -1,26 +1,18 @@
 # English messages for GNU diffutils
-# Copyright 1998, 2001-2003, 2009-2010 Free Software Foundation, Inc.
+# Copyright 1998, 2001-2003, 2009-2012 Free Software Foundation, Inc.
 # Paul Eggert <eggert@twinsun.com>, 1998
 #
 msgid ""
 msgstr ""
-"Project-Id-Version: GNU diffutils 2.8.3\n"
+"Project-Id-Version: GNU diffutils 3.2\n"
 "POT-Creation-Date: 2002-06-16 23:44-0700\n"
-"PO-Revision-Date: 2002-06-17 00:01-0700\n"
-"Last-Translator: Paul Eggert <eggert@twinsun.com>\n"
+"PO-Revision-Date: 2012-01-25 23:11-0700\n"
+"Last-Translator: Paul Eggert <eggert@cs.ucla.edu>\n"
 "Language-Team: English <en@translate.freefriends.org>\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=ISO-8859-1\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-# POSIX requires the word "illegal" in the POSIX locale, but the error
-# is not really against the law.  This is not the POSIX locale, so fix
-# the wording.
-#: lib/getopt.c:800
-#, c-format
-msgid "%s: illegal option -- %c\n"
-msgstr "%s: unrecognized option `-%c'\n"
-
 #. TRANSLATORS: Please translate "(C)" to the C-in-a-circle symbol
 #. (U+00A9, COPYRIGHT SIGN) if possible, as this has some minor
 #. technical advantages in international copyright law.  If the
diff --git a/src/Makefile.am b/src/Makefile.am
index 48fbf7d..14e2029 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -1,6 +1,6 @@
 # Automakefile for GNU diffutils programs.
 
-# Copyright (C) 2001-2002, 2006, 2009-2010 Free Software Foundation, Inc.
+# Copyright (C) 2001-2002, 2006, 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -17,14 +17,13 @@
 
 bin_PROGRAMS = cmp diff diff3 sdiff
 
-noinst_HEADERS = system.h
-
 localedir = $(datadir)/locale
 
 AM_CPPFLAGS = -I../lib -I$(top_srcdir)/lib
 AM_CFLAGS = $(WARN_CFLAGS) $(WERROR_CFLAGS)
 
 LDADD = \
+  libver.a \
   ../lib/libdiffutils.a \
   $(LIBCSTACK) \
   $(LIBINTL) \
@@ -41,8 +40,9 @@ cmp_SOURCES = cmp.c
 diff3_SOURCES = diff3.c
 sdiff_SOURCES = sdiff.c
 diff_SOURCES = \
-  analyze.c context.c diff.c diff.h dir.c ed.c ifdef.c io.c \
+  analyze.c context.c diff.c dir.c ed.c ifdef.c io.c \
   normal.c side.c util.c
+noinst_HEADERS = diff.h system.h
 
 MOSTLYCLEANFILES = paths.h paths.ht
 
@@ -53,3 +53,24 @@ BUILT_SOURCES = paths.h
 paths.h: Makefile.am
 	$(AM_V_GEN)(echo '#define DEFAULT_DIFF_PROGRAM "'$(gdiff)'"' && \
 	  echo '#define LOCALEDIR "$(localedir)"') >$@t && mv $@t $@
+
+noinst_LIBRARIES = libver.a
+nodist_libver_a_SOURCES = version.c version.h
+
+BUILT_SOURCES += version.c
+version.c: Makefile
+	$(AM_V_GEN)rm -f $@
+	$(AM_V_at)printf '#include <config.h>\n' > $@t
+	$(AM_V_at)printf 'char const *Version = "$(PACKAGE_VERSION)";\n' >> $@t
+	$(AM_V_at)chmod a-w $@t
+	$(AM_V_at)mv $@t $@
+
+BUILT_SOURCES += version.h
+version.h: Makefile
+	$(AM_V_GEN)rm -f $@
+	$(AM_V_at)printf 'extern char const *Version;\n' > $@t
+	$(AM_V_at)chmod a-w $@t
+	$(AM_V_at)mv $@t $@
+
+DISTCLEANFILES = version.c version.h
+MAINTAINERCLEANFILES = $(BUILT_SOURCES)
diff --git a/src/analyze.c b/src/analyze.c
index e797248..0e61a82 100644
--- a/src/analyze.c
+++ b/src/analyze.c
@@ -1,7 +1,7 @@
 /* Analyze file differences for GNU DIFF.
 
    Copyright (C) 1988-1989, 1992-1995, 1998, 2001-2002, 2004, 2006-2007,
-   2009-2010 Free Software Foundation, Inc.
+   2009-2012 Free Software Foundation, Inc.
 
    This file is part of GNU DIFF.
 
@@ -38,7 +38,7 @@
 
    A line which is discarded will not be considered by the actual
    comparison algorithm; it will be as if that line were not in the file.
-   The file's `realindexes' table maps virtual line numbers
+   The file's 'realindexes' table maps virtual line numbers
    (which don't count the discarded lines) into real line numbers;
    this is how the actual comparison algorithm produces results
    that are comprehensible when the discarded lines are counted.
@@ -251,7 +251,7 @@ discard_confusing_lines (struct file_data filevec[])
    We do something when a run of changed lines include a
    line at one end and have an excluded, identical line at the other.
    We are free to choose which identical line is included.
-   `compareseq' usually chooses the one at the beginning,
+   'compareseq' usually chooses the one at the beginning,
    but usually it is cleaner to consider the following identical line
    to be the "change".  */
 
@@ -595,7 +595,7 @@ diff_2_files (struct comparison *cmp)
       shift_boundaries (cmp->file);
 
       /* Get the results of comparison in the form of a chain
-	 of `struct change's -- an edit script.  */
+	 of 'struct change's -- an edit script.  */
 
       if (output_style == OUTPUT_ED)
 	script = build_reverse_script (cmp->file);
diff --git a/src/cmp.c b/src/cmp.c
index 2455dc4..1387ec1 100644
--- a/src/cmp.c
+++ b/src/cmp.c
@@ -1,6 +1,6 @@
 /* cmp - compare two files byte by byte
 
-   Copyright (C) 1990-1996, 1998, 2001-2002, 2004, 2006-2007, 2009-2010 Free
+   Copyright (C) 1990-1996, 1998, 2001-2002, 2004, 2006-2007, 2009-2012 Free
    Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
@@ -33,10 +33,10 @@
 #include <unlocked-io.h>
 #include <version-etc.h>
 #include <xalloc.h>
-#include <xfreopen.h>
+#include <binary-io.h>
 #include <xstrtol.h>
 
-/* The official name of this program (e.g., no `g' prefix).  */
+/* The official name of this program (e.g., no 'g' prefix).  */
 #define PROGRAM_NAME "cmp"
 
 #define AUTHORS \
@@ -51,7 +51,7 @@
 
 static int cmp (void);
 static off_t file_position (int);
-static size_t block_compare (word const *, word const *);
+static size_t block_compare (word const *, word const *) _GL_ATTRIBUTE_PURE;
 static size_t block_compare_and_count (word const *, word const *, off_t *);
 static void sprintc (char *, unsigned char);
 
@@ -115,7 +115,7 @@ try_help (char const *reason_msgid, char const *operand)
   if (reason_msgid)
     error (0, 0, _(reason_msgid), operand);
   error (EXIT_TROUBLE, 0,
-	 _("Try `%s --help' for more information."), program_name);
+	 _("Try '%s --help' for more information."), program_name);
   abort ();
 }
 
@@ -134,7 +134,7 @@ specify_ignore_initial (int f, char **argptr, char delimiter)
   if (! (e == LONGINT_OK
 	 || (e == LONGINT_INVALID_SUFFIX_CHAR && **argptr == delimiter))
       || TYPE_MAXIMUM (off_t) < val)
-    try_help ("invalid --ignore-initial value `%s'", arg);
+    try_help ("invalid --ignore-initial value '%s'", arg);
   if (ignore_initial[f] < val)
     ignore_initial[f] = val;
 }
@@ -158,15 +158,15 @@ check_stdout (void)
 }
 
 static char const * const option_help_msgid[] = {
-  N_("-b  --print-bytes  Print differing bytes."),
-  N_("-i SKIP  --ignore-initial=SKIP  Skip the first SKIP bytes of input."),
-  N_("-i SKIP1:SKIP2  --ignore-initial=SKIP1:SKIP2"),
-  N_("  Skip the first SKIP1 bytes of FILE1 and the first SKIP2 bytes of FILE2."),
-  N_("-l  --verbose  Output byte numbers and values of all differing bytes."),
-  N_("-n LIMIT  --bytes=LIMIT  Compare at most LIMIT bytes."),
-  N_("-s  --quiet  --silent  Output nothing; yield exit status only."),
-  N_("-v  --version  Output version info."),
-  N_("--help  Output this help."),
+  N_("-b, --print-bytes          print differing bytes"),
+  N_("-i, --ignore-initial=SKIP         skip first SKIP bytes of both inputs"),
+  N_("-i, --ignore-initial=SKIP1:SKIP2  skip first SKIP1 bytes of FILE1 and\n"
+     "                                      first SKIP2 bytes of FILE2"),
+  N_("-l, --verbose              output byte numbers and differing byte values"),
+  N_("-n, --bytes=LIMIT          compare at most LIMIT bytes"),
+  N_("-s, --quiet, --silent      suppress all normal output"),
+  N_("    --help                 display this help and exit"),
+  N_("-v, --version              output version information and exit"),
   0
 };
 
@@ -177,15 +177,21 @@ usage (void)
 
   printf (_("Usage: %s [OPTION]... FILE1 [FILE2 [SKIP1 [SKIP2]]]\n"),
 	  program_name);
-  printf ("%s\n\n", _("Compare two files byte by byte."));
+  printf ("%s\n", _("Compare two files byte by byte."));
+  printf ("\n%s\n\n",
+_("The optional SKIP1 and SKIP2 specify the number of bytes to skip\n"
+  "at the beginning of each file (zero by default)."));
+
+  fputs (_("\
+Mandatory arguments to long options are mandatory for short options too.\n\
+"), stdout);
   for (p = option_help_msgid;  *p;  p++)
     printf ("  %s\n", _(*p));
-  printf ("\n%s\n%s\n\n%s\n%s\n",
-	  _("SKIP1 and SKIP2 are the number of bytes to skip in each file."),
+  printf ("\n%s\n\n%s\n%s\n",
 	  _("SKIP values may be followed by the following multiplicative suffixes:\n\
 kB 1000, K 1024, MB 1,000,000, M 1,048,576,\n\
 GB 1,000,000,000, G 1,073,741,824, and so on for T, P, E, Z, Y."),
-	  _("If a FILE is `-' or missing, read standard input."),
+	  _("If a FILE is '-' or missing, read standard input."),
 	  _("Exit status is 0 if inputs are the same, 1 if different, 2 if trouble."));
   emit_bug_reporting_address ();
 }
@@ -231,7 +237,7 @@ main (int argc, char **argv)
 	{
 	  uintmax_t n;
 	  if (xstrtoumax (optarg, 0, 0, &n, valid_suffixes) != LONGINT_OK)
-	    try_help ("invalid --bytes value `%s'", optarg);
+	    try_help ("invalid --bytes value '%s'", optarg);
 	  if (n < bytes)
 	    bytes = n;
 	}
@@ -242,7 +248,7 @@ main (int argc, char **argv)
 	break;
 
       case 'v':
-	version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, PACKAGE_VERSION,
+	version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, Version,
 		     AUTHORS, (char *) NULL);
 	check_stdout ();
 	return EXIT_SUCCESS;
@@ -257,7 +263,7 @@ main (int argc, char **argv)
       }
 
   if (optind == argc)
-    try_help ("missing operand after `%s'", argv[argc - 1]);
+    try_help ("missing operand after '%s'", argv[argc - 1]);
 
   file[0] = argv[optind++];
   file[1] = optind < argc ? argv[optind++] : "-";
@@ -269,7 +275,7 @@ main (int argc, char **argv)
     }
 
   if (optind < argc)
-    try_help ("extra operand `%s'", argv[optind]);
+    try_help ("extra operand '%s'", argv[optind]);
 
   for (f = 0; f < 2; f++)
     {
@@ -287,7 +293,7 @@ main (int argc, char **argv)
 	{
 	  file_desc[f1] = STDIN_FILENO;
 	  if (O_BINARY && ! isatty (STDIN_FILENO))
-	    xfreopen (NULL, "rb", stdin);
+	    SET_BINARY (STDIN_FILENO);
 	}
       else
 	file_desc[f1] = open (file[f1], O_RDONLY | O_BINARY, 0);
@@ -364,8 +370,8 @@ main (int argc, char **argv)
   return exit_status;
 }
 
-/* Compare the two files already open on `file_desc[0]' and `file_desc[1]',
-   using `buffer[0]' and `buffer[1]'.
+/* Compare the two files already open on 'file_desc[0]' and 'file_desc[1]',
+   using 'buffer[0]' and 'buffer[1]'.
    Return EXIT_SUCCESS if identical, EXIT_FAILURE if different,
    >1 if error.  */
 
@@ -377,7 +383,7 @@ cmp (void)
   uintmax_t remaining = bytes;	/* Remaining number of bytes to compare.  */
   size_t read0, read1;		/* Number of bytes read from each file. */
   size_t first_diff;		/* Offset (0...) in buffers of 1st diff. */
-  size_t smaller;		/* The lesser of `read0' and `read1'. */
+  size_t smaller;		/* The lesser of 'read0' and 'read1'. */
   word *buffer0 = buffer[0];
   word *buffer1 = buffer[1];
   char *buf0 = (char *) buffer0;
diff --git a/src/context.c b/src/context.c
index 0be8cc5..b73d5c3 100644
--- a/src/context.c
+++ b/src/context.c
@@ -1,6 +1,6 @@
 /* Context-format output routines for GNU DIFF.
 
-   Copyright (C) 1988-1989, 1991-1995, 1998, 2001-2002, 2004, 2006, 2009-2010
+   Copyright (C) 1988-1989, 1991-1995, 1998, 2001-2002, 2004, 2006, 2009-2012
    Free Software Foundation, Inc.
 
    This file is part of GNU DIFF.
@@ -20,7 +20,6 @@
 
 #include "diff.h"
 #include "c-ctype.h"
-#include <inttostr.h>
 #include <stat-time.h>
 #include <strftime.h>
 
@@ -159,7 +158,7 @@ print_context_function (FILE *out, char const *function)
 
 /* Print a portion of an edit script in context format.
    HUNK is the beginning of the portion to be printed.
-   The end is marked by a `link' that has been nulled out.
+   The end is marked by a 'link' that has been nulled out.
 
    Prints out lines from both files, and precedes each
    line with the appropriate flag-character.  */
@@ -289,7 +288,7 @@ print_unidiff_number_range (struct file_data const *file, lin a, lin b)
 
 /* Print a portion of an edit script in unidiff format.
    HUNK is the beginning of the portion to be printed.
-   The end is marked by a `link' that has been nulled out.
+   The end is marked by a 'link' that has been nulled out.
 
    Prints out lines from both files, and precedes each
    line with the appropriate flag-character.  */
@@ -393,9 +392,9 @@ pr_unidiff_hunk (struct change *hunk)
 
 /* Scan a (forward-ordered) edit script for the first place that more than
    2*CONTEXT unchanged lines appear, and return a pointer
-   to the `struct change' for the last change before those lines.  */
+   to the 'struct change' for the last change before those lines.  */
 
-static struct change *
+static struct change * _GL_ATTRIBUTE_PURE
 find_hunk (struct change *start)
 {
   struct change *prev;
@@ -431,7 +430,7 @@ find_hunk (struct change *start)
   return prev;
 }
 
-/* Set the `ignore' flag properly in each change in SCRIPT.
+/* Set the 'ignore' flag properly in each change in SCRIPT.
    It should be 1 if all the lines inserted or deleted in that change
    are ignorable lines.  */
 
@@ -459,7 +458,7 @@ mark_ignorable (struct change *script)
 }
 
 /* Find the last function-header line in LINBUF prior to line number LINENUM.
-   This is a line containing a match for the regexp in `function_regexp'.
+   This is a line containing a match for the regexp in 'function_regexp'.
    Return the address of the text, or NULL if no function-header is found.  */
 
 static char const *
diff --git a/src/diff.c b/src/diff.c
index cc1b611..972d84d 100644
--- a/src/diff.c
+++ b/src/diff.c
@@ -1,7 +1,7 @@
 /* diff - compare files line by line
 
    Copyright (C) 1988-1989, 1992-1994, 1996, 1998, 2001-2002, 2004, 2006-2007,
-   2009-2010 Free Software Foundation, Inc.
+   2009-2012 Free Software Foundation, Inc.
 
    This file is part of GNU DIFF.
 
@@ -27,6 +27,7 @@
 #include <error.h>
 #include <exclude.h>
 #include <exitfail.h>
+#include <filenamecat.h>
 #include <file-type.h>
 #include <fnmatch.h>
 #include <getopt.h>
@@ -38,9 +39,10 @@
 #include <timespec.h>
 #include <version-etc.h>
 #include <xalloc.h>
-#include <xfreopen.h>
+#include <xreadlink.h>
+#include <binary-io.h>
 
-/* The official name of this program (e.g., no `g' prefix).  */
+/* The official name of this program (e.g., no 'g' prefix).  */
 #define PROGRAM_NAME "diff"
 
 #define AUTHORS \
@@ -57,9 +59,9 @@
 struct regexp_list
 {
   char *regexps;	/* chars representing disjunction of the regexps */
-  size_t len;		/* chars used in `regexps' */
-  size_t size;		/* size malloc'ed for `regexps'; 0 if not malloc'ed */
-  bool multiple_regexps;/* Does `regexps' represent a disjunction?  */
+  size_t len;		/* chars used in 'regexps' */
+  size_t size;		/* size malloc'ed for 'regexps'; 0 if not malloc'ed */
+  bool multiple_regexps;/* Does 'regexps' represent a disjunction?  */
   struct re_pattern_buffer *buf;
 };
 
@@ -92,13 +94,13 @@ enum { binary = true };
 
 /* When comparing directories, if a file appears only in one
    directory, treat it as present but empty in the other (-N).
-   Then `patch' would create the file with appropriate contents.  */
+   Then 'patch' would create the file with appropriate contents.  */
 static bool new_file;
 
 /* When comparing directories, if a file appears only in the second
    directory of the two, treat it as present but empty in the other
    (--unidirectional-new-file).
-   Then `patch' would create the file with appropriate contents.  */
+   Then 'patch' would create the file with appropriate contents.  */
 static bool unidirectional_new_file;
 
 /* Report files compared that are the same (-s).
@@ -106,7 +108,7 @@ static bool unidirectional_new_file;
 static bool report_identical_files;
 
 static char const shortopts[] =
-"0123456789abBcC:dD:eEfF:hHiI:lL:nNpPqrsS:tTuU:vwW:x:X:y";
+"0123456789abBcC:dD:eEfF:hHiI:lL:nNpPqrsS:tTuU:vwW:x:X:yZ";
 
 /* Values for long options that do not have single-letter equivalents.  */
 enum
@@ -119,6 +121,7 @@ enum
   INHIBIT_HUNK_MERGE_OPTION,
   LEFT_COLUMN_OPTION,
   LINE_FORMAT_OPTION,
+  NO_DEREFERENCE_OPTION,
   NO_IGNORE_FILE_NAME_CASE_OPTION,
   NORMAL_OPTION,
   SDIFF_MERGE_ASSIST_OPTION,
@@ -177,6 +180,7 @@ static struct option const longopts[] =
   {"ignore-matching-lines", 1, 0, 'I'},
   {"ignore-space-change", 0, 0, 'b'},
   {"ignore-tab-expansion", 0, 0, 'E'},
+  {"ignore-trailing-space", 0, 0, 'Z'},
   {"inhibit-hunk-merge", 0, 0, INHIBIT_HUNK_MERGE_OPTION},
   {"initial-tab", 0, 0, 'T'},
   {"label", 1, 0, 'L'},
@@ -186,6 +190,7 @@ static struct option const longopts[] =
   {"new-file", 0, 0, 'N'},
   {"new-group-format", 1, 0, NEW_GROUP_FORMAT_OPTION},
   {"new-line-format", 1, 0, NEW_LINE_FORMAT_OPTION},
+  {"no-dereference", 0, 0, NO_DEREFERENCE_OPTION},
   {"no-ignore-file-name-case", 0, 0, NO_IGNORE_FILE_NAME_CASE_OPTION},
   {"normal", 0, 0, NORMAL_OPTION},
   {"old-group-format", 1, 0, OLD_GROUP_FORMAT_OPTION},
@@ -319,6 +324,11 @@ main (int argc, char **argv)
 	    ignore_white_space = IGNORE_SPACE_CHANGE;
 	  break;
 
+	case 'Z':
+	  if (ignore_white_space < IGNORE_SPACE_CHANGE)
+	    ignore_white_space |= IGNORE_TRAILING_SPACE;
+	  break;
+
 	case 'B':
 	  ignore_blank_lines = true;
 	  break;
@@ -330,7 +340,7 @@ main (int argc, char **argv)
 	      {
 		numval = strtoumax (optarg, &numend, 10);
 		if (*numend)
-		  try_help ("invalid context length `%s'", optarg);
+		  try_help ("invalid context length '%s'", optarg);
 		if (LIN_MAX < numval)
 		  numval = LIN_MAX;
 	      }
@@ -380,8 +390,8 @@ main (int argc, char **argv)
 	  break;
 
 	case 'E':
-	  if (ignore_white_space < IGNORE_TAB_EXPANSION)
-	    ignore_white_space = IGNORE_TAB_EXPANSION;
+	  if (ignore_white_space < IGNORE_SPACE_CHANGE)
+	    ignore_white_space |= IGNORE_TAB_EXPANSION;
 	  break;
 
 	case 'f':
@@ -479,7 +489,7 @@ main (int argc, char **argv)
 	  break;
 
 	case 'v':
-	  version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, PACKAGE_VERSION,
+	  version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, Version,
 		       AUTHORS, (char *) NULL);
 	  check_stdout ();
 	  return EXIT_SUCCESS;
@@ -505,7 +515,7 @@ main (int argc, char **argv)
 	case 'W':
 	  numval = strtoumax (optarg, &numend, 10);
 	  if (! (0 < numval && numval <= SIZE_MAX) || *numend)
-	    try_help ("invalid width `%s'", optarg);
+	    try_help ("invalid width '%s'", optarg);
 	  if (width != numval)
 	    {
 	      if (width)
@@ -518,7 +528,7 @@ main (int argc, char **argv)
 #if O_BINARY
 	  binary = true;
 	  if (! isatty (STDOUT_FILENO))
-	    xfreopen (NULL, "wb", stdout);
+	    SET_BINARY (STDOUT_FILENO);
 #endif
 	  break;
 
@@ -534,7 +544,7 @@ main (int argc, char **argv)
 	case HORIZON_LINES_OPTION:
 	  numval = strtoumax (optarg, &numend, 10);
 	  if (*numend)
-	    try_help ("invalid horizon length `%s'", optarg);
+	    try_help ("invalid horizon length '%s'", optarg);
 	  horizon_lines = MAX (horizon_lines, MIN (numval, LIN_MAX));
 	  break;
 
@@ -557,6 +567,10 @@ main (int argc, char **argv)
 	    specify_value (&line_format[i], optarg, "--line-format");
 	  break;
 
+	case NO_DEREFERENCE_OPTION:
+	  no_dereference_symlinks = true;
+	  break;
+
 	case NO_IGNORE_FILE_NAME_CASE_OPTION:
 	  ignore_file_name_case = false;
 	  break;
@@ -585,7 +599,7 @@ main (int argc, char **argv)
 	case TABSIZE_OPTION:
 	  numval = strtoumax (optarg, &numend, 10);
 	  if (! (0 < numval && numval <= SIZE_MAX) || *numend)
-	    try_help ("invalid tabsize `%s'", optarg);
+	    try_help ("invalid tabsize '%s'", optarg);
 	  if (tabsize != numval)
 	    {
 	      if (tabsize)
@@ -744,9 +758,9 @@ main (int argc, char **argv)
 	  if (argc - optind != 2)
 	    {
 	      if (argc - optind < 2)
-		try_help ("missing operand after `%s'", argv[argc - 1]);
+		try_help ("missing operand after '%s'", argv[argc - 1]);
 	      else
-		try_help ("extra operand `%s'", argv[optind + 2]);
+		try_help ("extra operand '%s'", argv[optind + 2]);
 	    }
 
 	  exit_status = compare_files (NULL, argv[optind], argv[optind + 1]);
@@ -826,7 +840,7 @@ try_help (char const *reason_msgid, char const *operand)
 {
   if (reason_msgid)
     error (0, 0, _(reason_msgid), operand);
-  error (EXIT_TROUBLE, 0, _("Try `%s --help' for more information."),
+  error (EXIT_TROUBLE, 0, _("Try '%s --help' for more information."),
 	 program_name);
   abort ();
 }
@@ -841,41 +855,65 @@ check_stdout (void)
 }
 
 static char const * const option_help_msgid[] = {
-  N_("Compare files line by line."),
+  N_("    --normal                  output a normal diff (the default)"),
+  N_("-q, --brief                   report only when files differ"),
+  N_("-s, --report-identical-files  report when two files are the same"),
+  N_("-c, -C NUM, --context[=NUM]   output NUM (default 3) lines of copied context"),
+  N_("-u, -U NUM, --unified[=NUM]   output NUM (default 3) lines of unified context"),
+  N_("-e, --ed                      output an ed script"),
+  N_("-n, --rcs                     output an RCS format diff"),
+  N_("-y, --side-by-side            output in two columns"),
+  N_("-W, --width=NUM               output at most NUM (default 130) print columns"),
+  N_("    --left-column             output only the left column of common lines"),
+  N_("    --suppress-common-lines   do not output common lines"),
+  "",
+  N_("-p, --show-c-function         show which C function each change is in"),
+  N_("-F, --show-function-line=RE   show the most recent line matching RE"),
+  N_("    --label LABEL             use LABEL instead of file name\n"
+     "                                (can be repeated)"),
+  "",
+  N_("-t, --expand-tabs             expand tabs to spaces in output"),
+  N_("-T, --initial-tab             make tabs line up by prepending a tab"),
+  N_("    --tabsize=NUM             tab stops every NUM (default 8) print columns"),
+  N_("    --suppress-blank-empty    suppress space or tab before empty output lines"),
+  N_("-l, --paginate                pass output through 'pr' to paginate it"),
+  "",
+  N_("-r, --recursive                 recursively compare any subdirectories found"),
+  N_("    --no-dereference            don't follow symbolic links"),
+  N_("-N, --new-file                  treat absent files as empty"),
+  N_("    --unidirectional-new-file   treat absent first files as empty"),
+  N_("    --ignore-file-name-case     ignore case when comparing file names"),
+  N_("    --no-ignore-file-name-case  consider case when comparing file names"),
+  N_("-x, --exclude=PAT               exclude files that match PAT"),
+  N_("-X, --exclude-from=FILE         exclude files that match any pattern in FILE"),
+  N_("-S, --starting-file=FILE        start with FILE when comparing directories"),
+  N_("    --from-file=FILE1           compare FILE1 to all operands;\n"
+     "                                  FILE1 can be a directory"),
+  N_("    --to-file=FILE2             compare all operands to FILE2;\n"
+     "                                  FILE2 can be a directory"),
+  "",
+  N_("-i, --ignore-case               ignore case differences in file contents"),
+  N_("-E, --ignore-tab-expansion      ignore changes due to tab expansion"),
+  N_("-Z, --ignore-trailing-space     ignore white space at line end"),
+  N_("-b, --ignore-space-change       ignore changes in the amount of white space"),
+  N_("-w, --ignore-all-space          ignore all white space"),
+  N_("-B, --ignore-blank-lines        ignore changes whose lines are all blank"),
+  N_("-I, --ignore-matching-lines=RE  ignore changes whose lines all match RE"),
   "",
-  N_("-i  --ignore-case  Ignore case differences in file contents."),
-  N_("--ignore-file-name-case  Ignore case when comparing file names."),
-  N_("--no-ignore-file-name-case  Consider case when comparing file names."),
-  N_("-E  --ignore-tab-expansion  Ignore changes due to tab expansion."),
-  N_("-b  --ignore-space-change  Ignore changes in the amount of white space."),
-  N_("-w  --ignore-all-space  Ignore all white space."),
-  N_("-B  --ignore-blank-lines  Ignore changes whose lines are all blank."),
-  N_("-I RE  --ignore-matching-lines=RE  Ignore changes whose lines all match RE."),
-  N_("--strip-trailing-cr  Strip trailing carriage return on input."),
+  N_("-a, --text                      treat all files as text"),
+  N_("    --strip-trailing-cr         strip trailing carriage return on input"),
 #if O_BINARY
-  N_("--binary  Read and write data in binary mode."),
+  N_("    --binary                    read and write data in binary mode"),
 #endif
-  N_("-a  --text  Treat all files as text."),
   "",
-  N_("-c  -C NUM  --context[=NUM]  Output NUM (default 3) lines of copied context.\n\
--u  -U NUM  --unified[=NUM]  Output NUM (default 3) lines of unified context.\n\
-  --label LABEL  Use LABEL instead of file name.\n\
-  -p  --show-c-function  Show which C function each change is in.\n\
-  -F RE  --show-function-line=RE  Show the most recent line matching RE."),
-  N_("-q  --brief  Output only whether files differ."),
-  N_("-e  --ed  Output an ed script."),
-  N_("--normal  Output a normal diff."),
-  N_("-n  --rcs  Output an RCS format diff."),
-  N_("-y  --side-by-side  Output in two columns.\n\
-  -W NUM  --width=NUM  Output at most NUM (default 130) print columns.\n\
-  --left-column  Output only the left column of common lines.\n\
-  --suppress-common-lines  Do not output common lines."),
-  N_("-D NAME  --ifdef=NAME  Output merged file to show `#ifdef NAME' diffs."),
-  N_("--GTYPE-group-format=GFMT  Similar, but format GTYPE input groups with GFMT."),
-  N_("--line-format=LFMT  Similar, but format all input lines with LFMT."),
-  N_("--LTYPE-line-format=LFMT  Similar, but format LTYPE input lines with LFMT."),
-  N_("  LTYPE is `old', `new', or `unchanged'.  GTYPE is LTYPE or `changed'."),
-  N_("  GFMT may contain:\n\
+  N_("-D, --ifdef=NAME                output merged file with '#ifdef NAME' diffs"),
+  N_("    --GTYPE-group-format=GFMT   format GTYPE input groups with GFMT"),
+  N_("    --line-format=LFMT          format all input lines with LFMT"),
+  N_("    --LTYPE-line-format=LFMT    format LTYPE input lines with LFMT"),
+  N_("  These format options provide fine-grained control over the output\n"
+     "    of diff, generalizing -D/--ifdef."),
+  N_("  LTYPE is 'old', 'new', or 'unchanged'.  GTYPE is LTYPE or 'changed'."),
+  N_("  GFMT (only) may contain:\n\
     %<  lines from FILE1\n\
     %>  lines from FILE2\n\
     %=  lines common to FILE1 and FILE2\n\
@@ -885,42 +923,28 @@ static char const * const option_help_msgid[] = {
         L  last line number\n\
         N  number of lines = L-F+1\n\
         E  F-1\n\
-        M  L+1"),
-  N_("  LFMT may contain:\n\
+        M  L+1\n\
+    %(A=B?T:E)  if A equals B then T else E"),
+  N_("  LFMT (only) may contain:\n\
     %L  contents of line\n\
     %l  contents of line, excluding any trailing newline\n\
     %[-][WIDTH][.[PREC]]{doxX}n  printf-style spec for input line number"),
-  N_("  Either GFMT or LFMT may contain:\n\
+  N_("  Both GFMT and LFMT may contain:\n\
     %%  %\n\
     %c'C'  the single character C\n\
-    %c'\\OOO'  the character with octal code OOO"),
+    %c'\\OOO'  the character with octal code OOO\n\
+    C    the character C (other characters represent themselves)"),
   "",
-  N_("-l  --paginate  Pass the output through `pr' to paginate it."),
-  N_("-t  --expand-tabs  Expand tabs to spaces in output."),
-  N_("-T  --initial-tab  Make tabs line up by prepending a tab."),
-  N_("--tabsize=NUM  Tab stops are every NUM (default 8) print columns."),
-  N_("--suppress-blank-empty  Suppress space or tab before empty output lines."),
+  N_("-d, --minimal            try hard to find a smaller set of changes"),
+  N_("    --horizon-lines=NUM  keep NUM lines of the common prefix and suffix"),
+  N_("    --speed-large-files  assume large files and many scattered small changes"),
   "",
-  N_("-r  --recursive  Recursively compare any subdirectories found."),
-  N_("-N  --new-file  Treat absent files as empty."),
-  N_("--unidirectional-new-file  Treat absent first files as empty."),
-  N_("-s  --report-identical-files  Report when two files are the same."),
-  N_("-x PAT  --exclude=PAT  Exclude files that match PAT."),
-  N_("-X FILE  --exclude-from=FILE  Exclude files that match any pattern in FILE."),
-  N_("-S FILE  --starting-file=FILE  Start with FILE when comparing directories."),
-  N_("--from-file=FILE1  Compare FILE1 to all operands.  FILE1 can be a directory."),
-  N_("--to-file=FILE2  Compare all operands to FILE2.  FILE2 can be a directory."),
+  N_("    --help               display this help and exit"),
+  N_("-v, --version            output version information and exit"),
   "",
-  N_("--horizon-lines=NUM  Keep NUM lines of the common prefix and suffix."),
-  N_("-d  --minimal  Try hard to find a smaller set of changes."),
-  N_("--speed-large-files  Assume large files and many scattered small changes."),
-  "",
-  N_("-v  --version  Output version info."),
-  N_("--help  Output this help."),
-  "",
-  N_("FILES are `FILE1 FILE2' or `DIR1 DIR2' or `DIR FILE...' or `FILE... DIR'."),
-  N_("If --from-file or --to-file is given, there are no restrictions on FILES."),
-  N_("If a FILE is `-', read standard input."),
+  N_("FILES are 'FILE1 FILE2' or 'DIR1 DIR2' or 'DIR FILE...' or 'FILE... DIR'."),
+  N_("If --from-file or --to-file is given, there are no restrictions on FILE(s)."),
+  N_("If a FILE is '-', read standard input."),
   N_("Exit status is 0 if inputs are the same, 1 if different, 2 if trouble."),
   0
 };
@@ -931,6 +955,11 @@ usage (void)
   char const * const *p;
 
   printf (_("Usage: %s [OPTION]... FILES\n"), program_name);
+  printf ("%s\n\n", _("Compare FILES line by line."));
+
+  fputs (_("\
+Mandatory arguments to long options are mandatory for short options too.\n\
+"), stdout);
 
   for (p = option_help_msgid;  *p;  p++)
     {
@@ -958,9 +987,9 @@ usage (void)
 static void
 specify_value (char const **var, char const *value, char const *option)
 {
-  if (*var && strcmp (*var, value) != 0)
+  if (*var && ! STREQ (*var, value))
     {
-      error (0, 0, _("conflicting %s option value `%s'"), option, value);
+      error (0, 0, _("conflicting %s option value '%s'"), option, value);
       try_help (NULL, NULL);
     }
   *var = value;
@@ -1067,9 +1096,9 @@ compare_files (struct comparison const *parent,
   else
     {
       cmp.file[0].name = free0
-	= dir_file_pathname (parent->file[0].name, name0);
+	= file_name_concat (parent->file[0].name, name0, NULL);
       cmp.file[1].name = free1
-	= dir_file_pathname (parent->file[1].name, name1);
+	= file_name_concat (parent->file[1].name, name1, NULL);
     }
 
   /* Stat the files.  */
@@ -1087,7 +1116,7 @@ compare_files (struct comparison const *parent,
 	    {
 	      cmp.file[f].desc = STDIN_FILENO;
 	      if (O_BINARY && binary && ! isatty (STDIN_FILENO))
-		xfreopen (NULL, "rb", stdin);
+		SET_BINARY (STDIN_FILENO);
 	      if (fstat (STDIN_FILENO, &cmp.file[f].stat) != 0)
 		cmp.file[f].desc = ERRNO_ENCODE (errno);
 	      else
@@ -1107,7 +1136,10 @@ compare_files (struct comparison const *parent,
 		  set_mtime_to_now (&cmp.file[f].stat);
 		}
 	    }
-	  else if (stat (cmp.file[f].name, &cmp.file[f].stat) != 0)
+	  else if ((no_dereference_symlinks
+		    ? lstat (cmp.file[f].name, &cmp.file[f].stat)
+		    : stat (cmp.file[f].name, &cmp.file[f].stat))
+		   != 0)
 	    cmp.file[f].desc = ERRNO_ENCODE (errno);
 	}
     }
@@ -1156,12 +1188,15 @@ compare_files (struct comparison const *parent,
       char const *fnm = cmp.file[fnm_arg].name;
       char const *dir = cmp.file[dir_arg].name;
       char const *filename = cmp.file[dir_arg].name = free0
-	= dir_file_pathname (dir, last_component (fnm));
+	= find_dir_file_pathname (dir, last_component (fnm));
 
       if (STREQ (fnm, "-"))
-	fatal ("cannot compare `-' to a directory");
+	fatal ("cannot compare '-' to a directory");
 
-      if (stat (filename, &cmp.file[dir_arg].stat) != 0)
+      if ((no_dereference_symlinks
+	   ? lstat (filename, &cmp.file[dir_arg].stat)
+	   : stat (filename, &cmp.file[dir_arg].stat))
+	  != 0)
 	{
 	  perror_with_name (filename);
 	  status = EXIT_TROUBLE;
@@ -1208,8 +1243,10 @@ compare_files (struct comparison const *parent,
     }
   else if ((DIR_P (0) | DIR_P (1))
 	   || (parent
-	       && (! S_ISREG (cmp.file[0].stat.st_mode)
-		   || ! S_ISREG (cmp.file[1].stat.st_mode))))
+	       && !((S_ISREG (cmp.file[0].stat.st_mode)
+		     || S_ISLNK (cmp.file[0].stat.st_mode))
+		    && (S_ISREG (cmp.file[1].stat.st_mode)
+			|| S_ISLNK  (cmp.file[1].stat.st_mode)))))
     {
       if (cmp.file[0].desc == NONEXISTENT || cmp.file[1].desc == NONEXISTENT)
 	{
@@ -1250,6 +1287,56 @@ compare_files (struct comparison const *parent,
 	  status = EXIT_FAILURE;
 	}
     }
+  else if (S_ISLNK (cmp.file[0].stat.st_mode)
+	   || S_ISLNK (cmp.file[1].stat.st_mode))
+    {
+      /* We get here only if we use lstat(), not stat().  */
+      assert (no_dereference_symlinks);
+
+      if (S_ISLNK (cmp.file[0].stat.st_mode)
+	  && S_ISLNK (cmp.file[1].stat.st_mode))
+	{
+	  /* Compare the values of the symbolic links.  */
+	  char *link_value[2] = { NULL, NULL };
+
+	  for (f = 0; f < 2; f++)
+	    {
+	      link_value[f] = xreadlink (cmp.file[f].name);
+	      if (link_value[f] == NULL)
+		{
+		  perror_with_name (cmp.file[f].name);
+		  status = EXIT_TROUBLE;
+		  break;
+		}
+	    }
+	  if (status == EXIT_SUCCESS)
+	    {
+	      if ( ! STREQ (link_value[0], link_value[1]))
+		{
+		  message ("Symbolic links %s and %s differ\n",
+			   cmp.file[0].name, cmp.file[1].name);
+		  /* This is a difference.  */
+		  status = EXIT_FAILURE;
+		}
+	    }
+	  for (f = 0; f < 2; f++)
+	    free (link_value[f]);
+	}
+      else
+	{
+	  /* We have two files that are not to be compared, because
+	     one of them is a symbolic link and the other one is not.  */
+
+	  message5 ("File %s is a %s while file %s is a %s\n",
+		    file_label[0] ? file_label[0] : cmp.file[0].name,
+		    file_type (&cmp.file[0].stat),
+		    file_label[1] ? file_label[1] : cmp.file[1].name,
+		    file_type (&cmp.file[1].stat));
+
+	  /* This is a difference.  */
+	  status = EXIT_FAILURE;
+	}
+    }
   else if (files_can_be_treated_as_binary
 	   && S_ISREG (cmp.file[0].stat.st_mode)
 	   && S_ISREG (cmp.file[1].stat.st_mode)
diff --git a/src/diff.h b/src/diff.h
index 71b33f4..4b6595c 100644
--- a/src/diff.h
+++ b/src/diff.h
@@ -1,6 +1,6 @@
 /* Shared definitions for GNU DIFF
 
-   Copyright (C) 1988-1989, 1991-1995, 1998, 2001-2002, 2004, 2009-2010 Free
+   Copyright (C) 1988-1989, 1991-1995, 1998, 2001-2002, 2004, 2009-2012 Free
    Software Foundation, Inc.
 
    This file is part of GNU DIFF.
@@ -61,7 +61,7 @@ enum output_style
   /* Output the differences in a unified context diff format (-u).  */
   OUTPUT_UNIFIED,
 
-  /* Output the differences as commands suitable for `ed' (-e).  */
+  /* Output the differences as commands suitable for 'ed' (-e).  */
   OUTPUT_ED,
 
   /* Output the diff as a forward ed script (-f).  */
@@ -98,7 +98,7 @@ XTERN bool text;
 XTERN lin horizon_lines;
 
 /* The significance of white space during comparisons.  */
-XTERN enum
+enum DIFF_white_space
 {
   /* All white space is significant (the default).  */
   IGNORE_NO_WHITE_SPACE,
@@ -106,12 +106,21 @@ XTERN enum
   /* Ignore changes due to tab expansion (-E).  */
   IGNORE_TAB_EXPANSION,
 
+  /* Ignore changes in trailing horizontal white space (-Z).  */
+  IGNORE_TRAILING_SPACE,
+
+  /* IGNORE_TAB_EXPANSION and IGNORE_TRAILING_SPACE are a special case
+     because they are independent and can be ORed together, yielding
+     IGNORE_TAB_EXPANSION_AND_TRAILING_SPACE.  */
+  IGNORE_TAB_EXPANSION_AND_TRAILING_SPACE,
+
   /* Ignore changes in horizontal white space (-b).  */
   IGNORE_SPACE_CHANGE,
 
   /* Ignore all horizontal white space (-w).  */
   IGNORE_ALL_SPACE
-} ignore_white_space;
+};
+XTERN enum DIFF_white_space ignore_white_space;
 
 /* Ignore changes that affect only blank lines (-B).  */
 XTERN bool ignore_blank_lines;
@@ -126,7 +135,11 @@ XTERN bool ignore_case;
 /* Ignore differences in case of letters in file names.  */
 XTERN bool ignore_file_name_case;
 
-/* File labels for `-c' output headers (--label).  */
+/* Act on symbolic links themselves rather than on their target
+   (--no-dereference).  */
+XTERN bool no_dereference_symlinks;
+
+/* File labels for '-c' output headers (--label).  */
 XTERN char *file_label[2];
 
 /* Regexp to identify function-header lines (-F).  */
@@ -202,8 +215,8 @@ XTERN bool minimal;
 /* The strftime format to use for time strings.  */
 XTERN char const *time_format;
 
-/* The result of comparison is an "edit script": a chain of `struct change'.
-   Each `struct change' represents one place where some lines are deleted
+/* The result of comparison is an "edit script": a chain of 'struct change'.
+   Each 'struct change' represents one place where some lines are deleted
    and some are inserted.
 
    LINE0 and LINE1 are the first affected lines in the two files (origin 0).
@@ -316,58 +329,64 @@ XTERN FILE *outfile;
 /* Declare various functions.  */
 
 /* analyze.c */
-int diff_2_files (struct comparison *);
+extern int diff_2_files (struct comparison *);
 
 /* context.c */
-void print_context_header (struct file_data[], bool);
-void print_context_script (struct change *, bool);
+extern void print_context_header (struct file_data[], bool);
+extern void print_context_script (struct change *, bool);
 
 /* dir.c */
-int diff_dirs (struct comparison const *, int (*) (struct comparison const *, char const *, char const *));
+extern int diff_dirs (struct comparison const *,
+                      int (*) (struct comparison const *,
+                               char const *, char const *));
+extern char *find_dir_file_pathname (char const *, char const *);
 
 /* ed.c */
-void print_ed_script (struct change *);
-void pr_forward_ed_script (struct change *);
+extern void print_ed_script (struct change *);
+extern void pr_forward_ed_script (struct change *);
 
 /* ifdef.c */
-void print_ifdef_script (struct change *);
+extern void print_ifdef_script (struct change *);
 
 /* io.c */
-void file_block_read (struct file_data *, size_t);
-bool read_files (struct file_data[], bool);
+extern void file_block_read (struct file_data *, size_t);
+extern bool read_files (struct file_data[], bool);
 
 /* normal.c */
-void print_normal_script (struct change *);
+extern void print_normal_script (struct change *);
 
 /* rcs.c */
-void print_rcs_script (struct change *);
+extern void print_rcs_script (struct change *);
 
 /* side.c */
-void print_sdiff_script (struct change *);
+extern void print_sdiff_script (struct change *);
 
 /* util.c */
 extern char const change_letter[4];
 extern char const pr_program[];
-char *concat (char const *, char const *, char const *);
-char *dir_file_pathname (char const *, char const *);
-bool lines_differ (char const *, char const *);
-lin translate_line_number (struct file_data const *, lin);
-struct change *find_change (struct change *);
-struct change *find_reverse_change (struct change *);
-void *zalloc (size_t);
-enum changes analyze_hunk (struct change *, lin *, lin *, lin *, lin *);
-void begin_output (void);
-void debug_script (struct change *);
-void fatal (char const *) __attribute__((noreturn));
-void finish_output (void);
-void message (char const *, char const *, char const *);
-void message5 (char const *, char const *, char const *, char const *, char const *);
-void output_1_line (char const *, char const *, char const *, char const *);
-void perror_with_name (char const *);
-void pfatal_with_name (char const *) __attribute__((noreturn));
-void print_1_line (char const *, char const * const *);
-void print_message_queue (void);
-void print_number_range (char, struct file_data *, lin, lin);
-void print_script (struct change *, struct change * (*) (struct change *), void (*) (struct change *));
-void setup_output (char const *, char const *, bool);
-void translate_range (struct file_data const *, lin, lin, long int *, long int *);
+extern char *concat (char const *, char const *, char const *);
+extern bool lines_differ (char const *, char const *) _GL_ATTRIBUTE_PURE;
+extern lin translate_line_number (struct file_data const *, lin);
+extern struct change *find_change (struct change *);
+extern struct change *find_reverse_change (struct change *);
+extern void *zalloc (size_t);
+extern enum changes analyze_hunk (struct change *, lin *, lin *, lin *, lin *);
+extern void begin_output (void);
+extern void debug_script (struct change *);
+extern void fatal (char const *) __attribute__((noreturn));
+extern void finish_output (void);
+extern void message (char const *, char const *, char const *);
+extern void message5 (char const *, char const *, char const *,
+                      char const *, char const *);
+extern void output_1_line (char const *, char const *, char const *,
+                           char const *);
+extern void perror_with_name (char const *);
+extern void pfatal_with_name (char const *) __attribute__((noreturn));
+extern void print_1_line (char const *, char const * const *);
+extern void print_message_queue (void);
+extern void print_number_range (char, struct file_data *, lin, lin);
+extern void print_script (struct change *, struct change * (*) (struct change *),
+                          void (*) (struct change *));
+extern void setup_output (char const *, char const *, bool);
+extern void translate_range (struct file_data const *, lin, lin,
+                             long int *, long int *);
diff --git a/src/diff3.c b/src/diff3.c
index 0f11fdc..3b01071 100644
--- a/src/diff3.c
+++ b/src/diff3.c
@@ -1,6 +1,6 @@
 /* diff3 - compare three files line by line
 
-   Copyright (C) 1988-1989, 1992-1996, 1998, 2001-2002, 2004, 2006, 2009-2010
+   Copyright (C) 1988-1989, 1992-1996, 1998, 2001-2002, 2004, 2006, 2009-2012
    Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
@@ -28,14 +28,13 @@
 #include <exitfail.h>
 #include <file-type.h>
 #include <getopt.h>
-#include <inttostr.h>
 #include <progname.h>
 #include <sh-quote.h>
 #include <version-etc.h>
 #include <xalloc.h>
 #include <xfreopen.h>
 
-/* The official name of this program (e.g., no `g' prefix).  */
+/* The official name of this program (e.g., no 'g' prefix).  */
 #define PROGRAM_NAME "diff3"
 
 #define AUTHORS \
@@ -159,7 +158,7 @@ static bool overlap_only;
 /* If nonzero, show information for DIFF_2ND diffs.  */
 static bool show_2nd;
 
-/* If nonzero, include `:wq' at the end of the script
+/* If nonzero, include ':wq' at the end of the script
    to write out the file being edited.   */
 static bool finalwrite;
 
@@ -280,7 +279,7 @@ main (int argc, char **argv)
 	  strip_trailing_cr = true;
 	  break;
 	case 'v':
-	  version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, PACKAGE_VERSION,
+	  version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, Version,
 		       AUTHORS, (char *) NULL);
 	  check_stdout ();
 	  return EXIT_SUCCESS;
@@ -316,9 +315,9 @@ main (int argc, char **argv)
   if (argc - optind != 3)
     {
       if (argc - optind < 3)
-	try_help ("missing operand after `%s'", argv[argc - 1]);
+	try_help ("missing operand after '%s'", argv[argc - 1]);
       else
-	try_help ("extra operand `%s'", argv[optind + 3]);
+	try_help ("extra operand '%s'", argv[optind + 3]);
     }
 
   file = &argv[optind];
@@ -351,7 +350,7 @@ main (int argc, char **argv)
 	 file instead.  */
       common = 3 - common;
       if (STREQ (file[0], "-") || STREQ (file[common], "-"))
-	fatal ("`-' specified for more than one input file");
+	fatal ("'-' specified for more than one input file");
     }
 
   mapping[0] = 0;
@@ -362,7 +361,7 @@ main (int argc, char **argv)
     rev_mapping[mapping[i]] = i;
 
   for (i = 0; i < 3; i++)
-    if (strcmp (file[i], "-") != 0)
+    if (! STREQ (file[i], "-"))
       {
 	if (stat (file[i], &statb) < 0)
 	  perror_with_exit (file[i]);
@@ -412,7 +411,7 @@ try_help (char const *reason_msgid, char const *operand)
   if (reason_msgid)
     error (0, 0, _(reason_msgid), operand);
   error (EXIT_TROUBLE, 0,
-	 _("Try `%s --help' for more information."), program_name);
+	 _("Try '%s --help' for more information."), program_name);
   abort ();
 }
 
@@ -426,23 +425,28 @@ check_stdout (void)
 }
 
 static char const * const option_help_msgid[] = {
-  N_("-e  --ed  Output unmerged changes from OLDFILE to YOURFILE into MYFILE."),
-  N_("-E  --show-overlap  Output unmerged changes, bracketing conflicts."),
-  N_("-A  --show-all  Output all changes, bracketing conflicts."),
-  N_("-x  --overlap-only  Output overlapping changes."),
-  N_("-X  Output overlapping changes, bracketing them."),
-  N_("-3  --easy-only  Output unmerged nonoverlapping changes."),
+  N_("-A, --show-all              output all changes, bracketing conflicts"),
   "",
-  N_("-m  --merge  Output merged file instead of ed script (default -A)."),
-  N_("-L LABEL  --label=LABEL  Use LABEL instead of file name."),
-  N_("-i  Append `w' and `q' commands to ed scripts."),
-  N_("-a  --text  Treat all files as text."),
-  N_("--strip-trailing-cr  Strip trailing carriage return on input."),
-  N_("-T  --initial-tab  Make tabs line up by prepending a tab."),
-  N_("--diff-program=PROGRAM  Use PROGRAM to compare files."),
+  N_("-e, --ed                    output ed script incorporating changes\n"
+     "                                from OLDFILE to YOURFILE into MYFILE"),
+  N_("-E, --show-overlap          like -e, but bracket conflicts"),
+  N_("-3, --easy-only             like -e, but incorporate only nonoverlapping changes"),
+  N_("-x, --overlap-only          like -e, but incorporate only overlapping changes"),
+  N_("-X                          like -x, but bracket conflicts"),
+  N_("-i                          append 'w' and 'q' commands to ed scripts"),
   "",
-  N_("-v  --version  Output version info."),
-  N_("--help  Output this help."),
+  N_("-m, --merge                 output actual merged file, according to\n"
+     "                                -A if no other options are given"),
+  "",
+  N_("-a, --text                  treat all files as text"),
+  N_("    --strip-trailing-cr     strip trailing carriage return on input"),
+  N_("-T, --initial-tab           make tabs line up by prepending a tab"),
+  N_("    --diff-program=PROGRAM  use PROGRAM to compare files"),
+  N_("-L, --label=LABEL           use LABEL instead of file name\n"
+     "                                (can be repeated up to three times)"),
+  "",
+  N_("    --help                  display this help and exit"),
+  N_("-v, --version               output version information and exit"),
   0
 };
 
@@ -454,13 +458,27 @@ usage (void)
   printf (_("Usage: %s [OPTION]... MYFILE OLDFILE YOURFILE\n"),
 	  program_name);
   printf ("%s\n\n", _("Compare three files line by line."));
+
+  fputs (_("\
+Mandatory arguments to long options are mandatory for short options too.\n\
+"), stdout);
   for (p = option_help_msgid;  *p;  p++)
     if (**p)
       printf ("  %s\n", _(*p));
     else
       putchar ('\n');
+  fputs (_("\n\
+The default output format is a somewhat human-readable representation of\n\
+the changes.\n\
+\n\
+The -e, -E, -x, -X (and corresponding long) options cause an ed script\n\
+to be output instead of the default.\n\
+\n\
+Finally, the -m (--merge) option causes diff3 to do the merge internally\n\
+and output the actual merged file.  For unusual input, this is more\n\
+robust than using ed.\n"), stdout);
   printf ("\n%s\n%s\n",
-	  _("If a FILE is `-', read standard input."),
+	  _("If a FILE is '-', read standard input."),
 	  _("Exit status is 0 if successful, 1 if conflicts, 2 if trouble."));
   emit_bug_reporting_address ();
 }
@@ -1027,7 +1045,7 @@ process_diff (char const *filea,
 
 /* Skip tabs and spaces, and return the first character after them.  */
 
-static char *
+static char * _GL_ATTRIBUTE_PURE
 skipwhite (char *s)
 {
   while (*s == ' ' || *s == '\t')
@@ -1144,7 +1162,7 @@ read_diff (char const *filea,
   int werrno = 0;
   struct stat pipestat;
 
-#if HAVE_WORKING_FORK || HAVE_WORKING_VFORK
+#if HAVE_WORKING_FORK
 
   char const *argv[9];
   char const **ap;
@@ -1166,7 +1184,7 @@ read_diff (char const *filea,
   if (pipe (fds) != 0)
     perror_with_exit ("pipe");
 
-  pid = vfork ();
+  pid = fork ();
   if (pid == 0)
     {
       /* Child */
@@ -1255,7 +1273,7 @@ read_diff (char const *filea,
 
   *output_placement = diff_result;
 
-#if ! (HAVE_WORKING_FORK || HAVE_WORKING_VFORK)
+#if ! HAVE_WORKING_FORK
 
   wstatus = pclose (fpipe);
   if (wstatus == -1)
@@ -1275,12 +1293,12 @@ read_diff (char const *filea,
   if (EXIT_TROUBLE <= status)
     error (EXIT_TROUBLE, werrno,
 	   _(status == 126
-	     ? "subsidiary program `%s' could not be invoked"
+	     ? "subsidiary program '%s' could not be invoked"
 	     : status == 127
-	     ? "subsidiary program `%s' not found"
+	     ? "subsidiary program '%s' not found"
 	     : status == INT_MAX
-	     ? "subsidiary program `%s' failed"
-	     : "subsidiary program `%s' failed (exit status %d)"),
+	     ? "subsidiary program '%s' failed"
+	     : "subsidiary program '%s' failed (exit status %d)"),
 	   diff_program, status);
 
   return diff_result + total;
@@ -1475,7 +1493,7 @@ undotlines (FILE *outputfile, bool leading_dot, long int start, lin num)
    around the problems involved with changing line numbers in an ed
    script.
 
-   As in `output_diff3', the variable MAPPING maps from file number
+   As in 'output_diff3', the variable MAPPING maps from file number
    according to the argument list to file number according to the diff
    passed.  All files listed below are in terms of the argument list.
    REV_MAPPING is the inverse of MAPPING.
diff --git a/src/dir.c b/src/dir.c
index 5b4eaec..57134c7 100644
--- a/src/dir.c
+++ b/src/dir.c
@@ -1,7 +1,7 @@
 /* Read, sort and compare two directories.  Used for GNU DIFF.
 
    Copyright (C) 1988-1989, 1992-1995, 1998, 2001-2002, 2004, 2006-2007,
-   2009-2010 Free Software Foundation, Inc.
+   2009-2012 Free Software Foundation, Inc.
 
    This file is part of GNU DIFF.
 
@@ -21,6 +21,7 @@
 #include "diff.h"
 #include <error.h>
 #include <exclude.h>
+#include <filenamecat.h>
 #include <setjmp.h>
 #include <xalloc.h>
 
@@ -84,7 +85,7 @@ dir_read (struct file_data const *dir, struct dirdata *dirdata)
       dirdata->data = data = xmalloc (data_alloc);
 
       /* Read the directory entries, and insert the subfiles
-	 into the `data' table.  */
+	 into the 'data' table.  */
 
       while ((errno = 0, (next = readdir (reading)) != 0))
 	{
@@ -125,7 +126,7 @@ dir_read (struct file_data const *dir, struct dirdata *dirdata)
 #endif
     }
 
-  /* Create the `names' table from the `data' table.  */
+  /* Create the 'names' table from the 'data' table.  */
   if (PTRDIFF_MAX / sizeof *names - 1 <= nnames)
     xalloc_die ();
   dirdata->names = names = xmalloc ((nnames + 1) * sizeof *names);
@@ -154,26 +155,26 @@ compare_names (char const *name1, char const *name2)
 	r = strcoll (name1, name2);
       if (errno)
 	{
-	  error (0, errno, _("cannot compare file names `%s' and `%s'"),
+	  error (0, errno, _("cannot compare file names '%s' and '%s'"),
 		 name1, name2);
 	  longjmp (failed_locale_specific_sorting, 1);
 	}
       return r;
     }
 
-  return (ignore_file_name_case
-	  ? strcasecmp (name1, name2)
-	  : file_name_cmp (name1, name2));
+  return file_name_cmp (name1, name2);
 }
 
-/* A wrapper for compare_names suitable as an argument for qsort.  */
+/* Compare names FILE1 and FILE2 when sorting a directory.
+   Prefer filtered comparison, breaking ties with file_name_cmp.  */
 
 static int
 compare_names_for_qsort (void const *file1, void const *file2)
 {
   char const *const *f1 = file1;
   char const *const *f2 = file2;
-  return compare_names (*f1, *f2);
+  int diff = compare_names (*f1, *f2);
+  return diff ? diff : file_name_cmp (*f1, *f2);
 }
 
 /* Compare the contents of two directories named in CMP.
@@ -234,7 +235,7 @@ diff_dirs (struct comparison const *cmp,
 	qsort (names[i], dirdata[i].nnames, sizeof *dirdata[i].names,
 	       compare_names_for_qsort);
 
-      /* If `-S name' was given, and this is the topmost level of comparison,
+      /* If '-S name' was given, and this is the topmost level of comparison,
 	 ignore all file names less than the specified starting name.  */
 
       if (starting_file && ! cmp->parent)
@@ -253,6 +254,41 @@ diff_dirs (struct comparison const *cmp,
 	     pretend the "next name" in that dir is very large.  */
 	  int nameorder = (!*names[0] ? 1 : !*names[1] ? -1
 			   : compare_names (*names[0], *names[1]));
+
+	  /* Prefer a file_name_cmp match if available.  This algorithm is
+	     O(N**2), where N is the number of names in a directory
+	     that compare_names says are all equal, but in practice N
+	     is so small it's not worth tuning.  */
+	  if (nameorder == 0)
+	    {
+	      int raw_order = file_name_cmp (*names[0], *names[1]);
+	      if (raw_order != 0)
+		{
+		  int greater_side = raw_order < 0;
+		  int lesser_side = 1 - greater_side;
+		  char const **lesser = names[lesser_side];
+		  char const *greater_name = *names[greater_side];
+		  char const **p;
+
+		  for (p = lesser + 1;
+		       *p && compare_names (*p, greater_name) == 0;
+		       p++)
+		    {
+		      int c = file_name_cmp (*p, greater_name);
+		      if (0 <= c)
+			{
+			  if (c == 0)
+			    {
+			      memmove (lesser + 1, lesser,
+				       (char *) p - (char *) lesser);
+			      *lesser = greater_name;
+			    }
+			  break;
+			}
+		    }
+		}
+	    }
+
 	  int v1 = (*handle_file) (cmp,
 				   0 < nameorder ? 0 : *names[0]++,
 				   nameorder < 0 ? 0 : *names[1]++);
@@ -272,7 +308,7 @@ diff_dirs (struct comparison const *cmp,
 
 /* Return nonzero if CMP is looping recursively in argument I.  */
 
-static bool
+static bool _GL_ATTRIBUTE_PURE
 dir_loop (struct comparison const *cmp, int i)
 {
   struct comparison const *p = cmp;
@@ -281,3 +317,48 @@ dir_loop (struct comparison const *cmp, int i)
       return true;
   return false;
 }
+
+/* Find a matching filename in a directory.  */
+
+char *
+find_dir_file_pathname (char const *dir, char const *file)
+{
+  char *val;
+  char const *match = file;
+  struct dirdata dirdata;
+  dirdata.names = NULL;
+  dirdata.data = NULL;
+
+  if (ignore_file_name_case)
+    {
+      struct file_data filedata;
+      filedata.name = dir;
+      filedata.desc = 0;
+
+      if (dir_read (&filedata, &dirdata))
+	{
+	  locale_specific_sorting = true;
+	  if (setjmp (failed_locale_specific_sorting))
+	    match = file; /* longjmp may mess up MATCH.  */
+	  else
+	    {
+	      for (char const **p = dirdata.names; *p; p++)
+		if (compare_names (*p, file) == 0)
+		  {
+		    if (file_name_cmp (*p, file) == 0)
+		      {
+			match = *p;
+			break;
+		      }
+		    if (match == file)
+		      match = *p;
+		  }
+	    }
+	}
+    }
+
+  val = file_name_concat (dir, match, NULL);
+  free (dirdata.names);
+  free (dirdata.data);
+  return val;
+}
diff --git a/src/ed.c b/src/ed.c
index 08acf50..66a0400 100644
--- a/src/ed.c
+++ b/src/ed.c
@@ -1,6 +1,6 @@
 /* Output routines for ed-script format.
 
-   Copyright (C) 1988-1989, 1991-1993, 1995, 1998, 2001, 2004, 2006, 2009-2010
+   Copyright (C) 1988-1989, 1991-1993, 1995, 1998, 2001, 2004, 2006, 2009-2012
    Free Software Foundation, Inc.
 
    This file is part of GNU DIFF.
diff --git a/src/ifdef.c b/src/ifdef.c
index a48f830..94f170b 100644
--- a/src/ifdef.c
+++ b/src/ifdef.c
@@ -1,6 +1,6 @@
 /* #ifdef-format output routines for GNU DIFF.
 
-   Copyright (C) 1989, 1991-1994, 2001-2002, 2004, 2006, 2009-2010 Free
+   Copyright (C) 1989, 1991-1994, 2001-2002, 2004, 2006, 2009-2012 Free
    Software Foundation, Inc.
 
    This file is part of GNU DIFF.
@@ -132,7 +132,7 @@ format_group (register FILE *out, char const *format, char endchar,
 	    break;
 
 	  case '(':
-	    /* Print if-then-else format e.g. `%(n=1?thenpart:elsepart)'.  */
+	    /* Print if-then-else format e.g. '%(n=1?thenpart:elsepart)'.  */
 	    {
 	      int i;
 	      uintmax_t value[2];
diff --git a/src/io.c b/src/io.c
index 031be3d..5a631a5 100644
--- a/src/io.c
+++ b/src/io.c
@@ -1,6 +1,6 @@
 /* File I/O for GNU DIFF.
 
-   Copyright (C) 1988-1989, 1992-1995, 1998, 2001-2002, 2004, 2006, 2009-2010
+   Copyright (C) 1988-1989, 1992-1995, 1998, 2001-2002, 2004, 2006, 2009-2012
    Free Software Foundation, Inc.
 
    This file is part of GNU DIFF.
@@ -57,10 +57,10 @@ static size_t nbuckets;
    The number of an equivalence class is its index in this array.  */
 static struct equivclass *equivs;
 
-/* Index of first free element in the array `equivs'.  */
+/* Index of first free element in the array 'equivs'.  */
 static lin equivs_index;
 
-/* Number of elements allocated in the array `equivs'.  */
+/* Number of elements allocated in the array 'equivs'.  */
 static lin equivs_alloc;
 
 /* Read a block of data into a file buffer, checking for EOF and error.  */
@@ -198,9 +198,7 @@ slurp (struct file_data *current)
 static void
 find_and_hash_each_line (struct file_data *current)
 {
-  hash_value h;
   char const *p = current->prefix_end;
-  unsigned char c;
   lin i, *bucket;
   size_t length;
 
@@ -215,122 +213,70 @@ find_and_hash_each_line (struct file_data *current)
   lin eqs_alloc = equivs_alloc;
   char const *suffix_begin = current->suffix_begin;
   char const *bufend = FILE_BUFFER (current) + current->buffered;
+  bool ig_case = ignore_case;
+  enum DIFF_white_space ig_white_space = ignore_white_space;
   bool diff_length_compare_anyway =
-    ignore_white_space != IGNORE_NO_WHITE_SPACE;
+    ig_white_space != IGNORE_NO_WHITE_SPACE;
   bool same_length_diff_contents_compare_anyway =
-    diff_length_compare_anyway | ignore_case;
+    diff_length_compare_anyway | ig_case;
 
   while (p < suffix_begin)
     {
       char const *ip = p;
-
-      h = 0;
+      hash_value h = 0;
+      unsigned char c;
 
       /* Hash this line until we find a newline.  */
-      if (ignore_case)
-	switch (ignore_white_space)
-	  {
-	  case IGNORE_ALL_SPACE:
-	    while ((c = *p++) != '\n')
-	      if (! isspace (c))
-		h = HASH (h, tolower (c));
-	    break;
-
-	  case IGNORE_SPACE_CHANGE:
-	    while ((c = *p++) != '\n')
-	      {
-		if (isspace (c))
-		  {
-		    do
-		      if ((c = *p++) == '\n')
-			goto hashing_done;
-		    while (isspace (c));
-
-		    h = HASH (h, ' ');
-		  }
-
-		/* C is now the first non-space.  */
-		h = HASH (h, tolower (c));
-	      }
-	    break;
+      switch (ig_white_space)
+	{
+	case IGNORE_ALL_SPACE:
+	  while ((c = *p++) != '\n')
+	    if (! isspace (c))
+	      h = HASH (h, ig_case ? tolower (c) : c);
+	  break;
 
-	  case IGNORE_TAB_EXPANSION:
+	case IGNORE_SPACE_CHANGE:
+	  while ((c = *p++) != '\n')
 	    {
-	      size_t column = 0;
-	      while ((c = *p++) != '\n')
+	      if (isspace (c))
 		{
-		  size_t repetitions = 1;
-
-		  switch (c)
-		    {
-		    case '\b':
-		      column -= 0 < column;
-		      break;
-
-		    case '\t':
-		      c = ' ';
-		      repetitions = tabsize - column % tabsize;
-		      column = (column + repetitions < column
-				? 0
-				: column + repetitions);
-		      break;
-
-		    case '\r':
-		      column = 0;
-		      break;
-
-		    default:
-		      c = tolower (c);
-		      column++;
-		      break;
-		    }
-
 		  do
-		    h = HASH (h, c);
-		  while (--repetitions != 0);
+		    if ((c = *p++) == '\n')
+		      goto hashing_done;
+		  while (isspace (c));
+
+		  h = HASH (h, ' ');
 		}
+
+	      /* C is now the first non-space.  */
+	      h = HASH (h, ig_case ? tolower (c) : c);
 	    }
-	    break;
+	  break;
 
-	  default:
-	    while ((c = *p++) != '\n')
-	      h = HASH (h, tolower (c));
-	    break;
-	  }
-      else
-	switch (ignore_white_space)
+	case IGNORE_TAB_EXPANSION:
+	case IGNORE_TAB_EXPANSION_AND_TRAILING_SPACE:
+	case IGNORE_TRAILING_SPACE:
 	  {
-	  case IGNORE_ALL_SPACE:
-	    while ((c = *p++) != '\n')
-	      if (! isspace (c))
-		h = HASH (h, c);
-	    break;
-
-	  case IGNORE_SPACE_CHANGE:
+	    size_t column = 0;
 	    while ((c = *p++) != '\n')
 	      {
-		if (isspace (c))
+		if (ig_white_space & IGNORE_TRAILING_SPACE
+		    && isspace (c))
 		  {
+		    char const *p1 = p;
+		    unsigned char c1;
 		    do
-		      if ((c = *p++) == '\n')
-			goto hashing_done;
-		    while (isspace (c));
-
-		    h = HASH (h, ' ');
+		      if ((c1 = *p1++) == '\n')
+			{
+			  p = p1;
+			  goto hashing_done;
+			}
+		    while (isspace (c1));
 		  }
 
-		/* C is now the first non-space.  */
-		h = HASH (h, c);
-	      }
-	    break;
-
-	  case IGNORE_TAB_EXPANSION:
-	    {
-	      size_t column = 0;
-	      while ((c = *p++) != '\n')
-		{
-		  size_t repetitions = 1;
+		size_t repetitions = 1;
 
+		if (ig_white_space & IGNORE_TAB_EXPANSION)
 		  switch (c)
 		    {
 		    case '\b':
@@ -354,18 +300,25 @@ find_and_hash_each_line (struct file_data *current)
 		      break;
 		    }
 
-		  do
-		    h = HASH (h, c);
-		  while (--repetitions != 0);
-		}
-	    }
-	    break;
+		if (ig_case)
+		  c = tolower (c);
+
+		do
+		  h = HASH (h, c);
+		while (--repetitions != 0);
+	      }
+	  }
+	  break;
 
-	  default:
+	default:
+	  if (ig_case)
+	    while ((c = *p++) != '\n')
+	      h = HASH (h, tolower (c));
+	  else
 	    while ((c = *p++) != '\n')
 	      h = HASH (h, c);
-	    break;
-	  }
+	  break;
+	}
 
    hashing_done:;
 
@@ -381,7 +334,7 @@ find_and_hash_each_line (struct file_data *current)
 	     complete line, put it into buckets[-1] so that it can
 	     compare equal only to the other file's incomplete line
 	     (if one exists).  */
-	  if (ignore_white_space < IGNORE_SPACE_CHANGE)
+	  if (ig_white_space < IGNORE_TRAILING_SPACE)
 	    bucket = &buckets[-1];
 	}
 
diff --git a/src/normal.c b/src/normal.c
index 154efaa..85b6c71 100644
--- a/src/normal.c
+++ b/src/normal.c
@@ -1,6 +1,6 @@
 /* Normal-format output routines for GNU DIFF.
 
-   Copyright (C) 1988-1989, 1993, 1995, 1998, 2001, 2006, 2009-2010 Free
+   Copyright (C) 1988-1989, 1993, 1995, 1998, 2001, 2006, 2009-2012 Free
    Software Foundation, Inc.
 
    This file is part of GNU DIFF.
diff --git a/src/sdiff.c b/src/sdiff.c
index 4344e8d..e1bb117 100644
--- a/src/sdiff.c
+++ b/src/sdiff.c
@@ -1,6 +1,6 @@
 /* sdiff - side-by-side merge of file differences
 
-   Copyright (C) 1992-1996, 1998, 2001-2002, 2004, 2006-2007, 2009-2010 Free
+   Copyright (C) 1992-1996, 1998, 2001-2002, 2004, 2006-2007, 2009-2012 Free
    Software Foundation, Inc.
 
    This file is part of GNU DIFF.
@@ -35,7 +35,7 @@
 #include <version-etc.h>
 #include <xalloc.h>
 
-/* The official name of this program (e.g., no `g' prefix).  */
+/* The official name of this program (e.g., no 'g' prefix).  */
 #define PROGRAM_NAME "sdiff"
 
 #define AUTHORS \
@@ -50,7 +50,7 @@ static char const **diffargv;
 static char * volatile tmpname;
 static FILE *tmp;
 
-#if HAVE_WORKING_FORK || HAVE_WORKING_VFORK
+#if HAVE_WORKING_FORK
 static pid_t volatile diffpid;
 #endif
 
@@ -85,14 +85,13 @@ static int const sigs[] = {
 #endif
 #ifdef SIGPIPE
        SIGPIPE,
-# define handler_index_of_SIGPIPE (NUM_SIGS - 2)
 #endif
        SIGINT
 #define handler_index_of_SIGINT (NUM_SIGS - 1)
 };
 
 #if HAVE_SIGACTION
-  /* Prefer `sigaction' if available, since `signal' can lose signals.  */
+  /* Prefer 'sigaction' if available, since 'signal' can lose signals.  */
   static struct sigaction initial_action[NUM_SIGS];
 # define initial_handler(i) (initial_action[i].sa_handler)
   static void signal_handler (int, void (*) (int));
@@ -102,29 +101,6 @@ static int const sigs[] = {
 # define signal_handler(sig, handler) signal (sig, handler)
 #endif
 
-#if ! HAVE_SIGPROCMASK
-# define sigset_t int
-# define sigemptyset(s) (*(s) = 0)
-# ifndef sigmask
-#  define sigmask(sig) (1 << ((sig) - 1))
-# endif
-# define sigaddset(s, sig) (*(s) |= sigmask (sig))
-# ifndef SIG_BLOCK
-#  define SIG_BLOCK 0
-# endif
-# ifndef SIG_SETMASK
-#  define SIG_SETMASK (! SIG_BLOCK)
-# endif
-# if ! HAVE_SIGBLOCK
-#  define sigblock(mask) (mask)
-#  define sigsetmask(mask) (mask)
-# endif
-# define sigprocmask(how, n, o) \
-    ((how) == SIG_BLOCK \
-     ? ((o) ? (*(sigset_t *) (o) = sigblock (*(n))) : sigblock (*(n))) \
-     : sigsetmask (*(n)))
-#endif
-
 static bool diraccess (char const *);
 static int temporary_file (void);
 
@@ -156,6 +132,7 @@ static struct option const longopts[] =
   {"ignore-matching-lines", 1, 0, 'I'},
   {"ignore-space-change", 0, 0, 'b'},
   {"ignore-tab-expansion", 0, 0, 'E'},
+  {"ignore-trailing-space", 0, 0, 'Z'},
   {"left-column", 0, 0, 'l'},
   {"minimal", 0, 0, 'd'},
   {"output", 1, 0, 'o'},
@@ -175,7 +152,7 @@ try_help (char const *reason_msgid, char const *operand)
 {
   if (reason_msgid)
     error (0, 0, _(reason_msgid), operand);
-  error (EXIT_TROUBLE, 0, _("Try `%s --help' for more information."),
+  error (EXIT_TROUBLE, 0, _("Try '%s --help' for more information."),
 	 program_name);
   abort ();
 }
@@ -190,30 +167,31 @@ check_stdout (void)
 }
 
 static char const * const option_help_msgid[] = {
-  N_("-o FILE  --output=FILE  Operate interactively, sending output to FILE."),
+  N_("-o, --output=FILE            operate interactively, sending output to FILE"),
   "",
-  N_("-i  --ignore-case  Consider upper- and lower-case to be the same."),
-  N_("-E  --ignore-tab-expansion  Ignore changes due to tab expansion."),
-  N_("-b  --ignore-space-change  Ignore changes in the amount of white space."),
-  N_("-W  --ignore-all-space  Ignore all white space."),
-  N_("-B  --ignore-blank-lines  Ignore changes whose lines are all blank."),
-  N_("-I RE  --ignore-matching-lines=RE  Ignore changes whose lines all match RE."),
-  N_("--strip-trailing-cr  Strip trailing carriage return on input."),
-  N_("-a  --text  Treat all files as text."),
+  N_("-i, --ignore-case            consider upper- and lower-case to be the same"),
+  N_("-E, --ignore-tab-expansion   ignore changes due to tab expansion"),
+  N_("-Z, --ignore-trailing-space  ignore white space at line end"),
+  N_("-b, --ignore-space-change    ignore changes in the amount of white space"),
+  N_("-W, --ignore-all-space       ignore all white space"),
+  N_("-B, --ignore-blank-lines     ignore changes whose lines are all blank"),
+  N_("-I, --ignore-matching-lines=RE  ignore changes whose lines all match RE"),
+  N_("    --strip-trailing-cr      strip trailing carriage return on input"),
+  N_("-a, --text                   treat all files as text"),
   "",
-  N_("-w NUM  --width=NUM  Output at most NUM (default 130) print columns."),
-  N_("-l  --left-column  Output only the left column of common lines."),
-  N_("-s  --suppress-common-lines  Do not output common lines."),
+  N_("-w, --width=NUM              output at most NUM (default 130) print columns"),
+  N_("-l, --left-column            output only the left column of common lines"),
+  N_("-s, --suppress-common-lines  do not output common lines"),
   "",
-  N_("-t  --expand-tabs  Expand tabs to spaces in output."),
-  N_("--tabsize=NUM  Tab stops are every NUM (default 8) print columns."),
+  N_("-t, --expand-tabs            expand tabs to spaces in output"),
+  N_("    --tabsize=NUM            tab stops at every NUM (default 8) print columns"),
   "",
-  N_("-d  --minimal  Try hard to find a smaller set of changes."),
-  N_("-H  --speed-large-files  Assume large files and many scattered small changes."),
-  N_("--diff-program=PROGRAM  Use PROGRAM to compare files."),
+  N_("-d, --minimal                try hard to find a smaller set of changes"),
+  N_("-H, --speed-large-files      assume large files, many scattered small changes"),
+  N_("    --diff-program=PROGRAM   use PROGRAM to compare files"),
   "",
-  N_("-v  --version  Output version info."),
-  N_("--help  Output this help."),
+  N_("    --help                   display this help and exit"),
+  N_("-v, --version                output version information and exit"),
   0
 };
 
@@ -223,14 +201,19 @@ usage (void)
   char const * const *p;
 
   printf (_("Usage: %s [OPTION]... FILE1 FILE2\n"), program_name);
-  printf ("%s\n\n", _("Side-by-side merge of file differences."));
+  printf ("%s\n\n",
+          _("Side-by-side merge of differences between FILE1 and FILE2."));
+
+  fputs (_("\
+Mandatory arguments to long options are mandatory for short options too.\n\
+"), stdout);
   for (p = option_help_msgid;  *p;  p++)
     if (**p)
       printf ("  %s\n", _(*p));
     else
       putchar ('\n');
   printf ("\n%s\n%s\n",
-	  _("If a FILE is `-', read standard input."),
+	  _("If a FILE is '-', read standard input."),
 	  _("Exit status is 0 if inputs are the same, 1 if different, 2 if trouble."));
   emit_bug_reporting_address ();
 }
@@ -240,7 +223,7 @@ usage (void)
 static void
 cleanup (int signo __attribute__((unused)))
 {
-#if HAVE_WORKING_FORK || HAVE_WORKING_VFORK
+#if HAVE_WORKING_FORK
   if (0 < diffpid)
     kill (diffpid, SIGPIPE);
 #endif
@@ -286,12 +269,12 @@ check_child_status (int werrno, int wstatus, int max_ok_status,
     {
       error (0, werrno,
 	     _(status == 126
-	       ? "subsidiary program `%s' could not be invoked"
+	       ? "subsidiary program '%s' could not be invoked"
 	       : status == 127
-	       ? "subsidiary program `%s' not found"
+	       ? "subsidiary program '%s' not found"
 	       : status == INT_MAX
-	       ? "subsidiary program `%s' failed"
-	       : "subsidiary program `%s' failed (exit status %d)"),
+	       ? "subsidiary program '%s' failed"
+	       : "subsidiary program '%s' failed (exit status %d)"),
 	     subsidiary_program, status);
       exiterr ();
     }
@@ -477,7 +460,7 @@ main (int argc, char *argv[])
   diffarg (DEFAULT_DIFF_PROGRAM);
 
   /* parse command line args */
-  while ((opt = getopt_long (argc, argv, "abBdEHiI:lo:stvw:W", longopts, 0))
+  while ((opt = getopt_long (argc, argv, "abBdEHiI:lo:stvw:WZ", longopts, 0))
 	 != -1)
     {
       switch (opt)
@@ -532,7 +515,7 @@ main (int argc, char *argv[])
 	  break;
 
 	case 'v':
-	  version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, PACKAGE_VERSION,
+	  version_etc (stdout, PROGRAM_NAME, PACKAGE_NAME, Version,
 		       AUTHORS, (char *) NULL);
 	  check_stdout ();
 	  return EXIT_SUCCESS;
@@ -546,6 +529,10 @@ main (int argc, char *argv[])
 	  diffarg ("-w");
 	  break;
 
+	case 'Z':
+	  diffarg ("-Z");
+	  break;
+
 	case DIFF_PROGRAM_OPTION:
 	  diffargv[0] = optarg;
 	  break;
@@ -572,9 +559,9 @@ main (int argc, char *argv[])
   if (argc - optind != 2)
     {
       if (argc - optind < 2)
-	try_help ("missing operand after `%s'", argv[argc - 1]);
+	try_help ("missing operand after '%s'", argv[argc - 1]);
       else
-	try_help ("extra operand `%s'", argv[optind + 2]);
+	try_help ("extra operand '%s'", argv[optind + 2]);
     }
 
   if (! output)
@@ -618,7 +605,7 @@ main (int argc, char *argv[])
 
       trapsigs ();
 
-#if ! (HAVE_WORKING_FORK || HAVE_WORKING_VFORK)
+#if ! HAVE_WORKING_FORK
       {
 	size_t cmdsize = 1;
 	char *p, *command;
@@ -642,22 +629,11 @@ main (int argc, char *argv[])
 #else
       {
 	int diff_fds[2];
-# if HAVE_WORKING_VFORK
-	sigset_t procmask;
-	sigset_t blocked;
-# endif
 
 	if (pipe (diff_fds) != 0)
 	  perror_fatal ("pipe");
 
-# if HAVE_WORKING_VFORK
-	/* Block SIGINT and SIGPIPE.  */
-	sigemptyset (&blocked);
-	sigaddset (&blocked, SIGINT);
-	sigaddset (&blocked, SIGPIPE);
-	sigprocmask (SIG_BLOCK, &blocked, &procmask);
-# endif
-	diffpid = vfork ();
+	diffpid = fork ();
 	if (diffpid < 0)
 	  perror_fatal ("fork");
 	if (! diffpid)
@@ -669,10 +645,6 @@ main (int argc, char *argv[])
 	    if (initial_handler (handler_index_of_SIGINT) != SIG_IGN)
 	      signal_handler (SIGINT, SIG_IGN);
 	    signal_handler (SIGPIPE, SIG_DFL);
-# if HAVE_WORKING_VFORK
-	    /* Stop blocking SIGINT and SIGPIPE in the child.  */
-	    sigprocmask (SIG_SETMASK, &procmask, 0);
-# endif
 	    close (diff_fds[0]);
 	    if (diff_fds[1] != STDOUT_FILENO)
 	      {
@@ -684,19 +656,6 @@ main (int argc, char *argv[])
 	    _exit (errno == ENOENT ? 127 : 126);
 	  }
 
-# if HAVE_WORKING_VFORK
-	/* Restore the parent's SIGINT and SIGPIPE behavior.  */
-	if (initial_handler (handler_index_of_SIGINT) != SIG_IGN)
-	  signal_handler (SIGINT, catchsig);
-	if (initial_handler (handler_index_of_SIGPIPE) != SIG_IGN)
-	  signal_handler (SIGPIPE, catchsig);
-	else
-	  signal_handler (SIGPIPE, SIG_IGN);
-
-	/* Stop blocking SIGINT and SIGPIPE in the parent.  */
-	sigprocmask (SIG_SETMASK, &procmask, 0);
-# endif
-
 	close (diff_fds[1]);
 	diffout = fdopen (diff_fds[0], "r");
 	if (! diffout)
@@ -718,7 +677,7 @@ main (int argc, char *argv[])
 	int wstatus;
 	int werrno = 0;
 
-#if ! (HAVE_WORKING_FORK || HAVE_WORKING_VFORK)
+#if ! HAVE_WORKING_FORK
 	wstatus = pclose (diffout);
 	if (wstatus == -1)
 	  werrno = errno;
@@ -747,7 +706,7 @@ main (int argc, char *argv[])
 	exit (WEXITSTATUS (wstatus));
       }
     }
-  return EXIT_SUCCESS;			/* Fool `-Wall'.  */
+  return EXIT_SUCCESS;			/* Fool '-Wall'.  */
 }
 
 static void
@@ -1065,7 +1024,7 @@ edit (struct line_filter *left, char const *lname, lin lline, lin llen,
 	      checksigs ();
 
 	      {
-#if ! (HAVE_WORKING_FORK || HAVE_WORKING_VFORK)
+#if ! HAVE_WORKING_FORK
 		char *command =
 		  xmalloc (shell_quote_length (editor_program)
 			   + 1 + strlen (tmpname) + 1);
@@ -1078,7 +1037,7 @@ edit (struct line_filter *left, char const *lname, lin lline, lin llen,
 #else
 		pid_t pid;
 
-		pid = vfork ();
+		pid = fork ();
 		if (pid == 0)
 		  {
 		    char const *argv[3];
diff --git a/src/side.c b/src/side.c
index 6aa96a9..076b898 100644
--- a/src/side.c
+++ b/src/side.c
@@ -1,6 +1,6 @@
 /* sdiff-format output routines for GNU DIFF.
 
-   Copyright (C) 1991-1993, 1998, 2001-2002, 2004, 2009-2010 Free Software
+   Copyright (C) 1991-1993, 1998, 2001-2002, 2004, 2009-2012 Free Software
    Foundation, Inc.
 
    This file is part of GNU DIFF.
@@ -292,7 +292,7 @@ print_sdiff_hunk (struct change *hunk)
       fprintf (outfile, "c%ld,%ld\n", len0, len1);
     }
 
-  /* Print ``xxx  |  xxx '' lines */
+  /* Print "xxx  |  xxx " lines.  */
   if (changes == CHANGED)
     {
       for (i = first0, j = first1;  i <= last0 && j <= last1;  i++, j++)
@@ -302,7 +302,7 @@ print_sdiff_hunk (struct change *hunk)
       next1 = first1 = j;
     }
 
-  /* Print ``     >  xxx '' lines */
+  /* Print "     >  xxx " lines.  */
   if (changes & NEW)
     {
       for (j = first1; j <= last1; ++j)
@@ -310,7 +310,7 @@ print_sdiff_hunk (struct change *hunk)
       next1 = j;
     }
 
-  /* Print ``xxx  <     '' lines */
+  /* Print "xxx  <     " lines.  */
   if (changes & OLD)
     {
       for (i = first0; i <= last0; ++i)
diff --git a/src/system.h b/src/system.h
index 8942296..2767b57 100644
--- a/src/system.h
+++ b/src/system.h
@@ -1,6 +1,6 @@
 /* System dependent declarations.
 
-   Copyright (C) 1988-1989, 1992-1995, 1998, 2001-2002, 2004, 2006, 2009-2010
+   Copyright (C) 1988-1989, 1992-1995, 1998, 2001-2002, 2004, 2006, 2009-2012
    Free Software Foundation, Inc.
 
    This file is part of GNU DIFF.
@@ -20,14 +20,14 @@
 
 #include <config.h>
 
-/* Use this to suppress gcc's `...may be used before initialized' warnings. */
+/* Use this to suppress gcc's "...may be used before initialized" warnings. */
 #ifdef lint
 # define IF_LINT(Code) Code
 #else
 # define IF_LINT(Code) /* empty */
 #endif
 
-/* Define `__attribute__' and `volatile' first
+/* Define '__attribute__' and 'volatile' first
    so that they're used consistently in all system includes.  */
 #if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 6) || __STRICT_ANSI__
 # define __attribute__(x)
@@ -54,12 +54,6 @@
 #include <time.h>
 
 #include <sys/wait.h>
-#ifndef WEXITSTATUS
-# define WEXITSTATUS(stat_val) ((unsigned int) (stat_val) >> 8)
-#endif
-#ifndef WIFEXITED
-# define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
-#endif
 
 #include <dirent.h>
 #ifndef _D_EXACT_NAMLEN
@@ -105,19 +99,12 @@ int strcasecmp (char const *, char const *);
    - It's typically faster.
    POSIX 1003.1-2001 says that only '0' through '9' are digits.
    Prefer ISDIGIT to isdigit unless it's important to use the locale's
-   definition of `digit' even when the host does not conform to POSIX.  */
+   definition of 'digit' even when the host does not conform to POSIX.  */
 #define ISDIGIT(c) ((unsigned int) (c) - '0' <= 9)
 
 #include <errno.h>
 
 #include <signal.h>
-#ifndef SA_RESTART
-# ifdef SA_INTERRUPT /* e.g. SunOS 4.1.x */
-#  define SA_RESTART SA_INTERRUPT
-# else
-#  define SA_RESTART 0
-# endif
-#endif
 #if !defined SIGCHLD && defined SIGCLD
 # define SIGCHLD SIGCLD
 #endif
@@ -128,17 +115,9 @@ int strcasecmp (char const *, char const *);
 #define MAX(a, b) ((a) >= (b) ? (a) : (b))
 
 #include <stdbool.h>
-
-#if HAVE_VFORK_H
-# include <vfork.h>
-#endif
-
-#if ! HAVE_WORKING_VFORK
-# define vfork fork
-#endif
-
 #include <intprops.h>
 #include "propername.h"
+#include "version.h"
 
 /* Type used for fast comparison of several bytes at a time.  */
 
diff --git a/src/util.c b/src/util.c
index 3be03e9..2b0bbbf 100644
--- a/src/util.c
+++ b/src/util.c
@@ -1,6 +1,6 @@
 /* Support routines for GNU DIFF.
 
-   Copyright (C) 1988-1989, 1992-1995, 1998, 2001-2002, 2004, 2006, 2009-2010
+   Copyright (C) 1988-1989, 1992-1995, 1998, 2001-2002, 2004, 2006, 2009-2012
    Free Software Foundation, Inc.
 
    This file is part of GNU DIFF.
@@ -27,7 +27,7 @@
 char const pr_program[] = PR_PROGRAM;
 
 /* Queue up one-line messages to be printed at the end,
-   when -l is specified.  Each message is recorded with a `struct msg'.  */
+   when -l is specified.  Each message is recorded with a 'struct msg'.  */
 
 struct msg
 {
@@ -121,7 +121,7 @@ message5 (char const *format_msgid, char const *arg1, char const *arg2,
     }
 }
 
-/* Output all the messages that were saved up by calls to `message'.  */
+/* Output all the messages that were saved up by calls to 'message'.  */
 
 void
 print_message_queue (void)
@@ -146,8 +146,8 @@ print_message_queue (void)
    to set up OUTFILE, the stdio stream for the output to go to.
 
    Usually, OUTFILE is just stdout.  But when -l was specified
-   we fork off a `pr' and make OUTFILE a pipe to it.
-   `pr' then outputs to our stdout.  */
+   we fork off a 'pr' and make OUTFILE a pipe to it.
+   'pr' then outputs to our stdout.  */
 
 static char const *current_name0;
 static char const *current_name1;
@@ -162,7 +162,7 @@ setup_output (char const *name0, char const *name1, bool recursive)
   outfile = 0;
 }
 
-#if HAVE_WORKING_FORK || HAVE_WORKING_VFORK
+#if HAVE_WORKING_FORK
 static pid_t pr_pid;
 #endif
 
@@ -190,15 +190,15 @@ begin_output (void)
       if (fflush (stdout) != 0)
 	pfatal_with_name (_("write failed"));
 
-      /* Make OUTFILE a pipe to a subsidiary `pr'.  */
+      /* Make OUTFILE a pipe to a subsidiary 'pr'.  */
       {
-#if HAVE_WORKING_FORK || HAVE_WORKING_VFORK
+#if HAVE_WORKING_FORK
 	int pipes[2];
 
 	if (pipe (pipes) != 0)
 	  pfatal_with_name ("pipe");
 
-	pr_pid = vfork ();
+	pr_pid = fork ();
 	if (pr_pid < 0)
 	  pfatal_with_name ("fork");
 
@@ -241,7 +241,7 @@ begin_output (void)
   else
     {
 
-      /* If -l was not specified, output the diff straight to `stdout'.  */
+      /* If -l was not specified, output the diff straight to 'stdout'.  */
 
       outfile = stdout;
 
@@ -270,7 +270,7 @@ begin_output (void)
 }
 
 /* Call after the end of output of diffs for one file.
-   Close OUTFILE and get rid of the `pr' subfork.  */
+   Close OUTFILE and get rid of the 'pr' subfork.  */
 
 void
 finish_output (void)
@@ -282,7 +282,7 @@ finish_output (void)
       int werrno = 0;
       if (ferror (outfile))
 	fatal ("write failed");
-#if ! (HAVE_WORKING_FORK || HAVE_WORKING_VFORK)
+#if ! HAVE_WORKING_FORK
       wstatus = pclose (outfile);
       if (wstatus == -1)
 	werrno = errno;
@@ -298,12 +298,12 @@ finish_output (void)
       if (status)
 	error (EXIT_TROUBLE, werrno,
 	       _(status == 126
-		 ? "subsidiary program `%s' could not be invoked"
+		 ? "subsidiary program '%s' could not be invoked"
 		 : status == 127
-		 ? "subsidiary program `%s' not found"
+		 ? "subsidiary program '%s' not found"
 		 : status == INT_MAX
-		 ? "subsidiary program `%s' failed"
-		 : "subsidiary program `%s' failed (exit status %d)"),
+		 ? "subsidiary program '%s' failed"
+		 : "subsidiary program '%s' failed (exit status %d)"),
 	       pr_program, status);
     }
 
@@ -395,6 +395,33 @@ lines_differ (char const *s1, char const *s2)
 
 	      break;
 
+	    case IGNORE_TRAILING_SPACE:
+	    case IGNORE_TAB_EXPANSION_AND_TRAILING_SPACE:
+	      if (isspace (c1) && isspace (c2))
+		{
+		  unsigned char c;
+		  if (c1 != '\n')
+		    {
+		      char const *p = t1;
+		      while ((c = *p) != '\n' && isspace (c))
+			++p;
+		      if (c != '\n')
+			break;
+		    }
+		  if (c2 != '\n')
+		    {
+		      char const *p = t2;
+		      while ((c = *p) != '\n' && isspace (c))
+			++p;
+		      if (c != '\n')
+			break;
+		    }
+		  /* Both lines have nothing but whitespace left.  */
+		  return false;
+		}
+	      if (ignore_white_space == IGNORE_TRAILING_SPACE)
+		break;
+	      /* Fall through.  */
 	    case IGNORE_TAB_EXPANSION:
 	      if ((c1 == ' ' && c2 == '\t')
 		  || (c1 == '\t' && c2 == ' '))
@@ -450,13 +477,13 @@ lines_differ (char const *s1, char const *s2)
 /* Find the consecutive changes at the start of the script START.
    Return the last link before the first gap.  */
 
-struct change *
+struct change * _GL_ATTRIBUTE_CONST
 find_change (struct change *start)
 {
   return start;
 }
 
-struct change *
+struct change * _GL_ATTRIBUTE_CONST
 find_reverse_change (struct change *start)
 {
   return start;
@@ -608,7 +635,7 @@ char const change_letter[] = { 0, 'd', 'a', 'c' };
    Internal line numbers count from 0 starting after the prefix.
    Actual line numbers count from 1 within the entire file.  */
 
-lin
+lin _GL_ATTRIBUTE_PURE
 translate_line_number (struct file_data const *file, lin i)
 {
   return i + file->prefix_lines + 1;
@@ -650,7 +677,7 @@ print_number_range (char sepchar, struct file_data *file, lin a, lin b)
 
 /* Look at a hunk of edit script and report the range of lines in each file
    that it applies to.  HUNK is the start of the hunk, which is a chain
-   of `struct change'.  The first and last line numbers of file 0 are stored in
+   of 'struct change'.  The first and last line numbers of file 0 are stored in
    *FIRST0 and *LAST0, and likewise for file 1 in *FIRST1 and *LAST1.
    Note that these are internal line numbers that count from 0.
 
@@ -674,8 +701,11 @@ analyze_hunk (struct change *hunk,
   size_t trivial_length = ignore_blank_lines - 1;
     /* If 0, ignore zero-length lines;
        if SIZE_MAX, do not ignore lines just because of their length.  */
+
+  bool skip_white_space =
+    ignore_blank_lines && IGNORE_TRAILING_SPACE <= ignore_white_space;
   bool skip_leading_white_space =
-    (ignore_blank_lines && IGNORE_SPACE_CHANGE <= ignore_white_space);
+    skip_white_space && IGNORE_SPACE_CHANGE <= ignore_white_space;
 
   char const * const *linbuf0 = files[0].linbuf;  /* Help the compiler.  */
   char const * const *linbuf1 = files[1].linbuf;
@@ -699,9 +729,14 @@ analyze_hunk (struct change *hunk,
 	  char const *newline = linbuf0[i + 1] - 1;
 	  size_t len = newline - line;
 	  char const *p = line;
-	  if (skip_leading_white_space)
-	    while (isspace ((unsigned char) *p) && *p != '\n')
-	      p++;
+	  if (skip_white_space)
+	    for (; *p != '\n'; p++)
+	      if (! isspace ((unsigned char) *p))
+		{
+		  if (! skip_leading_white_space)
+		    p = line;
+		  break;
+		}
 	  if (newline - p != trivial_length
 	      && (! ignore_regexp.fastmap
 		  || re_search (&ignore_regexp, line, len, 0, len, 0) < 0))
@@ -714,9 +749,14 @@ analyze_hunk (struct change *hunk,
 	  char const *newline = linbuf1[i + 1] - 1;
 	  size_t len = newline - line;
 	  char const *p = line;
-	  if (skip_leading_white_space)
-	    while (isspace ((unsigned char) *p) && *p != '\n')
-	      p++;
+	  if (skip_white_space)
+	    for (; *p != '\n'; p++)
+	      if (! isspace ((unsigned char) *p))
+		{
+		  if (! skip_leading_white_space)
+		    p = line;
+		  break;
+		}
 	  if (newline - p != trivial_length
 	      && (! ignore_regexp.fastmap
 		  || re_search (&ignore_regexp, line, len, 0, len, 0) < 0))
@@ -756,18 +796,6 @@ zalloc (size_t size)
   memset (p, 0, size);
   return p;
 }
-
-/* Yield the newly malloc'd pathname
-   of the file in DIR whose filename is FILE.  */
-
-char *
-dir_file_pathname (char const *dir, char const *file)
-{
-  char const *base = last_component (dir);
-  size_t baselen = base_len (base);
-  bool omit_slash = baselen == 0 || base[baselen - 1] == '/';
-  return concat (dir, "/" + omit_slash, file);
-}
 
 void
 debug_script (struct change *sp)
diff --git a/tests/Makefile.am b/tests/Makefile.am
index 6a4858c..2f6ad53 100644
--- a/tests/Makefile.am
+++ b/tests/Makefile.am
@@ -1,9 +1,14 @@
+# tests for GNU diff
+
 TESTS = \
   basic \
   binary \
+  colliding-file-names \
+  excess-slash \
   help-version	\
   function-line-vs-leading-space \
   label-vs-func	\
+  no-dereference \
   no-newline-at-eof \
   stdin
 
@@ -17,22 +22,6 @@ EXTRA_DIST = \
 TESTS_ENVIRONMENT =				\
   tmp__=$$TMPDIR; test -d "$$tmp__" || tmp__=.;	\
   TMPDIR=$$tmp__; export TMPDIR;		\
-  exec 9>&2;					\
-  shell_or_perl_() {				\
-    if grep '^\#!/usr/bin/perl' "$$1" > /dev/null; then			\
-      if $(PERL) -e 'use warnings' > /dev/null 2>&1; then		\
-	grep '^\#!/usr/bin/perl -T' "$$1" > /dev/null && T_=T || T_=;	\
-        $(PERL) -w$$T_ -I$(srcdir) -MCoreutils				\
-	      -M"CuTmpdir qw($$f)" -- "$$1";	\
-      else					\
-	echo 1>&2 "$$tst: configure did not find a usable version of Perl," \
-	  "so skipping this test";		\
-	(exit 77);				\
-      fi;					\
-    else					\
-      $(SHELL) "$$1";				\
-    fi;						\
-  };						\
   export					\
   VERSION='$(VERSION)'				\
   abs_top_builddir='$(abs_top_builddir)'	\
@@ -51,7 +40,9 @@ TESTS_ENVIRONMENT =				\
   PREFERABLY_POSIX_SHELL='$(PREFERABLY_POSIX_SHELL)' \
   REPLACE_GETCWD=$(REPLACE_GETCWD)		\
   PATH='$(abs_top_builddir)/src$(PATH_SEPARATOR)'"$$PATH" \
-  ; shell_or_perl_
+  ; 9>&2
+
+LOG_COMPILER= $(SHELL)
 
 built_programs =							\
   echo 'spy:;@echo $$(PROGRAMS)'					\
diff --git a/tests/basic b/tests/basic
index bfee8bd..45b9c9c 100755
--- a/tests/basic
+++ b/tests/basic
@@ -1,8 +1,7 @@
 #!/bin/sh
 # small examples
 
-: ${srcdir=.}
-. "$srcdir/init.sh"; path_prepend_ ../src
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
 
 fail=0
 
@@ -37,7 +36,7 @@ for opt in '' -u -c; do
   diff $opt a b > out 2> err; test $? = 1 || fail=1
   # Remove date and time.
   sed -e 's/^\([-+*][-+*][-+*] [^	]*\)	.*/\1/' out > k; mv k out
-  compare out exp-$(echo $opt|tr ' ' _) || fail=1
+  compare exp-$(echo $opt|tr ' ' _) out || fail=1
 done
 
 Exit $fail
diff --git a/tests/binary b/tests/binary
old mode 100644
new mode 100755
index c66ea04..d7b3943
--- a/tests/binary
+++ b/tests/binary
@@ -1,8 +1,7 @@
 #!/bin/sh
 # small examples
 
-: ${srcdir=.}
-. "$srcdir/init.sh"; path_prepend_ ../src
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
 
 printf 'Binary files - and /dev/null differ\n' > out-exp || fail_ setup
 
@@ -12,7 +11,7 @@ printf '\0'|diff - /dev/null > out 2> err
 
 # diff must exit with status 2, stdout as above, and no stderr.
 test $? = 2 || fail=1
-compare out out-exp || fail=1
-compare err /dev/null || fail=1
+compare out-exp out || fail=1
+compare /dev/null err || fail=1
 
 Exit $fail
diff --git a/tests/colliding-file-names b/tests/colliding-file-names
new file mode 100755
index 0000000..964d026
--- /dev/null
+++ b/tests/colliding-file-names
@@ -0,0 +1,19 @@
+#!/bin/sh
+# Check that diff responds well if a directory has multiple file names
+# that compare equal.
+
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
+
+mkdir d1 d2 || fail=1
+
+for i in abc abC aBc aBC; do
+ echo xyz >d1/$i || fail=1
+done
+
+for i in ABC ABc AbC Abc; do
+ echo xyz >d2/$i || fail=1
+done
+
+diff -r --ignore-file-name-case d1 d2 || fail=1
+
+Exit $fail
diff --git a/tests/excess-slash b/tests/excess-slash
new file mode 100755
index 0000000..22c2060
--- /dev/null
+++ b/tests/excess-slash
@@ -0,0 +1,18 @@
+#!/bin/sh
+# Ensure that no excess slash appears in diff -r output.
+
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
+
+mkdir -p a/f b/f/g || framework_failure_
+echo Only in b/f: g > expected-out || framework_failure_
+
+fail=0
+
+diff -r a b/ > out 2> err && fail=1
+
+# expect no stderr
+compare /dev/null err || fail=1
+
+compare expected-out out || fail=1
+
+Exit $fail
diff --git a/tests/function-line-vs-leading-space b/tests/function-line-vs-leading-space
index 62fd021..572427c 100755
--- a/tests/function-line-vs-leading-space
+++ b/tests/function-line-vs-leading-space
@@ -1,8 +1,7 @@
 #!/bin/sh
 # Demonstrate how -F RE behavior changed after diff-2.9.
 
-: ${srcdir=.}
-. "$srcdir/init.sh"; path_prepend_ ../src
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
 
 cat <<EOF > in || fail_ "failed to create temporary file"
 procedure AdaCode is
@@ -56,11 +55,11 @@ fail=0
 diff -u -F '^[[:space:]]*\(function\|procedure\)' in in2 > out 2> err
 test $? = 1 || fail=1
 
-tail -n+3 out > k && mv k out || fail=1
+sed -n '3,$p' out > k && mv k out || fail=1
 
-compare out exp || fail=1
+compare exp out || fail=1
 
 # expect empty stderr
-compare err /dev/null || fail=1
+compare /dev/null err || fail=1
 
 Exit $fail
diff --git a/tests/help-version b/tests/help-version
index 9d7d11d..bc9edce 100755
--- a/tests/help-version
+++ b/tests/help-version
@@ -2,7 +2,7 @@
 # Make sure all these programs work properly
 # when invoked with --help or --version.
 
-# Copyright (C) 2000-2010 Free Software Foundation, Inc.
+# Copyright (C) 2000-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -23,8 +23,7 @@
 test "x$SHELL" = x && SHELL=/bin/sh
 export SHELL
 
-: ${srcdir=.}
-. "$srcdir/init.sh"; path_prepend_ ../src
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
 
 expected_failure_status_chroot=125
 expected_failure_status_env=125
@@ -75,7 +74,7 @@ test "x$v" = "x$VERSION" \
 for lang in C fr da; do
   for i in $built_programs; do
 
-    # Skip `test'; it doesn't accept --help or --version.
+    # Skip 'test'; it doesn't accept --help or --version.
     test $i = test && continue;
 
     # false fails even when invoked with --help or --version.
@@ -85,7 +84,7 @@ for lang in C fr da; do
       continue
     fi
 
-    # The just-built install executable is always named `ginstall'.
+    # The just-built install executable is always named 'ginstall'.
     test $i = install && i=ginstall
 
     # Make sure they exit successfully, under normal conditions.
@@ -96,7 +95,7 @@ for lang in C fr da; do
     grep "$PACKAGE_BUGREPORT" h-$i > /dev/null || fail=1
     rm -f h-$i
 
-    # Make sure they fail upon `disk full' error.
+    # Make sure they fail upon 'disk full' error.
     if test -w /dev/full && test -c /dev/full; then
       env $i --help    >/dev/full 2>/dev/null && fail=1
       env $i --version >/dev/full 2>/dev/null && fail=1
@@ -108,7 +107,7 @@ for lang in C fr da; do
         : # ok
       else
         fail=1
-        echo "*** $i: bad exit status \`$status' (expected $expected)," 1>&2
+        echo "*** $i: bad exit status '$status' (expected $expected)," 1>&2
         echo "  with --help or --version output redirected to /dev/full" 1>&2
       fi
     fi
@@ -140,7 +139,7 @@ chown_setup () { args=--version; }
 mkfifo_setup () { args=--version; }
 mknod_setup () { args=--version; }
 # Punt on uptime, since it fails (e.g., failing to get boot time)
-# on some systems, and we shouldn't let that stop `make check'.
+# on some systems, and we shouldn't let that stop 'make check'.
 uptime_setup () { args=--version; }
 
 # Create a file in the current directory, not in $TMPDIR.
@@ -188,7 +187,7 @@ basename_setup () { args=$tmp_in; }
 dirname_setup () { args=$tmp_in; }
 expr_setup () { args=foo; }
 
-# Punt, in case GNU `id' hasn't been installed yet.
+# Punt, in case GNU 'id' hasn't been installed yet.
 groups_setup () { args=--version; }
 
 pathchk_setup () { args=$tmp_in; }
diff --git a/tests/init.sh b/tests/init.sh
index 512e876..5985552 100644
--- a/tests/init.sh
+++ b/tests/init.sh
@@ -1,6 +1,6 @@
 # source this file; set up for tests
 
-# Copyright (C) 2009, 2010 Free Software Foundation, Inc.
+# Copyright (C) 2009-2012 Free Software Foundation, Inc.
 
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -21,11 +21,16 @@
 # The typical skeleton of a test looks like this:
 #
 #   #!/bin/sh
-#   : ${srcdir=.}
-#   . "$srcdir/init.sh"; path_prepend_ .
+#   . "${srcdir=.}/init.sh"; path_prepend_ .
 #   Execute some commands.
 #   Note that these commands are executed in a subdirectory, therefore you
 #   need to prepend "../" to relative filenames in the build directory.
+#   Note that the "path_prepend_ ." is useful only if the body of your
+#   test invokes programs residing in the initial directory.
+#   For example, if the programs you want to test are in src/, and this test
+#   script is named tests/test-1, then you would use "path_prepend_ ../src",
+#   or perhaps export PATH='$(abs_top_builddir)/src$(PATH_SEPARATOR)'"$$PATH"
+#   to all tests via automake's TESTS_ENVIRONMENT.
 #   Set the exit code 0 for success, 77 for skipped, or 1 or other for failure.
 #   Use the skip_ and fail_ functions to print a diagnostic and then exit
 #   with the corresponding exit code.
@@ -52,82 +57,272 @@
 #   4. Finally
 #   $ exit
 
+ME_=`expr "./$0" : '.*/\(.*\)$'`
+
+# We use a trap below for cleanup.  This requires us to go through
+# hoops to get the right exit status transported through the handler.
+# So use 'Exit STATUS' instead of 'exit STATUS' inside of the tests.
+# Turn off errexit here so that we don't trip the bug with OSF1/Tru64
+# sh inside this function.
+Exit () { set +e; (exit $1); exit $1; }
+
+# Print warnings (e.g., about skipped and failed tests) to this file number.
+# Override by defining to say, 9, in init.cfg, and putting say,
+#   export ...ENVVAR_SETTINGS...; $(SHELL) 9>&2
+# in the definition of TESTS_ENVIRONMENT in your tests/Makefile.am file.
+# This is useful when using automake's parallel tests mode, to print
+# the reason for skip/failure to console, rather than to the .log files.
+: ${stderr_fileno_=2}
+
+# Note that correct expansion of "$*" depends on IFS starting with ' '.
+# Always write the full diagnostic to stderr.
+# When stderr_fileno_ is not 2, also emit the first line of the
+# diagnostic to that file descriptor.
+warn_ ()
+{
+  # If IFS does not start with ' ', set it and emit the warning in a subshell.
+  case $IFS in
+    ' '*) printf '%s\n' "$*" >&2
+          test $stderr_fileno_ = 2 \
+            || { printf '%s\n' "$*" | sed 1q >&$stderr_fileno_ ; } ;;
+    *) (IFS=' '; warn_ "$@");;
+  esac
+}
+fail_ () { warn_ "$ME_: failed test: $@"; Exit 1; }
+skip_ () { warn_ "$ME_: skipped test: $@"; Exit 77; }
+fatal_ () { warn_ "$ME_: hard error: $@"; Exit 99; }
+framework_failure_ () { warn_ "$ME_: set-up failure: $@"; Exit 99; }
+
+# Sanitize this shell to POSIX mode, if possible.
+DUALCASE=1; export DUALCASE
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+    *posix*) set -o posix ;;
+  esac
+fi
+
 # We require $(...) support unconditionally.
 # We require a few additional shell features only when $EXEEXT is nonempty,
 # in order to support automatic $EXEEXT emulation:
 # - hyphen-containing alias names
 # - we prefer to use ${var#...} substitution, rather than having
 #   to work around lack of support for that feature.
-# The following code attempts to find a shell with support for these features
-# and re-exec's it.  If not, it skips the current test.
+# The following code attempts to find a shell with support for these features.
+# If the current shell passes the test, we're done.  Otherwise, test other
+# shells until we find one that passes.  If one is found, re-exec it.
+# If no acceptable shell is found, skip the current test.
+#
+# The "...set -x; P=1 true 2>err..." test is to disqualify any shell that
+# emits "P=1" into err, as /bin/sh from SunOS 5.11 and OpenBSD 4.7 do.
+#
+# Use "9" to indicate success (rather than 0), in case some shell acts
+# like Solaris 10's /bin/sh but exits successfully instead of with status 2.
 
+# Eval this code in a subshell to determine a shell's suitability.
+# 10 - passes all tests; ok to use
+#  9 - ok, but enabling "set -x" corrupts app stderr; prefer higher score
+#  ? - not ok
 gl_shell_test_script_='
 test $(echo y) = y || exit 1
-test -z "$EXEEXT" && exit 0
+score_=10
+if test "$VERBOSE" = yes; then
+  test -n "$( (exec 3>&1; set -x; P=1 true 2>&3) 2> /dev/null)" && score_=9
+fi
+test -z "$EXEEXT" && exit $score_
 shopt -s expand_aliases
 alias a-b="echo zoo"
 v=abx
      test ${v%x} = ab \
   && test ${v#a} = bx \
-  && test $(a-b) = zoo
+  && test $(a-b) = zoo \
+  && exit $score_
 '
 
 if test "x$1" = "x--no-reexec"; then
   shift
 else
-  for re_shell_ in "${CONFIG_SHELL:-no_shell}" /bin/sh bash dash zsh pdksh fail
+  # Assume a working shell.  Export to subshells (setup_ needs this).
+  gl_set_x_corrupts_stderr_=false
+  export gl_set_x_corrupts_stderr_
+
+  # Record the first marginally acceptable shell.
+  marginal_=
+
+  # Search for a shell that meets our requirements.
+  for re_shell_ in __current__ "${CONFIG_SHELL:-no_shell}" \
+      /bin/sh bash dash zsh pdksh fail
   do
     test "$re_shell_" = no_shell && continue
-    test "$re_shell_" = fail && skip_ failed to find an adequate shell
-    if "$re_shell_" -c "$gl_shell_test_script_" 2>/dev/null; then
-      exec "$re_shell_" "$0" --no-reexec "$@"
-      echo "$ME_: exec failed" 1>&2
-      exit 127
+
+    # If we've made it all the way to the sentinel, "fail" without
+    # finding even a marginal shell, skip this test.
+    if test "$re_shell_" = fail; then
+      test -z "$marginal_" && skip_ failed to find an adequate shell
+      re_shell_=$marginal_
+      break
+    fi
+
+    # When testing the current shell, simply "eval" the test code.
+    # Otherwise, run it via $re_shell_ -c ...
+    if test "$re_shell_" = __current__; then
+      # 'eval'ing this code makes Solaris 10's /bin/sh exit with
+      # $? set to 2.  It does not evaluate any of the code after the
+      # "unexpected" first '('.  Thus, we must run it in a subshell.
+      ( eval "$gl_shell_test_script_" ) > /dev/null 2>&1
+    else
+      "$re_shell_" -c "$gl_shell_test_script_" 2>/dev/null
+    fi
+
+    st_=$?
+
+    # $re_shell_ works just fine.  Use it.
+    if test $st_ = 10; then
+      gl_set_x_corrupts_stderr_=false
+      break
+    fi
+
+    # If this is our first marginally acceptable shell, remember it.
+    if test "$st_:$marginal_" = 9: ; then
+      marginal_="$re_shell_"
+      gl_set_x_corrupts_stderr_=true
     fi
   done
+
+  if test "$re_shell_" != __current__; then
+    # Found a usable shell.  Preserve -v and -x.
+    case $- in
+      *v*x* | *x*v*) opts_=-vx ;;
+      *v*) opts_=-v ;;
+      *x*) opts_=-x ;;
+      *) opts_= ;;
+    esac
+    exec "$re_shell_" $opts_ "$0" --no-reexec "$@"
+    echo "$ME_: exec failed" 1>&2
+    exit 127
+  fi
 fi
 
 test -n "$EXEEXT" && shopt -s expand_aliases
 
-# We use a trap below for cleanup.  This requires us to go through
-# hoops to get the right exit status transported through the handler.
-# So use `Exit STATUS' instead of `exit STATUS' inside of the tests.
-# Turn off errexit here so that we don't trip the bug with OSF1/Tru64
-# sh inside this function.
-Exit () { set +e; (exit $1); exit $1; }
-
-# Print warnings (e.g., about skipped and failed tests) to this file number.
-# Override by defining to say, 9, in init.cfg, and putting say,
-# "export ...ENVVAR_SETTINGS...; exec 9>&2; $(SHELL)" in the definition
-# of TESTS_ENVIRONMENT in your tests/Makefile.am file.
-# This is useful when using automake's parallel tests mode, to print
-# the reason for skip/failure to console, rather than to the .log files.
-: ${stderr_fileno_=2}
-
-warn_() { echo "$@" 1>&$stderr_fileno_; }
-fail_() { warn_ "$ME_: failed test: $@"; Exit 1; }
-skip_() { warn_ "$ME_: skipped test: $@"; Exit 77; }
-framework_failure_() { warn_ "$ME_: set-up failure: $@"; Exit 1; }
+# Enable glibc's malloc-perturbing option.
+# This is useful for exposing code that depends on the fact that
+# malloc-related functions often return memory that is mostly zeroed.
+# If you have the time and cycles, use valgrind to do an even better job.
+: ${MALLOC_PERTURB_=87}
+export MALLOC_PERTURB_
 
 # This is a stub function that is run upon trap (upon regular exit and
 # interrupt).  Override it with a per-test function, e.g., to unmount
 # a partition, or to undo any other global state changes.
-cleanup_() { :; }
+cleanup_ () { :; }
 
-if ( diff --version < /dev/null 2>&1 | grep GNU ) 2>&1 > /dev/null; then
-  compare() { diff -u "$@"; }
-elif ( cmp --version < /dev/null 2>&1 | grep GNU ) 2>&1 > /dev/null; then
-  compare() { cmp -s "$@"; }
+# Emit a header similar to that from diff -u;  Print the simulated "diff"
+# command so that the order of arguments is clear.  Don't bother with @@ lines.
+emit_diff_u_header_ ()
+{
+  printf '%s\n' "diff -u $*" \
+    "--- $1	1970-01-01" \
+    "+++ $2	1970-01-01"
+}
+
+# Arrange not to let diff or cmp operate on /dev/null,
+# since on some systems (at least OSF/1 5.1), that doesn't work.
+# When there are not two arguments, or no argument is /dev/null, return 2.
+# When one argument is /dev/null and the other is not empty,
+# cat the nonempty file to stderr and return 1.
+# Otherwise, return 0.
+compare_dev_null_ ()
+{
+  test $# = 2 || return 2
+
+  if test "x$1" = x/dev/null; then
+    test -s "$2" || return 0
+    emit_diff_u_header_ "$@"; sed 's/^/+/' "$2"
+    return 1
+  fi
+
+  if test "x$2" = x/dev/null; then
+    test -s "$1" || return 0
+    emit_diff_u_header_ "$@"; sed 's/^/-/' "$1"
+    return 1
+  fi
+
+  return 2
+}
+
+if diff_out_=`exec 2>/dev/null; diff -u "$0" "$0" < /dev/null`; then
+  if test -z "$diff_out_"; then
+    compare_ () { diff -u "$@"; }
+  else
+    compare_ ()
+    {
+      if diff -u "$@" > diff.out; then
+        # No differences were found, but Solaris 'diff' produces output
+        # "No differences encountered". Hide this output.
+        rm -f diff.out
+        true
+      else
+        cat diff.out
+        rm -f diff.out
+        false
+      fi
+    }
+  fi
+elif diff_out_=`exec 2>/dev/null; diff -c "$0" "$0" < /dev/null`; then
+  if test -z "$diff_out_"; then
+    compare_ () { diff -c "$@"; }
+  else
+    compare_ ()
+    {
+      if diff -c "$@" > diff.out; then
+        # No differences were found, but AIX and HP-UX 'diff' produce output
+        # "No differences encountered" or "There are no differences between the
+        # files.". Hide this output.
+        rm -f diff.out
+        true
+      else
+        cat diff.out
+        rm -f diff.out
+        false
+      fi
+    }
+  fi
+elif ( cmp --version < /dev/null 2>&1 | grep GNU ) > /dev/null 2>&1; then
+  compare_ () { cmp -s "$@"; }
 else
-  compare() { cmp "$@"; }
+  compare_ () { cmp "$@"; }
 fi
 
+# Usage: compare EXPECTED ACTUAL
+#
+# Given compare_dev_null_'s preprocessing, defer to compare_ if 2 or more.
+# Otherwise, propagate $? to caller: any diffs have already been printed.
+compare ()
+{
+  # This looks like it can be factored to use a simple "case $?"
+  # after unchecked compare_dev_null_ invocation, but that would
+  # fail in a "set -e" environment.
+  if compare_dev_null_ "$@"; then
+    return 0
+  else
+    case $? in
+      1) return 1;;
+      *) compare_ "$@";;
+    esac
+  fi
+}
+
 # An arbitrary prefix to help distinguish test directories.
-testdir_prefix_() { printf gt; }
+testdir_prefix_ () { printf gt; }
 
 # Run the user-overridable cleanup_ function, remove the temporary
 # directory and exit with the incoming value of $?.
-remove_tmp_()
+remove_tmp_ ()
 {
   __st=$?
   cleanup_
@@ -143,13 +338,21 @@ remove_tmp_()
 # contains only the specified bytes (see the case stmt below), then print
 # a space-separated list of those names and return 0.  Otherwise, don't
 # print anything and return 1.  Naming constraints apply also to DIR.
-find_exe_basenames_()
+find_exe_basenames_ ()
 {
   feb_dir_=$1
   feb_fail_=0
   feb_result_=
   feb_sp_=
   for feb_file_ in $feb_dir_/*.exe; do
+    # If there was no *.exe file, or there existed a file named "*.exe" that
+    # was deleted between the above glob expansion and the existence test
+    # below, just skip it.
+    test "x$feb_file_" = "x$feb_dir_/*.exe" && test ! -f "$feb_file_" \
+      && continue
+    # Exempt [.exe, since we can't create a function by that name, yet
+    # we can't invoke [ by PATH search anyways due to shell builtins.
+    test "x$feb_file_" = "x$feb_dir_/[.exe" && continue
     case $feb_file_ in
       *[!-a-zA-Z/0-9_.+]*) feb_fail_=1; break;;
       *) # Remove leading file name components as well as the .exe suffix.
@@ -167,8 +370,8 @@ find_exe_basenames_()
 # For each file name of the form PROG.exe, create an alias named
 # PROG that simply invokes PROG.exe, then return 0.  If any selected
 # file name or the directory name, $1, contains an unexpected character,
-# define no function and return 1.
-create_exe_shims_()
+# define no alias and return 1.
+create_exe_shims_ ()
 {
   case $EXEEXT in
     '') return 0 ;;
@@ -177,7 +380,7 @@ create_exe_shims_()
   esac
 
   base_names_=`find_exe_basenames_ $1` \
-    || { echo "$0 (exe_shim): skipping directory: $1" 1>&2; return 1; }
+    || { echo "$0 (exe_shim): skipping directory: $1" 1>&2; return 0; }
 
   if test -n "$base_names_"; then
     for base_ in $base_names_; do
@@ -190,7 +393,7 @@ create_exe_shims_()
 
 # Use this function to prepend to PATH an absolute name for each
 # specified, possibly-$initial_cwd_-relative, directory.
-path_prepend_()
+path_prepend_ ()
 {
   while test $# != 0; do
     path_dir_=$1
@@ -213,21 +416,38 @@ path_prepend_()
   export PATH
 }
 
-setup_()
+setup_ ()
 {
-  test "$VERBOSE" = yes && set -x
+  if test "$VERBOSE" = yes; then
+    # Test whether set -x may cause the selected shell to corrupt an
+    # application's stderr.  Many do, including zsh-4.3.10 and the /bin/sh
+    # from SunOS 5.11, OpenBSD 4.7 and Irix 5.x and 6.5.
+    # If enabling verbose output this way would cause trouble, simply
+    # issue a warning and refrain.
+    if $gl_set_x_corrupts_stderr_; then
+      warn_ "using SHELL=$SHELL with 'set -x' corrupts stderr"
+    else
+      set -x
+    fi
+  fi
 
   initial_cwd_=$PWD
-  ME_=`expr "./$0" : '.*/\(.*\)$'`
+  fail=0
 
   pfx_=`testdir_prefix_`
   test_dir_=`mktempd_ "$initial_cwd_" "$pfx_-$ME_.XXXX"` \
     || fail_ "failed to create temporary directory in $initial_cwd_"
   cd "$test_dir_"
 
-  # These trap statements ensure that the temporary directory, $test_dir_,
-  # is removed upon exit as well as upon receipt of any of the listed signals.
-  trap remove_tmp_ 0
+  # As autoconf-generated configure scripts do, ensure that IFS
+  # is defined initially, so that saving and restoring $IFS works.
+  gl_init_sh_nl_='
+'
+  IFS=" ""	$gl_init_sh_nl_"
+
+  # This trap statement, along with a trap on 0 below, ensure that the
+  # temporary directory, $test_dir_, is removed upon exit as well as
+  # upon receipt of any of the listed signals.
   for sig_ in 1 2 3 13 15; do
     eval "trap 'Exit $(expr $sig_ + 128)' $sig_"
   done
@@ -249,7 +469,7 @@ setup_()
 #  - make only $MAX_TRIES_ attempts
 
 # Helper function.  Print $N pseudo-random bytes from a-zA-Z0-9.
-rand_bytes_()
+rand_bytes_ ()
 {
   n_=$1
 
@@ -281,11 +501,11 @@ rand_bytes_()
     | LC_ALL=C tr -c $chars_ 01234567$chars_$chars_$chars_
 }
 
-mktempd_()
+mktempd_ ()
 {
   case $# in
   2);;
-  *) fail_ "Usage: $ME DIR TEMPLATE";;
+  *) fail_ "Usage: mktempd_ DIR TEMPLATE";;
   esac
 
   destdir_=$1
@@ -302,13 +522,12 @@ mktempd_()
 
   case $template_ in
   *XXXX) ;;
-  *) fail_ "invalid template: $template_ (must have a suffix of at least 4 X's)";;
+  *) fail_ \
+       "invalid template: $template_ (must have a suffix of at least 4 X's)";;
   esac
 
-  fail=0
-
   # First, try to use mktemp.
-  d=`unset TMPDIR; mktemp -d -t -p "$destdir_" "$template_" 2>/dev/null` \
+  d=`unset TMPDIR; { mktemp -d -t -p "$destdir_" "$template_"; } 2>/dev/null` \
     || fail=1
 
   # The resulting name must be in the specified directory.
@@ -355,3 +574,6 @@ test -f "$srcdir/init.cfg" \
   && . "$srcdir/init.cfg"
 
 setup_ "$@"
+# This trap is here, rather than in the setup_ function, because some
+# shells run the exit trap at shell function exit, rather than script exit.
+trap remove_tmp_ 0
diff --git a/tests/label-vs-func b/tests/label-vs-func
index 2026b0a..2de61f7 100755
--- a/tests/label-vs-func
+++ b/tests/label-vs-func
@@ -1,8 +1,7 @@
 #!/bin/sh
 # Show how diff's -p option can mistakenly match a label: in column 1.
 
-: ${srcdir=.}
-. "$srcdir/init.sh"; path_prepend_ ../src
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
 
 fail=0
 cat <<EOF > exp || fail=1
@@ -24,9 +23,9 @@ diff -p -u0 a b > out 2> err; test $? = 1 || fail=1
 
 tail -3 out > k && mv k out || fail=1
 
-compare out exp || fail=1
+compare exp out || fail=1
 
 # expect empty stderr
-compare err /dev/null || fail=1
+compare /dev/null err || fail=1
 
 Exit $fail
diff --git a/tests/no-dereference b/tests/no-dereference
new file mode 100644
index 0000000..1426beb
--- /dev/null
+++ b/tests/no-dereference
@@ -0,0 +1,169 @@
+#!/bin/sh
+# Test the --no-dereference option.
+
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
+
+echo 'Simple contents' > regular1
+echo 'Sample contents' > regular2
+echo 'Sample contents' > regular3
+ln -s regular1 symlink1
+ln -s regular1 symlink1bis
+ln -s regular2 symlink2
+ln -s regular3 symlink3
+
+# Non-recursive comparisons.
+
+# Test case 3: Compare regular file with regular file.
+diff --no-dereference regular1 regular2 > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+1c1
+< Simple contents
+---
+> Sample contents
+EOF
+compare expected out || fail=1
+
+# Test case 4: Compare regular file with symbolic link.
+diff --no-dereference regular1 symlink1 > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+File regular1 is a regular file while file symlink1 is a symbolic link
+EOF
+compare expected out || fail=1
+
+# Test case 5: Compare symbolic link with regular file.
+diff --no-dereference symlink1 regular1 > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+File symlink1 is a symbolic link while file regular1 is a regular file
+EOF
+compare expected out || fail=1
+
+# Test case 6: Compare symbolic links with same value.
+diff --no-dereference symlink1 symlink1bis > out
+test $? = 0 || fail=1
+compare /dev/null out || fail=1
+
+# Test case 7: Compare symbolic links with different value and different target
+# contents.
+diff --no-dereference symlink1 symlink2 > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+Symbolic links symlink1 and symlink2 differ
+EOF
+compare expected out || fail=1
+
+# Test case 8: Compare symbolic links with different value and same target
+# contents.
+diff --no-dereference symlink2 symlink3 > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+Symbolic links symlink2 and symlink3 differ
+EOF
+compare expected out || fail=1
+
+# Recursive comparisons.
+
+# Test case 1: Compare symbolic link with nonexistent file.
+mkdir subdir1a
+mkdir subdir1b
+ln -s nonexistent subdir1a/foo
+ln -s ../regular1 subdir1a/bar
+diff -r --no-dereference subdir1a subdir1b > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+Only in subdir1a: bar
+Only in subdir1a: foo
+EOF
+compare expected out || fail=1
+
+# Test case 1: Compare nonexistent file with symbolic link.
+mkdir subdir2a
+mkdir subdir2b
+ln -s nonexistent subdir2b/foo
+ln -s ../regular1 subdir2b/bar
+diff -r --no-dereference subdir2a subdir2b > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+Only in subdir2b: bar
+Only in subdir2b: foo
+EOF
+compare expected out || fail=1
+
+# Test case 3: Compare regular file with regular file.
+mkdir subdir3a
+mkdir subdir3b
+cp regular1 subdir3a/foo
+cp regular2 subdir3b/foo
+diff -r --no-dereference subdir3a subdir3b > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+diff -r --no-dereference subdir3a/foo subdir3b/foo
+1c1
+< Simple contents
+---
+> Sample contents
+EOF
+compare expected out || fail=1
+
+# Test case 4: Compare regular file with symbolic link.
+mkdir subdir4a
+mkdir subdir4b
+cp regular1 subdir4a/foo
+ln -s ../regular1 subdir4b/foo
+diff -r --no-dereference subdir4a subdir4b > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+File subdir4a/foo is a regular file while file subdir4b/foo is a symbolic link
+EOF
+compare expected out || fail=1
+
+# Test case 5: Compare symbolic link with regular file.
+mkdir subdir5a
+mkdir subdir5b
+ln -s ../regular1 subdir5a/foo
+cp regular1 subdir5b/foo
+diff -r --no-dereference subdir5a subdir5b > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+File subdir5a/foo is a symbolic link while file subdir5b/foo is a regular file
+EOF
+compare expected out || fail=1
+
+# Test case 6: Compare symbolic links with same value.
+mkdir subdir6a
+mkdir subdir6b
+ln -s ../regular1 subdir6a/foo
+ln -s ../regular1 subdir6b/foo
+diff -r --no-dereference subdir6a subdir6b > out
+test $? = 0 || fail=1
+compare /dev/null out || fail=1
+
+# Test case 7: Compare symbolic links with different value and different target
+# contents.
+mkdir subdir7a
+mkdir subdir7b
+ln -s ../regular1 subdir7a/foo
+ln -s ../regular2 subdir7b/foo
+diff -r --no-dereference subdir7a subdir7b > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+Symbolic links subdir7a/foo and subdir7b/foo differ
+EOF
+compare expected out || fail=1
+
+# Test case 8: Compare symbolic links with different value and same target
+# contents.
+mkdir subdir8a
+mkdir subdir8b
+ln -s ../regular2 subdir8a/foo
+ln -s ../regular3 subdir8b/foo
+diff -r --no-dereference subdir8a subdir8b > out
+test $? = 1 || fail=1
+cat <<EOF > expected || framework_failure_
+Symbolic links subdir8a/foo and subdir8b/foo differ
+EOF
+compare expected out || fail=1
+
+Exit $fail
diff --git a/tests/no-newline-at-eof b/tests/no-newline-at-eof
old mode 100644
new mode 100755
index e5dc89d..14d5f49
--- a/tests/no-newline-at-eof
+++ b/tests/no-newline-at-eof
@@ -3,8 +3,7 @@
 # Before the April 2010 fix, the "\ No newline at end of file"
 # line would not be printed.
 
-: ${srcdir=.}
-. "$srcdir/init.sh"; path_prepend_ ../src
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
 
 printf '\n1'      > a || framework_failure_
 printf '\n0\n\n1' > b || framework_failure_
@@ -36,9 +35,9 @@ diff $opt -U1 a b > out 2> err
 test $? = 1 || fail=1
 
 sed -n '/^@@/,$p' out > k && mv k out || fail=1
-compare out exp || fail=1
+compare exp out || fail=1
 # expect empty stderr
-compare err /dev/null || fail=1
+compare /dev/null err || fail=1
 
 # Repeat, but with a newline at the end of "a".
 echo >> a
@@ -47,8 +46,8 @@ diff $opt -U1 a b > out 2> err
 test $? = 1 || fail=1
 
 sed -n '/^@@/,$p' out > k && mv k out || fail=1
-compare out exp2 || fail=1
+compare exp2 out || fail=1
 # expect empty stderr
-compare err /dev/null || fail=1
+compare /dev/null err || fail=1
 
 Exit $fail
diff --git a/tests/stdin b/tests/stdin
index 66ef2bb..295e98d 100755
--- a/tests/stdin
+++ b/tests/stdin
@@ -1,8 +1,7 @@
 #!/bin/sh
 # Ensure that "-" means "standard input".
 
-: ${srcdir=.}
-. "$srcdir/init.sh"; path_prepend_ ../src
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
 
 fail=0
 
@@ -20,6 +19,6 @@ echo b > b
 diff -u - b < a > out 2> err; test $? = 1 || fail=1
 # Remove date and time.
 sed -e 's/^\([-+*][-+*][-+*] [^	]*\)	.*/\1/' out > k; mv k out
-compare out exp || fail=1
+compare exp out || fail=1
 
 Exit $fail
